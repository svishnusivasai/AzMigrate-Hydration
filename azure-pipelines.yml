# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main
- master
- release
- develop

variables:
  REPOROOT: $(Build.SourcesDirectory)
  OUTPUTROOT: $(REPOROOT)\out
  CDP_BUILD_TAG: azurerecoverytools
  
stages:
- stage: build
  jobs:

  # Windows build job
  - job: windows_build
    pool:
      demands:
      - msbuild
      - visualstudio
      vmImage: windows-latest
      type: windows

    variables:
      WindowsContainerImage: 'cdpxwin1809.azurecr.io/global/vse2019:latest'
      ob_outputDirectory: '$(Build.SourcesDirectory)\Out'
      ob_symbolsPublishing_enabled: true
      ob_symbolsPublishing_symbolsFolder: '$(REPOROOT)\Symbols'

    steps:
      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: |
            # Write your PowerShell commands here.
            
            Write-Host "Hello World"
            
            Write-Host "$(Build.SourcesDirectory)\Out"
            
            Write-Host "$(Build.SourcesDirectory)\SourceFiles"
            
            Write-Host "$(OUTPUTROOT)"
            
            Write-Host "$(Build.ArtifactStagingDirectory)"\
      
      # Restore host NuGet packages.
      - task: NuGetCommand@2
        displayName: 'Restore Host NuGet Packages'
        inputs:
          command: 'restore'
          restoreSolution: '$(REPOROOT)\host\host.sln'
          feedsToUse: 'config'
          nugetConfigPath: '$(REPOROOT)\.config\NuGet.config'

      # Build AzureRecoveryUtil.exe.
      - task: MSBuild@1
        displayName: 'Build AzureRecoveryUtil.exe'
        inputs: 
          solution: '$(REPOROOT)\host\host.sln'
          msbuildLocationMethod: 'location'
          msbuildLocation: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe'
          platform: 'win32'
          configuration: 'release'
          msbuildArguments: '-t:AzureRecoveryUtil /v:n /nr:false /flp1:Verbosity=n;LogFile=$(OUTPUTROOT)\logs\AzureRecoveryUtil.log;Encoding=UTF-8 /flp2:logfile=$(OUTPUTROOT)\logs\AzureRecoveryUtil.err;errorsonly /p:Configuration="LIB release - LIB OpenSSL"'
          clean: false
          maximumCpuCount: true
          logProjectEvents: true

      # Copy build artifacts.
      - task: PowerShell@2
        displayName: 'Copy Build Artifacts'
        inputs:
          targetType: 'inline'
          script: |
            Copy-Item -Path $(REPOROOT)\host\AzureRecoveryUtil\Release\AzureRecoveryUtil.exe $(OUTPUTROOT)\
            Copy-Item -Path $(REPOROOT)\host\AzureRecoveryUtil\Release\AzureRecoveryUtil.pdb $(OUTPUTROOT)\
          workingDirectory: '$(REPOROOT)'

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.SourcesDirectory)\SourceFiles'
          ArtifactName: 'drop_build_windows_build'
          publishLocation: 'Container'

      # Capture symbol files.
      - task: PowerShell@2
        displayName: 'Capture Symbol Files'
        inputs:
          targetType: 'inline'
          script: |
            New-Item -Path $(REPOROOT) -Name "Symbols" -ItemType "Directory" -Force
            Copy-Item -Path $(REPOROOT)\host\AzureRecoveryUtil\Release\AzureRecoveryUtil.pdb $(REPOROOT)\Symbols

  # Packaging job
  - job: packaging
    dependsOn:
      - windows_build
    pool:
      vmImage: windows-latest
      type: windows

    steps:
      # Download Windows build artifacts.
    - task: DownloadPipelineArtifact@2
      displayName: 'Download Windows Build Artifacts'
      inputs:
        path: $(OUTPUTROOT)
        artifact: drop_build_windows_build

    # Copy AzureRecoveryTools related files.
    - task: CopyFiles@2
      displayName: 'Copy AzureRecoveryTools Related Files'
      inputs:
        SourceFolder: $(Build.SourcesDirectory)\SourceFiles
        Contents: |
          **/*
          !**/StartupScript.sh
          !**/*.dbg
          !**/*.pdb
          !logs/**/*
          !**/build.manifest*
          !**/*.cvrp
          !cvdata/**/*
        TargetFolder: $(Build.SourcesDirectory)\AzureRecoveryTools

    # Create AzureRecoveryTools.zip
    - task: ArchiveFiles@2
      displayName: 'Create AzureRecoveryTools.zip'
      inputs:
        rootFolderOrFile: $(Build.SourcesDirectory)\AzureRecoveryTools
        archiveFile: out\AzureRecoveryTools.zip
        includeRootFolder: false

    - task: GitHubRelease@1
      inputs:
        gitHubConnection: 'thedarksage'
        repositoryName: 'thedarksage/AzMigrate-Hydration'
        action: 'create'
        target: '$(Build.SourceVersion)'
        tagSource: 'gitTag'
        tagPattern: 'v*.*.*'
        title: 'AzureRecoveryUtil'
        releaseNotesSource: 'inline'
        releaseNotesInline: 'AzureRecoveryUtil Initial Build'
        isPreRelease: true
        changeLogCompareToRelease: 'lastFullRelease'
        changeLogType: 'commitBased'