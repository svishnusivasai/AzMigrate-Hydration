# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main
- master
- release
- develop

variables:
  REPOROOT: $(Build.SourcesDirectory)
  OUTPUTROOT: $(REPOROOT)\out
  CDP_BUILD_TAG: azurerecoverytools
  
resources:
  repositories: 
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/OneBranch.Official.CrossPlat.yml@templates
  parameters:
    cloudvault:
      enabled: true
      runmode: stage
      artifacts:
        - drop_build_windows_build
        - drop_build_packaging

    stages:
    - stage: build
      jobs:

      # Windows build job
      - job: windows_build
        pool:
          demands:
          - msbuild
          - visualstudio
          vmImage: windows-latest
          type: windows-latest

        variables:
          WindowsContainerImage: 'cdpxwin1809.azurecr.io/global/vse2019:latest'
          ob_outputDirectory: '$(Build.SourcesDirectory)\Out'
          ob_symbolsPublishing_enabled: true
          ob_symbolsPublishing_symbolsFolder: '$(REPOROOT)\Symbols'

        steps:
          # Restore host NuGet packages.
          - task: NuGetCommand@2
            displayName: 'Restore Host NuGet Packages'
            inputs:
              command: 'restore'
              restoreSolution: '$(REPOROOT)\host\host.sln'
              feedsToUse: 'config'
              nugetConfigPath: '$(REPOROOT)\.config\NuGet.config'

          # Build AzureRecoveryUtil.exe.
          - task: MSBuild@1
            displayName: 'Build AzureRecoveryUtil.exe'
            inputs: 
              solution: '$(REPOROOT)\host\host.sln'
              msbuildLocationMethod: 'location'
              msbuildLocation: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe'
              platform: 'win32'
              configuration: 'release'
              msbuildArguments: '-t:AzureRecoveryUtil /v:n /nr:false /flp1:Verbosity=n;LogFile=$(OUTPUTROOT)\logs\AzureRecoveryUtil.log;Encoding=UTF-8 /flp2:logfile=$(OUTPUTROOT)\logs\AzureRecoveryUtil.err;errorsonly /p:Configuration="LIB release - LIB OpenSSL"'
              clean: false
              maximumCpuCount: true
              logProjectEvents: true

          # Copy build artifacts.
          - task: PowerShell@2
            displayName: 'Copy Build Artifacts'
            inputs:
              targetType: 'inline'
              script: |
                Copy-Item -Path $(REPOROOT)\host\AzureRecoveryUtil\Release\AzureRecoveryUtil.exe $(OUTPUTROOT)\
                Copy-Item -Path $(REPOROOT)\host\AzureRecoveryUtil\Release\AzureRecoveryUtil.pdb $(OUTPUTROOT)\
              workingDirectory: '$(REPOROOT)'

          # Capture symbol files.
          - task: PowerShell@2
            displayName: 'Capture Symbol Files'
            inputs:
              targetType: 'inline'
              script: |
                New-Item -Path $(REPOROOT) -Name "Symbols" -ItemType "Directory" -Force
                Copy-Item -Path $(REPOROOT)\host\AzureRecoveryUtil\Release\AzureRecoveryUtil.pdb $(REPOROOT)\Symbols

    # Packaging job
      - job: packaging
        dependsOn:
          - windows_build
        pool:
          type: windows

        variables:
          WindowsContainerImage: 'cdpxwin1809.azurecr.io/global/vse2019:latest'
          ob_outputDirectory: '$(Build.SourcesDirectory)\out'

        steps:
        # Download Windows build artifacts.
        - task: DownloadPipelineArtifact@2
          displayName: 'Download Windows Build Artifacts'
          inputs:
            path: $(Build.SourcesDirectory)\SourceFiles
            artifact: drop_build_windows_build

        # Copy AzureRecoveryTools related files.
        - task: CopyFiles@2
          displayName: 'Copy AzureRecoveryTools Related Files'
          inputs:
            SourceFolder: $(Build.SourcesDirectory)\SourceFiles
            Contents: |
              **/*
              !**/StartupScript.sh
              !**/*.dbg
              !**/*.pdb
              !logs/**/*
              !**/build.manifest*
              !**/*.cvrp
              !cvdata/**/*
            TargetFolder: $(Build.SourcesDirectory)\AzureRecoveryTools

        # Create AzureRecoveryTools.zip
        - task: ArchiveFiles@2
          displayName: 'Create AzureRecoveryTools.zip'
          inputs:
            rootFolderOrFile: $(Build.SourcesDirectory)\AzureRecoveryTools
            archiveFile: $(Build.ArtifactStagingDirectory)\out\AzureRecoveryTools.zip
            includeRootFolder: false

        - task: PublishPipelineArtifact@1
          displayName: 'Publish release archives'
          inputs:
            targetPath: $(Build.ArtifactStagingDirectory)
            artifactName: AzureRecoveryUtil
        - task: GitHubRelease@1
          inputs:
            gitHubConnection: 'thedarksage'
            repositoryName: '$(Build.Repository.Name)'
            action: 'create'
            target: '$(Build.SourceVersion)'
            tagSource: 'gitTag'
            tagPattern: 'v*.*.*'
            title: 'AzureRecoveryUtil'
            releaseNotesSource: 'inline'
            releaseNotesInline: 'AzureRecoveryUtil Initial Build'
            isPreRelease: true
            changeLogCompareToRelease: 'lastFullRelease'
            changeLogType: 'commitBased'