<?php
/**
 *$Header: /src/server/db/DbConstants.php,v 1.26.2.2 2017/11/22 09:39:23 srpatnan Exp $
 *================================================================= 
 * FILENAME
 *    DbConstants.php
 *
 * DESCRIPTION
 *    This script contains the parameters used in the Database
 *    upgrade script.
 *
 * HISTORY
 *    Aug 09, 2012 - Padhi - Created
 *=================================================================
 *                 Copyright (c) InMage Systems                    
 *=================================================================
 */

class DbConstants {	

	// Configuration Data
	const DB_NAME = 'svsdb1';
	const DB_NAME_TMP = 'svsdb1_tmp_2012';
	const UPGRADE_SQL_FILE = 'svsdb_upgrade.sql'; // Upgrade SQL, to be generated by the script
	const BACKUP_SQL_FILE = 'svsdb_backup.sql'; // DB backup, to be generated by the script
	const LATEST_SQL_FILE = 'svsdb.sql'; // Latest DB Sql, should be kept in the same path as this script
	const UPGRADE_LOG_FILE_PATH = 'upgrade_error.log';
	const SYNC_TRIGGERS = true;
	const LATEST_SQL_FILE_FOR_TRIGGERS = 'svsdb_triggers.sql'; // Latest DB Sql, should be kept in the same path as this script
	const GENERATE_SQL = 1; // To generate a fresh upgrade Sql (1) , or use the existing Sql (0)	
	
	//Installation directory
	const INSTALLATION_DIR = "/home/svsystems";
	
	// Upgrade pre scripts
	public static $upgrade_pre_scripts = array(
		'retention_db_migration.php',
		'db_migration_script.php',
		'clean_log_files.php'
	);
	
	// Upgrade post scripts
	public static $upgrade_post_scripts = array(
		'db_upgrade.php'
	);
	
	// Exclude Tables
	public static $exclude_tables = array(
	
	);
	
	// Manual Data Tables (Full Sync)
	public static $manual_tables_full_sync = array(
		
		'Applications' => array(
						'pk' => array('id'),
						'fields' => array('Name', 'Alias')),
		'consistencyTagList' => array(
						'pk' => array('id'),
						'fields' => array('ValueName', 'ValueData')),
		'error_template' => array(
						'pk' => array('error_template_id'),
						'fields' => array('error_template_id', 'level', 'mail_subject')),
		'errorCodes' => array(
						'pk' => array('errorCode'),
						'fields'  => array('errorCode', 'errorDescription', 'fixSteps', 'ruleId', 'sideEffects')),
		'eventCodes' => array(
						'pk' => array('errCode'),
						'fields'  => array('errCode', 'apiCode', 'errType', 'errorMsg', 'errPossibleCauses', 'errCorrectiveAction', 'errComponent', 'errManagementFlag', 'errInUse', 'category', 'placeHolders', 'suppressTime')),
		'globalHealthSettings' => array(
						'pk' => array('id'),
						'fields' => array('id','rpoHealth','dataFlowHealth','dataUploadHealth','noCommunication','targetCacheHealth','pauseHealth','licenseHealth','dataConsistencyHealth','retentionHealth','commonConsistencyHealth','applicationProtectionHealth')),
		'logRotationList' => array(
						'pk' => array('id'),
						'fields' => array('logName', 'logPathLinux', 'logPathWindows')),
		'recoveryStepsTemplate' => array(
						'pk' => array('stepId'),
						'fields' => array('stepId', 'process', 'runAt', 'groupId', 'stepSeq', 'applicationType', 'recoveryType')),
		'rules' => array(
						'pk' => array('ruleId'),
						'fields' => array('ruleId', 'rule', 'dayType', 'perpetual', 'runType')),
		'ruleTemplate' => array(
						'pk' => array('ruleId'),
						'fields' => array('ruleName', 'ruleDescription', 'ruleCategory', 'application', 'runLevel', 'runAt', 'DrProtectionCriticalityTarget', 'BackupProtectionCriticalityTarget', 'DrFailoverCriticalityTarget', 'dependency')),
		'transportProtocol' => array(
						'pk' => array('name'),
						'fields' => array('name','id')),
		'vendorInfo' => array(
						'pk' => array('type'),
						'fields' => array('type','name')),
		'volumeType' => array(
						'pk' => array('type'),
						'fields' => array('type', 'name'))
	);
	
	// Manual Data Tables (Partial Sync)
	public static $manual_tables_partial_sync = array(
	
		'dpsLogicalVolumes' => array(
						'pk' => array('deviceName','id'),
						'fields' => array('deviceName', 'id')),	
		'error_policy' => array(
						'pk' => array('error_template_id', 'user_id'),
						'fields' => array('error_template_id', 'user_id'),
						'exclude' => array('error_policy_id')),						
		'frbJobTemplates' => array(
						'pk' => array('id'),
						'fields' => array('templateName', 'templateString'),
						'exclude' => array('id')),
		'frbGlobalSettings' => array(
						'pk' => array(),
						'fields' => array('autoClearLogYear', 'autoClearLogMonth', 'autoClearLogWeek', 'autoClearLogDay')),
		'hosts' => array(
						'pk' => array('id'),
						'fields' => array('id', 'name')),
		'logicalVolumes' => array(
						'pk' => array('hostId', 'deviceName'),
						'fields' => array('hostId', 'deviceName')),
		'nextApplianceLunIdLunNumber' => array(
						'pk' => array('nextLunId', 'nextLunNumber', 'lunIdPrefix'),
						'fields' => array('nextLunId', 'nextLunNumber', 'lunIdPrefix')),
		'processServerDefaultTransportProtocol' => array(
						'pk' => array('os'),
						'fields' => array('os', 'remoteTransportProtocolId', 'localTransportProtocolId')),
		'rxSettings' => array(
						'pk' => array('ValueName'),
						'fields' => array('ValueName')),
		'sanFabrics' => array(
						'pk' => array('fabricId'),
						'fields' => array('fabricId', 'name', 'zoneSetName')),
		'systemHealth' => array(
						'pk' => array('component'),
						'fields' => array('component')),
		'transbandSettings' => array(
						'pk' => array('ValueName'),
						'fields' => array('ValueName'),
						'exclude' => array('id')),
		'users' => array(
						'pk' => array('UID'),
						'fields' => array('UID', 'uname', 'name'))
	);
};	
?>