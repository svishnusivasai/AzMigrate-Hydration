<?php
/**
 * This sourcecode has been generated by InMage Source Code Generator version 1.0
 * The usage of generated code is restricted to InMage Systems Inc.
 *
 * srcLogicalVolumeDestLogicalVolume Value Object[VO]
 * This class is value object representing database table host
 * This class is needs to be used with associated Dao object
 * Generated Date:	Sat, 5 Jul 2008 15:01:34 +0530	
 * Pattern Version:1.0
 */

class SrcLogicalVolumeDestLogicalVolumeVO
{

/**
 * Global variables 
 */
 
 var $ary;
 
 
 
/** 
 * Persistent Instance variables. This data is directly 
 * mapped to the columns of database table.
 */

var $sourceHostId;
var $sourceDeviceName;
var $destinationHostId;
var $destinationDeviceName;
var $fullSyncStartTime;
var $fullSyncEndTime;
var $fullSyncStatus;
var $fullSyncBytesSent;
var $resyncStartTime;
var $resyncEndTime;
var $resyncStatus;
var $lastResyncOffset;
var $differentialStartTime;
var $differentialEndTime;
var $differentialStatus;
var $lastDifferentialOffset;
var $returnhomeEndTime;
var $returnhomeStartTime;
var $returnHomeStatus;
var $lastSentinelChange;
var $lastTMChange;
var $lastOutpostAgentChange;
var $wanLagTicks;
var $shouldResync;
var $remainingDifferentialBytes;
var $remainingResyncBytes;
var $currentRPOTime;
var $statusUpdateTime;
var $profilingMode;
var $rpoSLAThreshold;
var $maxResyncFilesThreshold;
var $ftpsSourceSecureMode;
var $ftpsDestSecureMode;
var $oneToManySource;
var $resyncVersion;
var $compressionEnable;
var $fastResyncMatched;
var $fastResyncUnmatched;
var $jobId;
var $ruleId;
var $mediaretent;
var $logsFrom;
var $logsTo;
var $volumeGroupId;
var $preCommandsource;
var $postCommandsource;
var $isResync;
var $remainingQuasiDiffBytes;
var $isQuasiflag;
var $resyncStartTagtime;
var $resyncStartTagtimeSequence;
var $resyncEndTagtime;
var $resyncEndTagtimeSequence;
var $quasidiffStarttime;
var $quasidiffEndtime;
var $ShouldResyncSetFrom;
var $resyncSettimestamp;
var $resyncSetCxtimestamp;
var $throttleresync;
var $throttleDifferentials;
var $autoResyncStartType;
var $autoResyncStartTime;
var $autoResyncStartHours;
var $autoResyncStartMinutes;
var $autoResyncStopHours;
var $autoResyncStopMinutes;
var $maxCompression;
var $maxUnCompression;
var $profilingId;
var $pairConfigureTime;
var $ftpFailure;
var $Phy_Lunid;
var $lun_state;
var $offset;
var $resyncOrder;
var $executionState;
var $scenarioId;
var $stats;

/** 
 * Constructors. Code generator generates two constructors by default.
 * The first one takes no arguments and provides the most simple
 * way to create object instance. The another one takes one
 * argument, which is the primary key of the corresponding table.
 */

function SrcLogicalVolumeDestLogicalVolumeVO(){

}

/** 
 * Initializes the variables with database specific 
 * defaults.
 */
 function initialize(){
 
	$this->fullSyncStartTime="0000-00-00 00:00:00";
	$this->fullSyncEndTime="0000-00-00 00:00:00";
	$this->fullSyncStatus="0";
	$this->fullSyncBytesSent="0";
	$this->resyncStartTime="0000-00-00 00:00:00";
	$this->resyncEndTime="0000-00-00 00:00:00";
	$this->resyncStatus="0";
	$this->lastResyncOffset="0";
	$this->differentialStartTime="0000-00-00 00:00:00";
	$this->differentialEndTime="0000-00-00 00:00:00";
	$this->differentialStatus="0";
	$this->lastDifferentialOffset="0";
	$this->returnhomeEndTime="0000-00-00 00:00:00";
	$this->returnhomeStartTime="0000-00-00 00:00:00";
	$this->returnHomeStatus="0";
	$this->lastSentinelChange="0000-00-00 00:00:00";
	$this->lastTMChange="0000-00-00 00:00:00";
	$this->lastOutpostAgentChange="0000-00-00 00:00:00";
	$this->wanLagTicks="0";
	$this->shouldResync="0";
	$this->remainingDifferentialBytes="0";
	$this->remainingResyncBytes="0";
	$this->currentRPOTime="0000-00-00 00:00:00";
	$this->statusUpdateTime="0000-00-00 00:00:00";
	$this->profilingMode="0";
	$this->rpoSLAThreshold="0";
	$this->ftpsSourceSecureMode="0";
	$this->ftpsDestSecureMode="0";
	$this->oneToManySource="0";
	$this->resyncVersion="0";
	$this->compressionEnable="0";
	$this->fastResyncMatched="0";
	$this->fastResyncUnmatched="0";
	$this->jobId="0";
	$this->ruleId="0";
	$this->mediaretent="1";
	$this->isResync="0";
	$this->remainingQuasiDiffBytes="0";
	$this->isQuasiflag="0";
	$this->resyncStartTagtime="0";
	$this->resyncStartTagtimeSequence="0";
	$this->resyncEndTagtime="0";
	$this->resyncEndTagtimeSequence="0";
	$this->quasidiffStarttime="0000-00-00 00:00:00";
	$this->quasidiffEndtime="0000-00-00 00:00:00";
	$this->ShouldResyncSetFrom="0";
	$this->resyncSettimestamp="0";
	$this->resyncSetCxtimestamp="0";
	$this->throttleresync="0";
	$this->throttleDifferentials="0";
	$this->autoResyncStartType="0";
	$this->autoResyncStartTime="0";
	$this->autoResyncStartHours="0";
	$this->autoResyncStartMinutes="0";
	$this->autoResyncStopHours="0";
	$this->autoResyncStopMinutes="0";
	$this->maxCompression="0.0000";
	$this->maxUnCompression="0.0000";
	$this->profilingId="0";
	$this->pairConfigureTime="0000-00-00 00:00:00";
	$this->ftpFailure="0";
 }
 
/** 
 * Get and Set methods for persistent variables. 
 */

function get_source_host_id() {
	return $this->sourceHostId;
}
function set_source_host_id($sourceHostIdIn) { 
	$this->sourceHostId=$sourceHostIdIn;
}

function isset_source_host_id() {
	return isset($this->sourceHostId);
}


function get_source_device_name() {
	return $this->sourceDeviceName;
}
function set_source_device_name($sourceDeviceNameIn) { 
	$this->sourceDeviceName=$sourceDeviceNameIn;
}

function isset_source_device_name() {
	return isset($this->sourceDeviceName);
}


function get_destination_host_id() {
	return $this->destinationHostId;
}
function set_destination_host_id($destinationHostIdIn) { 
	$this->destinationHostId=$destinationHostIdIn;
}

function isset_destination_host_id() {
	return isset($this->destinationHostId);
}


function get_destination_device_name() {
	return $this->destinationDeviceName;
}
function set_destination_device_name($destinationDeviceNameIn) { 
	$this->destinationDeviceName=$destinationDeviceNameIn;
}

function isset_destination_device_name() {
	return isset($this->destinationDeviceName);
}


function get_full_sync_start_time() {
	return $this->fullSyncStartTime;
}
function set_full_sync_start_time($fullSyncStartTimeIn) { 
	$this->fullSyncStartTime=$fullSyncStartTimeIn;
}

function isset_full_sync_start_time() {
	return isset($this->fullSyncStartTime);
}


function get_full_sync_end_time() {
	return $this->fullSyncEndTime;
}
function set_full_sync_end_time($fullSyncEndTimeIn) { 
	$this->fullSyncEndTime=$fullSyncEndTimeIn;
}

function isset_full_sync_end_time() {
	return isset($this->fullSyncEndTime);
}


function get_full_sync_status() {
	return $this->fullSyncStatus;
}
function set_full_sync_status($fullSyncStatusIn) { 
	$this->fullSyncStatus=$fullSyncStatusIn;
}

function isset_full_sync_status() {
	return isset($this->fullSyncStatus);
}


function get_full_sync_bytes_sent() {
	return $this->fullSyncBytesSent;
}
function set_full_sync_bytes_sent($fullSyncBytesSentIn) { 
	$this->fullSyncBytesSent=$fullSyncBytesSentIn;
}

function isset_full_sync_bytes_sent() {
	return isset($this->fullSyncBytesSent);
}


function get_resync_start_time() {
	return $this->resyncStartTime;
}
function set_resync_start_time($resyncStartTimeIn) { 
	$this->resyncStartTime=$resyncStartTimeIn;
}

function isset_resync_start_time() {
	return isset($this->resyncStartTime);
}


function get_resync_end_time() {
	return $this->resyncEndTime;
}
function set_resync_end_time($resyncEndTimeIn) { 
	$this->resyncEndTime=$resyncEndTimeIn;
}

function isset_resync_end_time() {
	return isset($this->resyncEndTime);
}


function get_resync_status() {
	return $this->resyncStatus;
}
function set_resync_status($resyncStatusIn) { 
	$this->resyncStatus=$resyncStatusIn;
}

function isset_resync_status() {
	return isset($this->resyncStatus);
}


function get_last_resync_offset() {
	return $this->lastResyncOffset;
}
function set_last_resync_offset($lastResyncOffsetIn) { 
	$this->lastResyncOffset=$lastResyncOffsetIn;
}

function isset_last_resync_offset() {
	return isset($this->lastResyncOffset);
}


function get_differential_start_time() {
	return $this->differentialStartTime;
}
function set_differential_start_time($differentialStartTimeIn) { 
	$this->differentialStartTime=$differentialStartTimeIn;
}

function isset_differential_start_time() {
	return isset($this->differentialStartTime);
}


function get_differential_end_time() {
	return $this->differentialEndTime;
}
function set_differential_end_time($differentialEndTimeIn) { 
	$this->differentialEndTime=$differentialEndTimeIn;
}

function isset_differential_end_time() {
	return isset($this->differentialEndTime);
}


function get_differential_status() {
	return $this->differentialStatus;
}
function set_differential_status($differentialStatusIn) { 
	$this->differentialStatus=$differentialStatusIn;
}

function isset_differential_status() {
	return isset($this->differentialStatus);
}


function get_last_differential_offset() {
	return $this->lastDifferentialOffset;
}
function set_last_differential_offset($lastDifferentialOffsetIn) { 
	$this->lastDifferentialOffset=$lastDifferentialOffsetIn;
}

function isset_last_differential_offset() {
	return isset($this->lastDifferentialOffset);
}


function get_returnhome_end_time() {
	return $this->returnhomeEndTime;
}
function set_returnhome_end_time($returnhomeEndTimeIn) { 
	$this->returnhomeEndTime=$returnhomeEndTimeIn;
}

function isset_returnhome_end_time() {
	return isset($this->returnhomeEndTime);
}


function get_returnhome_start_time() {
	return $this->returnhomeStartTime;
}
function set_returnhome_start_time($returnhomeStartTimeIn) { 
	$this->returnhomeStartTime=$returnhomeStartTimeIn;
}

function isset_returnhome_start_time() {
	return isset($this->returnhomeStartTime);
}


function get_return_home_status() {
	return $this->returnHomeStatus;
}
function set_return_home_status($returnHomeStatusIn) { 
	$this->returnHomeStatus=$returnHomeStatusIn;
}

function isset_return_home_status() {
	return isset($this->returnHomeStatus);
}


function get_last_sentinel_change() {
	return $this->lastSentinelChange;
}
function set_last_sentinel_change($lastSentinelChangeIn) { 
	$this->lastSentinelChange=$lastSentinelChangeIn;
}

function isset_last_sentinel_change() {
	return isset($this->lastSentinelChange);
}


function get_last_t_m_change() {
	return $this->lastTMChange;
}
function set_last_t_m_change($lastTMChangeIn) { 
	$this->lastTMChange=$lastTMChangeIn;
}

function isset_last_t_m_change() {
	return isset($this->lastTMChange);
}


function get_last_outpost_agent_change() {
	return $this->lastOutpostAgentChange;
}
function set_last_outpost_agent_change($lastOutpostAgentChangeIn) { 
	$this->lastOutpostAgentChange=$lastOutpostAgentChangeIn;
}

function isset_last_outpost_agent_change() {
	return isset($this->lastOutpostAgentChange);
}


function get_wan_lag_ticks() {
	return $this->wanLagTicks;
}
function set_wan_lag_ticks($wanLagTicksIn) { 
	$this->wanLagTicks=$wanLagTicksIn;
}

function isset_wan_lag_ticks() {
	return isset($this->wanLagTicks);
}


function get_should_resync() {
	return $this->shouldResync;
}
function set_should_resync($shouldResyncIn) { 
	$this->shouldResync=$shouldResyncIn;
}

function isset_should_resync() {
	return isset($this->shouldResync);
}


function get_remaining_differential_bytes() {
	return $this->remainingDifferentialBytes;
}
function set_remaining_differential_bytes($remainingDifferentialBytesIn) { 
	$this->remainingDifferentialBytes=$remainingDifferentialBytesIn;
}

function isset_remaining_differential_bytes() {
	return isset($this->remainingDifferentialBytes);
}


function get_remaining_resync_bytes() {
	return $this->remainingResyncBytes;
}
function set_remaining_resync_bytes($remainingResyncBytesIn) { 
	$this->remainingResyncBytes=$remainingResyncBytesIn;
}

function isset_remaining_resync_bytes() {
	return isset($this->remainingResyncBytes);
}


function get_current_r_p_o_time() {
	return $this->currentRPOTime;
}
function set_current_r_p_o_time($currentRPOTimeIn) { 
	$this->currentRPOTime=$currentRPOTimeIn;
}

function isset_current_r_p_o_time() {
	return isset($this->currentRPOTime);
}


function get_status_update_time() {
	return $this->statusUpdateTime;
}
function set_status_update_time($statusUpdateTimeIn) { 
	$this->statusUpdateTime=$statusUpdateTimeIn;
}

function isset_status_update_time() {
	return isset($this->statusUpdateTime);
}


function get_profiling_mode() {
	return $this->profilingMode;
}
function set_profiling_mode($profilingModeIn) { 
	$this->profilingMode=$profilingModeIn;
}

function isset_profiling_mode() {
	return isset($this->profilingMode);
}


function get_rpo_s_l_a_threshold() {
	return $this->rpoSLAThreshold;
}
function set_rpo_s_l_a_threshold($rpoSLAThresholdIn) { 
	$this->rpoSLAThreshold=$rpoSLAThresholdIn;
}

function isset_rpo_s_l_a_threshold() {
	return isset($this->rpoSLAThreshold);
}


function get_max_resync_files_threshold() {
	return $this->maxResyncFilesThreshold;
}
function set_max_resync_files_threshold($maxResyncFilesThresholdIn) { 
	$this->maxResyncFilesThreshold=$maxResyncFilesThresholdIn;
}

function isset_max_resync_files_threshold() {
	return isset($this->maxResyncFilesThreshold);
}


function get_ftps_source_secure_mode() {
	return $this->ftpsSourceSecureMode;
}
function set_ftps_source_secure_mode($ftpsSourceSecureModeIn) { 
	$this->ftpsSourceSecureMode=$ftpsSourceSecureModeIn;
}

function isset_ftps_source_secure_mode() {
	return isset($this->ftpsSourceSecureMode);
}


function get_ftps_dest_secure_mode() {
	return $this->ftpsDestSecureMode;
}
function set_ftps_dest_secure_mode($ftpsDestSecureModeIn) { 
	$this->ftpsDestSecureMode=$ftpsDestSecureModeIn;
}

function isset_ftps_dest_secure_mode() {
	return isset($this->ftpsDestSecureMode);
}


function get_one_to_many_source() {
	return $this->oneToManySource;
}
function set_one_to_many_source($oneToManySourceIn) { 
	$this->oneToManySource=$oneToManySourceIn;
}

function isset_one_to_many_source() {
	return isset($this->oneToManySource);
}


function get_resync_version() {
	return $this->resyncVersion;
}
function set_resync_version($resyncVersionIn) { 
	$this->resyncVersion=$resyncVersionIn;
}

function isset_resync_version() {
	return isset($this->resyncVersion);
}


function get_compression_enable() {
	return $this->compressionEnable;
}
function set_compression_enable($compressionEnableIn) { 
	$this->compressionEnable=$compressionEnableIn;
}

function isset_compression_enable() {
	return isset($this->compressionEnable);
}


function get_fast_resync_matched() {
	return $this->fastResyncMatched;
}
function set_fast_resync_matched($fastResyncMatchedIn) { 
	$this->fastResyncMatched=$fastResyncMatchedIn;
}

function isset_fast_resync_matched() {
	return isset($this->fastResyncMatched);
}


function get_fast_resync_unmatched() {
	return $this->fastResyncUnmatched;
}
function set_fast_resync_unmatched($fastResyncUnmatchedIn) { 
	$this->fastResyncUnmatched=$fastResyncUnmatchedIn;
}

function isset_fast_resync_unmatched() {
	return isset($this->fastResyncUnmatched);
}


function get_job_id() {
	return $this->jobId;
}
function set_job_id($jobIdIn) { 
	$this->jobId=$jobIdIn;
}

function isset_job_id() {
	return isset($this->jobId);
}


function get_rule_id() {
	return $this->ruleId;
}
function set_rule_id($ruleIdIn) { 
	$this->ruleId=$ruleIdIn;
}

function isset_rule_id() {
	return isset($this->ruleId);
}


function get_mediaretent() {
	return $this->mediaretent;
}
function set_mediaretent($mediaretentIn) { 
	$this->mediaretent=$mediaretentIn;
}

function isset_mediaretent() {
	return isset($this->mediaretent);
}


function get_logs_from() {
	return $this->logsFrom;
}
function set_logs_from($logsFromIn) { 
	$this->logsFrom=$logsFromIn;
}

function isset_logs_from() {
	return isset($this->logsFrom);
}


function get_logs_to() {
	return $this->logsTo;
}
function set_logs_to($logsToIn) { 
	$this->logsTo=$logsToIn;
}

function isset_logs_to() {
	return isset($this->logsTo);
}


function get_volume_group_id() {
	return $this->volumeGroupId;
}
function set_volume_group_id($volumeGroupIdIn) { 
	$this->volumeGroupId=$volumeGroupIdIn;
}

function isset_volume_group_id() {
	return isset($this->volumeGroupId);
}


function get_pre_commandsource() {
	return $this->preCommandsource;
}
function set_pre_commandsource($preCommandsourceIn) { 
	$this->preCommandsource=$preCommandsourceIn;
}

function isset_pre_commandsource() {
	return isset($this->preCommandsource);
}


function get_post_commandsource() {
	return $this->postCommandsource;
}
function set_post_commandsource($postCommandsourceIn) { 
	$this->postCommandsource=$postCommandsourceIn;
}

function isset_post_commandsource() {
	return isset($this->postCommandsource);
}


function get_is_resync() {
	return $this->isResync;
}
function set_is_resync($isResyncIn) { 
	$this->isResync=$isResyncIn;
}

function isset_is_resync() {
	return isset($this->isResync);
}


function get_remaining_quasi_diff_bytes() {
	return $this->remainingQuasiDiffBytes;
}
function set_remaining_quasi_diff_bytes($remainingQuasiDiffBytesIn) { 
	$this->remainingQuasiDiffBytes=$remainingQuasiDiffBytesIn;
}

function isset_remaining_quasi_diff_bytes() {
	return isset($this->remainingQuasiDiffBytes);
}


function get_is_quasiflag() {
	return $this->isQuasiflag;
}
function set_is_quasiflag($isQuasiflagIn) { 
	$this->isQuasiflag=$isQuasiflagIn;
}

function isset_is_quasiflag() {
	return isset($this->isQuasiflag);
}

function get_is_communicationfrom_source() {
	return $this->isCommunicationfromSource;
}
function set_is_communicationfrom_source($isCommunicationfromSourceIn) { 
	$this->isCommunicationfromSource=$isCommunicationfromSourceIn;
}

function isset_is_communicationfrom_source() {
	return isset($this->isCommunicationfromSource);
}


function get_replication_status() {
	return $this->replication_status;
}
function set_replication_status($replication_statusIn) { 
	$this->replication_status=$replication_statusIn;
}

function isset_replication_status() {
	return isset($this->replication_status);
}


function get_src_replication_status() {
	return $this->src_replication_status;
}
function set_src_replication_status($src_replication_statusIn) { 
	$this->src_replication_status=$src_replication_statusIn;
}

function isset_src_replication_status() {
	return isset($this->src_replication_status);
}


function get_tar_replication_status() {
	return $this->tar_replication_status;
}
function set_tar_replication_status($tar_replication_statusIn) { 
	$this->tar_replication_status=$tar_replication_statusIn;
}

function isset_tar_replication_status() {
	return isset($this->tar_replication_status);
}


function get_differential_pending_in_target() {
	return $this->differentialPendingInTarget;
}
function set_differential_pending_in_target($differentialPendingInTargetIn) { 
	$this->differentialPendingInTarget=$differentialPendingInTargetIn;
}

function isset_differential_pending_in_target() {
	return isset($this->differentialPendingInTarget);
}


function get_differential_apply_rate() {
	return $this->differentialApplyRate;
}
function set_differential_apply_rate($differentialApplyRateIn) { 
	$this->differentialApplyRate=$differentialApplyRateIn;
}

function isset_differential_apply_rate() {
	return isset($this->differentialApplyRate);
}


function get_replication_cleanup_options() {
	return $this->replicationCleanupOptions;
}
function set_replication_cleanup_options($replicationCleanupOptionsIn) { 
	$this->replicationCleanupOptions=$replicationCleanupOptionsIn;
}

function isset_replication_cleanup_options() {
	return isset($this->replicationCleanupOptions);
}

function get_logs_from_u_t_c() {
	return $this->logsFromUTC;
}
function set_logs_from_u_t_c($logsFromUTCIn) { 
	$this->logsFromUTC=$logsFromUTCIn;
}

function isset_logs_from_u_t_c() {
	return isset($this->logsFromUTC);
}


function get_logs_to_u_t_c() {
	return $this->logsToUTC;
}
function set_logs_to_u_t_c($logsToUTCIn) { 
	$this->logsToUTC=$logsToUTCIn;
}

function isset_logs_to_u_t_c() {
	return isset($this->logsToUTC);
}


function get_phy__lunid() {
	return $this->Phy_Lunid;
}
function set_phy__lunid($Phy_LunidIn) { 
	$this->Phy_Lunid=$Phy_LunidIn;
}

function isset_phy__lunid() {
	return isset($this->Phy_Lunid);
}


function get_lun_state() {
	return $this->lun_state;
}
function set_lun_state($lun_stateIn) { 
	$this->lun_state=$lun_stateIn;
}

function isset_lun_state() {
	return isset($this->lun_state);
}


function get_offset() {
	return $this->offset;
}
function set_offset($offsetIn) { 
	$this->offset=$offsetIn;
}

function isset_offset() {
	return isset($this->offset);
}


function get_resync_counter() {
	return $this->resyncCounter;
}
function set_resync_counter($resyncCounterIn) { 
	$this->resyncCounter=$resyncCounterIn;
}

function isset_resync_counter() {
	return isset($this->resyncCounter);
}


function get_process_server_id() {
	return $this->processServerId;
}
function set_process_server_id($processServerIdIn) { 
	$this->processServerId=$processServerIdIn;
}

function isset_process_server_id() {
	return isset($this->processServerId);
}


function get_deleted() {
	return $this->deleted;
}
function set_deleted($deletedIn) { 
	$this->deleted=$deletedIn;
}

function isset_deleted() {
	return isset($this->deleted);
}


function get_pause_activity() {
	return $this->pauseActivity;
}
function set_pause_activity($pauseActivityIn) { 
	$this->pauseActivity=$pauseActivityIn;
}

function isset_pause_activity() {
	return isset($this->pauseActivity);
}


function get_auto_resume() {
	return $this->autoResume;
}
function set_auto_resume($autoResumeIn) { 
	$this->autoResume=$autoResumeIn;
}

function isset_auto_resume() {
	return isset($this->autoResume);
}


function get_restart_resync_counter() {
	return $this->restartResyncCounter;
}
function set_restart_resync_counter($restartResyncCounterIn) { 
	$this->restartResyncCounter=$restartResyncCounterIn;
}

function isset_restart_resync_counter() {
	return isset($this->restartResyncCounter);
}



function get_resync_start_tagtime() {
	return $this->resyncStartTagtime;
}
function set_resync_start_tagtime($resyncStartTagtimeIn) { 
	$this->resyncStartTagtime=$resyncStartTagtimeIn;
}

function isset_resync_start_tagtime() {
	return isset($this->resyncStartTagtime);
}

function get_plan_id() {
	return $this->planId;
}
function set_plan_id($planIdIn) { 
	$this->planId=$planIdIn;
}

function isset_plan_id() {
	return isset($this->planId);
}


function get_scenario_id() {
	return $this->scenarioId;
}
function set_scenario_id($scenarioIdIn) { 
	$this->scenarioId=$scenarioIdIn;
}

function isset_scenario_id() {
	return isset($this->scenarioId);
}


function get_application_type() {
	return $this->applicationType;
}
function set_application_type($applicationTypeIn) { 
	$this->applicationType=$applicationTypeIn;
}

function isset_application_type() {
	return isset($this->applicationType);
}


function get_resync_order() {
	return $this->resyncOrder;
}
function set_resync_order($resyncOrderIn) { 
	$this->resyncOrder=$resyncOrderIn;
}

function isset_resync_order() {
	return isset($this->resyncOrder);
}

function get_resync_start_tagtime_sequence() {
	return $this->resyncStartTagtimeSequence;
}
function set_resync_start_tagtime_sequence($resyncStartTagtimeSequenceIn) { 
	$this->resyncStartTagtimeSequence=$resyncStartTagtimeSequenceIn;
}

function isset_resync_start_tagtime_sequence() {
	return isset($this->resyncStartTagtimeSequence);
}


function get_resync_end_tagtime() {
	return $this->resyncEndTagtime;
}
function set_resync_end_tagtime($resyncEndTagtimeIn) { 
	$this->resyncEndTagtime=$resyncEndTagtimeIn;
}

function isset_resync_end_tagtime() {
	return isset($this->resyncEndTagtime);
}


function get_resync_end_tagtime_sequence() {
	return $this->resyncEndTagtimeSequence;
}
function set_resync_end_tagtime_sequence($resyncEndTagtimeSequenceIn) { 
	$this->resyncEndTagtimeSequence=$resyncEndTagtimeSequenceIn;
}

function isset_resync_end_tagtime_sequence() {
	return isset($this->resyncEndTagtimeSequence);
}


function get_quasidiff_starttime() {
	return $this->quasidiffStarttime;
}
function set_quasidiff_starttime($quasidiffStarttimeIn) { 
	$this->quasidiffStarttime=$quasidiffStarttimeIn;
}

function isset_quasidiff_starttime() {
	return isset($this->quasidiffStarttime);
}


function get_quasidiff_endtime() {
	return $this->quasidiffEndtime;
}
function set_quasidiff_endtime($quasidiffEndtimeIn) { 
	$this->quasidiffEndtime=$quasidiffEndtimeIn;
}

function isset_quasidiff_endtime() {
	return isset($this->quasidiffEndtime);
}


function get_should_resync_set_from() {
	return $this->ShouldResyncSetFrom;
}
function set_should_resync_set_from($ShouldResyncSetFromIn) { 
	$this->ShouldResyncSetFrom=$ShouldResyncSetFromIn;
}

function isset_should_resync_set_from() {
	return isset($this->ShouldResyncSetFrom);
}


function get_resync_settimestamp() {
	return $this->resyncSettimestamp;
}
function set_resync_settimestamp($resyncSettimestampIn) { 
	$this->resyncSettimestamp=$resyncSettimestampIn;
}

function isset_resync_settimestamp() {
	return isset($this->resyncSettimestamp);
}


function get_resync_set_cxtimestamp() {
	return $this->resyncSetCxtimestamp;
}
function set_resync_set_cxtimestamp($resyncSetCxtimestampIn) { 
	$this->resyncSetCxtimestamp=$resyncSetCxtimestampIn;
}

function isset_resync_set_cxtimestamp() {
	return isset($this->resyncSetCxtimestamp);
}


function get_throttleresync() {
	return $this->throttleresync;
}
function set_throttleresync($throttleresyncIn) { 
	$this->throttleresync=$throttleresyncIn;
}

function isset_throttleresync() {
	return isset($this->throttleresync);
}


function get_throttle_differentials() {
	return $this->throttleDifferentials;
}
function set_throttle_differentials($throttleDifferentialsIn) { 
	$this->throttleDifferentials=$throttleDifferentialsIn;
}

function isset_throttle_differentials() {
	return isset($this->throttleDifferentials);
}


function get_auto_resync_start_type() {
	return $this->autoResyncStartType;
}
function set_auto_resync_start_type($autoResyncStartTypeIn) { 
	$this->autoResyncStartType=$autoResyncStartTypeIn;
}

function isset_auto_resync_start_type() {
	return isset($this->autoResyncStartType);
}


function get_auto_resync_start_time() {
	return $this->autoResyncStartTime;
}
function set_auto_resync_start_time($autoResyncStartTimeIn) { 
	$this->autoResyncStartTime=$autoResyncStartTimeIn;
}

function isset_auto_resync_start_time() {
	return isset($this->autoResyncStartTime);
}


function get_auto_resync_start_hours() {
	return $this->autoResyncStartHours;
}
function set_auto_resync_start_hours($autoResyncStartHoursIn) { 
	$this->autoResyncStartHours=$autoResyncStartHoursIn;
}

function isset_auto_resync_start_hours() {
	return isset($this->autoResyncStartHours);
}


function get_auto_resync_start_minutes() {
	return $this->autoResyncStartMinutes;
}
function set_auto_resync_start_minutes($autoResyncStartMinutesIn) { 
	$this->autoResyncStartMinutes=$autoResyncStartMinutesIn;
}

function isset_auto_resync_start_minutes() {
	return isset($this->autoResyncStartMinutes);
}


function get_auto_resync_stop_hours() {
	return $this->autoResyncStopHours;
}
function set_auto_resync_stop_hours($autoResyncStopHoursIn) { 
	$this->autoResyncStopHours=$autoResyncStopHoursIn;
}

function isset_auto_resync_stop_hours() {
	return isset($this->autoResyncStopHours);
}


function get_auto_resync_stop_minutes() {
	return $this->autoResyncStopMinutes;
}
function set_auto_resync_stop_minutes($autoResyncStopMinutesIn) { 
	$this->autoResyncStopMinutes=$autoResyncStopMinutesIn;
}

function isset_auto_resync_stop_minutes() {
	return isset($this->autoResyncStopMinutes);
}


function get_max_compression() {
	return $this->maxCompression;
}
function set_max_compression($maxCompressionIn) { 
	$this->maxCompression=$maxCompressionIn;
}

function isset_max_compression() {
	return isset($this->maxCompression);
}


function get_max_un_compression() {
	return $this->maxUnCompression;
}
function set_max_un_compression($maxUnCompressionIn) { 
	$this->maxUnCompression=$maxUnCompressionIn;
}

function isset_max_un_compression() {
	return isset($this->maxUnCompression);
}


function get_profiling_id() {
	return $this->profilingId;
}
function set_profiling_id($profilingIdIn) { 
	$this->profilingId=$profilingIdIn;
}

function isset_profiling_id() {
	return isset($this->profilingId);
}


function get_pair_configure_time() {
	return $this->pairConfigureTime;
}
function set_pair_configure_time($pairConfigureTimeIn) { 
	$this->pairConfigureTime=$pairConfigureTimeIn;
}

function isset_pair_configure_time() {
	return isset($this->pairConfigureTime);
}


function get_ftp_failure() {
	return $this->ftpFailure;
}
function set_ftp_failure($ftpFailureIn) { 
	$this->ftpFailure=$ftpFailureIn;
}

function isset_ftp_failure() {
	return isset($this->ftpFailure);
}

function get_execution_state() {
	return $this->executionState;
}
function set_execution_state($executionStateIn) { 
	$this->executionState=$executionStateIn;
}

function isset_execution_state() {
	return isset($this->executionState);
}

function get_stats() {
	return $this->stats;
}

function set_stats($statsIn) { 
	$this->stats=$statsIn;
}

function isset_stats() {
	return isset($this->stats);
}

/** 
 * setAll allows to set all persistent variables in one method call.
 * This is useful, when all data is available and it is needed to 
 * set the initial state of this object. Note that this method will
 * directly modify instance variales, without going trough the 
 * individual set-methods.
 */
function setAll($sourceHostIdIn,$sourceDeviceNameIn,$destinationHostIdIn,$destinationDeviceNameIn,$fullSyncStartTimeIn,$fullSyncEndTimeIn,$fullSyncStatusIn,$fullSyncBytesSentIn,$resyncStartTimeIn,$resyncEndTimeIn,$resyncStatusIn,$lastResyncOffsetIn,$differentialStartTimeIn,$differentialEndTimeIn,$differentialStatusIn,$lastDifferentialOffsetIn,$returnhomeEndTimeIn,$returnhomeStartTimeIn,$returnHomeStatusIn,$lastSentinelChangeIn,$lastTMChangeIn,$lastOutpostAgentChangeIn,$wanLagTicksIn,$shouldResyncIn,$remainingDifferentialBytesIn,$remainingResyncBytesIn,$currentRPOTimeIn,$statusUpdateTimeIn,$profilingModeIn,$rpoSLAThresholdIn,$maxResyncFilesThresholdIn,$ftpsSourceSecureModeIn,$ftpsDestSecureModeIn,$oneToManySourceIn,$resyncVersionIn,$compressionEnableIn,$fastResyncMatchedIn,$fastResyncUnmatchedIn,$jobIdIn,$ruleIdIn,$mediaretentIn,$logsFromIn,$logsToIn,$volumeGroupIdIn,$preCommandsourceIn,$postCommandsourceIn,$isResyncIn,$remainingQuasiDiffBytesIn,$isQuasiflagIn,$resyncStartTagtimeIn,$resyncStartTagtimeSequenceIn,$resyncEndTagtimeIn,$resyncEndTagtimeSequenceIn,$quasidiffStarttimeIn,$quasidiffEndtimeIn,$ShouldResyncSetFromIn,$resyncSettimestampIn,$resyncSetCxtimestampIn,$throttleresyncIn,$throttleDifferentialsIn,$autoResyncStartTypeIn,$autoResyncStartTimeIn,$autoResyncStartHoursIn,$autoResyncStartMinutesIn,$autoResyncStopHoursIn,$autoResyncStopMinutesIn,$maxCompressionIn,$maxUnCompressionIn,$profilingIdIn,$pairConfigureTimeIn,$ftpFailureIn,$Phy_LunidIn,$lun_stateIn,$offsetIn,$statsIn){
	$this->sourceHostId=$sourceHostIdIn;
	$this->sourceDeviceName=$sourceDeviceNameIn;
	$this->destinationHostId=$destinationHostIdIn;
	$this->destinationDeviceName=$destinationDeviceNameIn;
	$this->fullSyncStartTime=$fullSyncStartTimeIn;
	$this->fullSyncEndTime=$fullSyncEndTimeIn;
	$this->fullSyncStatus=$fullSyncStatusIn;
	$this->fullSyncBytesSent=$fullSyncBytesSentIn;
	$this->resyncStartTime=$resyncStartTimeIn;
	$this->resyncEndTime=$resyncEndTimeIn;
	$this->resyncStatus=$resyncStatusIn;
	$this->lastResyncOffset=$lastResyncOffsetIn;
	$this->differentialStartTime=$differentialStartTimeIn;
	$this->differentialEndTime=$differentialEndTimeIn;
	$this->differentialStatus=$differentialStatusIn;
	$this->lastDifferentialOffset=$lastDifferentialOffsetIn;
	$this->returnhomeEndTime=$returnhomeEndTimeIn;
	$this->returnhomeStartTime=$returnhomeStartTimeIn;
	$this->returnHomeStatus=$returnHomeStatusIn;
	$this->lastSentinelChange=$lastSentinelChangeIn;
	$this->lastTMChange=$lastTMChangeIn;
	$this->lastOutpostAgentChange=$lastOutpostAgentChangeIn;
	$this->wanLagTicks=$wanLagTicksIn;
	$this->shouldResync=$shouldResyncIn;
	$this->remainingDifferentialBytes=$remainingDifferentialBytesIn;
	$this->remainingResyncBytes=$remainingResyncBytesIn;
	$this->currentRPOTime=$currentRPOTimeIn;
	$this->statusUpdateTime=$statusUpdateTimeIn;
	$this->profilingMode=$profilingModeIn;
	$this->rpoSLAThreshold=$rpoSLAThresholdIn;
	$this->maxResyncFilesThreshold=$maxResyncFilesThresholdIn;
	$this->ftpsSourceSecureMode=$ftpsSourceSecureModeIn;
	$this->ftpsDestSecureMode=$ftpsDestSecureModeIn;
	$this->oneToManySource=$oneToManySourceIn;
	$this->resyncVersion=$resyncVersionIn;
	$this->compressionEnable=$compressionEnableIn;
	$this->fastResyncMatched=$fastResyncMatchedIn;
	$this->fastResyncUnmatched=$fastResyncUnmatchedIn;
	$this->jobId=$jobIdIn;
	$this->ruleId=$ruleIdIn;
	$this->mediaretent=$mediaretentIn;
	$this->logsFrom=$logsFromIn;
	$this->logsTo=$logsToIn;
	$this->volumeGroupId=$volumeGroupIdIn;
	$this->preCommandsource=$preCommandsourceIn;
	$this->postCommandsource=$postCommandsourceIn;
	$this->isResync=$isResyncIn;
	$this->remainingQuasiDiffBytes=$remainingQuasiDiffBytesIn;
	$this->isQuasiflag=$isQuasiflagIn;
	$this->resyncStartTagtime=$resyncStartTagtimeIn;
	$this->resyncStartTagtimeSequence=$resyncStartTagtimeSequenceIn;
	$this->resyncEndTagtime=$resyncEndTagtimeIn;
	$this->resyncEndTagtimeSequence=$resyncEndTagtimeSequenceIn;
	$this->quasidiffStarttime=$quasidiffStarttimeIn;
	$this->quasidiffEndtime=$quasidiffEndtimeIn;
	$this->ShouldResyncSetFrom=$ShouldResyncSetFromIn;
	$this->resyncSettimestamp=$resyncSettimestampIn;
	$this->resyncSetCxtimestamp=$resyncSetCxtimestampIn;
	$this->throttleresync=$throttleresyncIn;
	$this->throttleDifferentials=$throttleDifferentialsIn;
	$this->autoResyncStartType=$autoResyncStartTypeIn;
	$this->autoResyncStartTime=$autoResyncStartTimeIn;
	$this->autoResyncStartHours=$autoResyncStartHoursIn;
	$this->autoResyncStartMinutes=$autoResyncStartMinutesIn;
	$this->autoResyncStopHours=$autoResyncStopHoursIn;
	$this->autoResyncStopMinutes=$autoResyncStopMinutesIn;
	$this->maxCompression=$maxCompressionIn;
	$this->maxUnCompression=$maxUnCompressionIn;
	$this->profilingId=$profilingIdIn;
	$this->pairConfigureTime=$pairConfigureTimeIn;
	$this->ftpFailure=$ftpFailureIn;
	$this->Phy_Lunid=$Phy_LunidIn;
	$this->lun_state=$lun_stateIn;
	$this->offset=$offsetIn;
	$this->stats=$statsIn;
}

/** 
 * setAry allows copy the contents of an associative array 
 * to the member variables
 */
function setAry($ary){ 
	$this->ary=$ary;
	$this->sourceHostId=$ary["sourceHostId"];
	$this->sourceDeviceName=$ary["sourceDeviceName"];
	$this->destinationHostId=$ary["destinationHostId"];
	$this->destinationDeviceName=$ary["destinationDeviceName"];
	$this->fullSyncStartTime=$ary["fullSyncStartTime"];
	$this->fullSyncEndTime=$ary["fullSyncEndTime"];
	$this->fullSyncStatus=$ary["fullSyncStatus"];
	$this->fullSyncBytesSent=$ary["fullSyncBytesSent"];
	$this->resyncStartTime=$ary["resyncStartTime"];
	$this->resyncEndTime=$ary["resyncEndTime"];
	$this->resyncStatus=$ary["resyncStatus"];
	$this->lastResyncOffset=$ary["lastResyncOffset"];
	$this->differentialStartTime=$ary["differentialStartTime"];
	$this->differentialEndTime=$ary["differentialEndTime"];
	$this->differentialStatus=$ary["differentialStatus"];
	$this->lastDifferentialOffset=$ary["lastDifferentialOffset"];
	$this->returnhomeEndTime=$ary["returnhomeEndTime"];
	$this->returnhomeStartTime=$ary["returnhomeStartTime"];
	$this->returnHomeStatus=$ary["returnHomeStatus"];
	$this->lastSentinelChange=$ary["lastSentinelChange"];
	$this->lastTMChange=$ary["lastTMChange"];
	$this->lastOutpostAgentChange=$ary["lastOutpostAgentChange"];
	$this->wanLagTicks=$ary["wanLagTicks"];
	$this->shouldResync=$ary["shouldResync"];
	$this->remainingDifferentialBytes=$ary["remainingDifferentialBytes"];
	$this->remainingResyncBytes=$ary["remainingResyncBytes"];
	$this->currentRPOTime=$ary["currentRPOTime"];
	$this->statusUpdateTime=$ary["statusUpdateTime"];
	$this->profilingMode=$ary["profilingMode"];
	$this->rpoSLAThreshold=$ary["rpoSLAThreshold"];
	$this->maxResyncFilesThreshold=$ary["maxResyncFilesThreshold"];
	$this->ftpsSourceSecureMode=$ary["ftpsSourceSecureMode"];
	$this->ftpsDestSecureMode=$ary["ftpsDestSecureMode"];
	$this->oneToManySource=$ary["oneToManySource"];
	$this->resyncVersion=$ary["resyncVersion"];
	$this->compressionEnable=$ary["compressionEnable"];
	$this->fastResyncMatched=$ary["fastResyncMatched"];
	$this->fastResyncUnmatched=$ary["fastResyncUnmatched"];
	$this->jobId=$ary["jobId"];
	$this->ruleId=$ary["ruleId"];
	$this->mediaretent=$ary["mediaretent"];
	$this->logsFrom=$ary["logsFrom"];
	$this->logsTo=$ary["logsTo"];
	$this->volumeGroupId=$ary["volumeGroupId"];
	$this->preCommandsource=$ary["preCommandsource"];
	$this->postCommandsource=$ary["postCommandsource"];
	$this->isResync=$ary["isResync"];
	$this->remainingQuasiDiffBytes=$ary["remainingQuasiDiffBytes"];
	$this->isQuasiflag=$ary["isQuasiflag"];
	$this->resyncStartTagtime=$ary["resyncStartTagtime"];
	$this->resyncStartTagtimeSequence=$ary["resyncStartTagtimeSequence"];
	$this->resyncEndTagtime=$ary["resyncEndTagtime"];
	$this->resyncEndTagtimeSequence=$ary["resyncEndTagtimeSequence"];
	$this->quasidiffStarttime=$ary["quasidiffStarttime"];
	$this->quasidiffEndtime=$ary["quasidiffEndtime"];
	$this->ShouldResyncSetFrom=$ary["ShouldResyncSetFrom"];
	$this->resyncSettimestamp=$ary["resyncSettimestamp"];
	$this->resyncSetCxtimestamp=$ary["resyncSetCxtimestamp"];
	$this->throttleresync=$ary["throttleresync"];
	$this->throttleDifferentials=$ary["throttleDifferentials"];
	$this->autoResyncStartType=$ary["autoResyncStartType"];
	$this->autoResyncStartTime=$ary["autoResyncStartTime"];
	$this->autoResyncStartHours=$ary["autoResyncStartHours"];
	$this->autoResyncStartMinutes=$ary["autoResyncStartMinutes"];
	$this->autoResyncStopHours=$ary["autoResyncStopHours"];
	$this->autoResyncStopMinutes=$ary["autoResyncStopMinutes"];
	$this->maxCompression=$ary["maxCompression"];
	$this->maxUnCompression=$ary["maxUnCompression"];
	$this->profilingId=$ary["profilingId"];
	$this->pairConfigureTime=$ary["pairConfigureTime"];
	$this->ftpFailure=$ary["ftpFailure"];
	$this->Phy_Lunid=$ary["Phy_Lunid"];
	$this->lun_state=$ary["lun_state"];
	$this->offset=$ary["offset"];
	$this->stats=$ary["stats"];
}

/** 
 * returns an associative array representing the object
 * if the object values are loaded as result of DB operation, then the array
 * return would equivalent of the row returned DB resultset 
 */
function getAry(){ 
	$oAry = array();
	if (isset($this->ary))
	{
		$oAry = $this->ary;
	}
	else
	{
		$oAry["sourceHostId"]=$this->sourceHostId;
		$oAry["sourceDeviceName"]=$this->sourceDeviceName;
		$oAry["destinationHostId"]=$this->destinationHostId;
		$oAry["destinationDeviceName"]=$this->destinationDeviceName;
		$oAry["fullSyncStartTime"]=$this->fullSyncStartTime;
		$oAry["fullSyncEndTime"]=$this->fullSyncEndTime;
		$oAry["fullSyncStatus"]=$this->fullSyncStatus;
		$oAry["fullSyncBytesSent"]=$this->fullSyncBytesSent;
		$oAry["resyncStartTime"]=$this->resyncStartTime;
		$oAry["resyncEndTime"]=$this->resyncEndTime;
		$oAry["resyncStatus"]=$this->resyncStatus;
		$oAry["lastResyncOffset"]=$this->lastResyncOffset;
		$oAry["differentialStartTime"]=$this->differentialStartTime;
		$oAry["differentialEndTime"]=$this->differentialEndTime;
		$oAry["differentialStatus"]=$this->differentialStatus;
		$oAry["lastDifferentialOffset"]=$this->lastDifferentialOffset;
		$oAry["returnhomeEndTime"]=$this->returnhomeEndTime;
		$oAry["returnhomeStartTime"]=$this->returnhomeStartTime;
		$oAry["returnHomeStatus"]=$this->returnHomeStatus;
		$oAry["lastSentinelChange"]=$this->lastSentinelChange;
		$oAry["lastTMChange"]=$this->lastTMChange;
		$oAry["lastOutpostAgentChange"]=$this->lastOutpostAgentChange;
		$oAry["wanLagTicks"]=$this->wanLagTicks;
		$oAry["shouldResync"]=$this->shouldResync;
		$oAry["remainingDifferentialBytes"]=$this->remainingDifferentialBytes;
		$oAry["remainingResyncBytes"]=$this->remainingResyncBytes;
		$oAry["currentRPOTime"]=$this->currentRPOTime;
		$oAry["statusUpdateTime"]=$this->statusUpdateTime;
		$oAry["profilingMode"]=$this->profilingMode;
		$oAry["rpoSLAThreshold"]=$this->rpoSLAThreshold;
		$oAry["maxResyncFilesThreshold"]=$this->maxResyncFilesThreshold;
		$oAry["ftpsSourceSecureMode"]=$this->ftpsSourceSecureMode;
		$oAry["ftpsDestSecureMode"]=$this->ftpsDestSecureMode;
		$oAry["oneToManySource"]=$this->oneToManySource;
		$oAry["resyncVersion"]=$this->resyncVersion;
		$oAry["compressionEnable"]=$this->compressionEnable;
		$oAry["fastResyncMatched"]=$this->fastResyncMatched;
		$oAry["fastResyncUnmatched"]=$this->fastResyncUnmatched;
		$oAry["jobId"]=$this->jobId;
		$oAry["ruleId"]=$this->ruleId;
		$oAry["mediaretent"]=$this->mediaretent;
		$oAry["logsFrom"]=$this->logsFrom;
		$oAry["logsTo"]=$this->logsTo;
		$oAry["volumeGroupId"]=$this->volumeGroupId;
		$oAry["preCommandsource"]=$this->preCommandsource;
		$oAry["postCommandsource"]=$this->postCommandsource;
		$oAry["isResync"]=$this->isResync;
		$oAry["remainingQuasiDiffBytes"]=$this->remainingQuasiDiffBytes;
		$oAry["isQuasiflag"]=$this->isQuasiflag;
		$oAry["resyncStartTagtime"]=$this->resyncStartTagtime;
		$oAry["resyncStartTagtimeSequence"]=$this->resyncStartTagtimeSequence;
		$oAry["resyncEndTagtime"]=$this->resyncEndTagtime;
		$oAry["resyncEndTagtimeSequence"]=$this->resyncEndTagtimeSequence;
		$oAry["quasidiffStarttime"]=$this->quasidiffStarttime;
		$oAry["quasidiffEndtime"]=$this->quasidiffEndtime;
		$oAry["ShouldResyncSetFrom"]=$this->ShouldResyncSetFrom;
		$oAry["resyncSettimestamp"]=$this->resyncSettimestamp;
		$oAry["resyncSetCxtimestamp"]=$this->resyncSetCxtimestamp;
		$oAry["throttleresync"]=$this->throttleresync;
		$oAry["throttleDifferentials"]=$this->throttleDifferentials;
		$oAry["autoResyncStartType"]=$this->autoResyncStartType;
		$oAry["autoResyncStartTime"]=$this->autoResyncStartTime;
		$oAry["autoResyncStartHours"]=$this->autoResyncStartHours;
		$oAry["autoResyncStartMinutes"]=$this->autoResyncStartMinutes;
		$oAry["autoResyncStopHours"]=$this->autoResyncStopHours;
		$oAry["autoResyncStopMinutes"]=$this->autoResyncStopMinutes;
		$oAry["maxCompression"]=$this->maxCompression;
		$oAry["maxUnCompression"]=$this->maxUnCompression;
		$oAry["profilingId"]=$this->profilingId;
		$oAry["pairConfigureTime"]=$this->pairConfigureTime;
		$oAry["ftpFailure"]=$this->ftpFailure;
		$oAry["Phy_Lunid"]=$this->Phy_Lunid;
		$oAry["lun_state"]=$this->lun_state;
		$oAry["offset"]=$this->offset;
		$oAry["stats"]=$this->stats;
	}
	return $oAry;
} 

 /** 
  * hasEqualMapping-method will compare two Host instances
  * and return true if they contain same values in all persistent instance 
  * variables. If hasEqualMapping returns true, it does not mean the objects
  * are the same instance. However it does mean that in that moment, they 
  * are mapped to the same row in database.
  */
function hasEqualMapping($valueObject){
	if ($valueObject->get_source_host_id() != $this->sourceHostId) {
		return(false);
	}
	if ($valueObject->get_source_device_name() != $this->sourceDeviceName) {
		return(false);
	}
	if ($valueObject->get_destination_host_id() != $this->destinationHostId) {
		return(false);
	}
	if ($valueObject->get_destination_device_name() != $this->destinationDeviceName) {
		return(false);
	}
	if ($valueObject->get_full_sync_start_time() != $this->fullSyncStartTime) {
		return(false);
	}
	if ($valueObject->get_full_sync_end_time() != $this->fullSyncEndTime) {
		return(false);
	}
	if ($valueObject->get_full_sync_status() != $this->fullSyncStatus) {
		return(false);
	}
	if ($valueObject->get_full_sync_bytes_sent() != $this->fullSyncBytesSent) {
		return(false);
	}
	if ($valueObject->get_resync_start_time() != $this->resyncStartTime) {
		return(false);
	}
	if ($valueObject->get_resync_end_time() != $this->resyncEndTime) {
		return(false);
	}
	if ($valueObject->get_resync_status() != $this->resyncStatus) {
		return(false);
	}
	if ($valueObject->get_last_resync_offset() != $this->lastResyncOffset) {
		return(false);
	}
	if ($valueObject->get_differential_start_time() != $this->differentialStartTime) {
		return(false);
	}
	if ($valueObject->get_differential_end_time() != $this->differentialEndTime) {
		return(false);
	}
	if ($valueObject->get_differential_status() != $this->differentialStatus) {
		return(false);
	}
	if ($valueObject->get_last_differential_offset() != $this->lastDifferentialOffset) {
		return(false);
	}
	if ($valueObject->get_returnhome_end_time() != $this->returnhomeEndTime) {
		return(false);
	}
	if ($valueObject->get_returnhome_start_time() != $this->returnhomeStartTime) {
		return(false);
	}
	if ($valueObject->get_return_home_status() != $this->returnHomeStatus) {
		return(false);
	}
	if ($valueObject->get_last_sentinel_change() != $this->lastSentinelChange) {
		return(false);
	}
	if ($valueObject->get_last_t_m_change() != $this->lastTMChange) {
		return(false);
	}
	if ($valueObject->get_last_outpost_agent_change() != $this->lastOutpostAgentChange) {
		return(false);
	}
	if ($valueObject->get_wan_lag_ticks() != $this->wanLagTicks) {
		return(false);
	}
	if ($valueObject->get_should_resync() != $this->shouldResync) {
		return(false);
	}
	if ($valueObject->get_remaining_differential_bytes() != $this->remainingDifferentialBytes) {
		return(false);
	}
	if ($valueObject->get_remaining_resync_bytes() != $this->remainingResyncBytes) {
		return(false);
	}
	if ($valueObject->get_current_r_p_o_time() != $this->currentRPOTime) {
		return(false);
	}
	if ($valueObject->get_status_update_time() != $this->statusUpdateTime) {
		return(false);
	}
	if ($valueObject->get_profiling_mode() != $this->profilingMode) {
		return(false);
	}
	if ($valueObject->get_rpo_s_l_a_threshold() != $this->rpoSLAThreshold) {
		return(false);
	}
	if ($valueObject->get_max_resync_files_threshold() != $this->maxResyncFilesThreshold) {
		return(false);
	}
	if ($valueObject->get_ftps_source_secure_mode() != $this->ftpsSourceSecureMode) {
		return(false);
	}
	if ($valueObject->get_ftps_dest_secure_mode() != $this->ftpsDestSecureMode) {
		return(false);
	}
	if ($valueObject->get_one_to_many_source() != $this->oneToManySource) {
		return(false);
	}
	if ($valueObject->get_resync_version() != $this->resyncVersion) {
		return(false);
	}
	if ($valueObject->get_compression_enable() != $this->compressionEnable) {
		return(false);
	}
	if ($valueObject->get_fast_resync_matched() != $this->fastResyncMatched) {
		return(false);
	}
	if ($valueObject->get_fast_resync_unmatched() != $this->fastResyncUnmatched) {
		return(false);
	}
	if ($valueObject->get_job_id() != $this->jobId) {
		return(false);
	}
	if ($valueObject->get_rule_id() != $this->ruleId) {
		return(false);
	}
	if ($valueObject->get_mediaretent() != $this->mediaretent) {
		return(false);
	}
	if ($valueObject->get_logs_from() != $this->logsFrom) {
		return(false);
	}
	if ($valueObject->get_logs_to() != $this->logsTo) {
		return(false);
	}
	if ($valueObject->get_volume_group_id() != $this->volumeGroupId) {
		return(false);
	}
	if ($valueObject->get_pre_commandsource() != $this->preCommandsource) {
		return(false);
	}
	if ($valueObject->get_post_commandsource() != $this->postCommandsource) {
		return(false);
	}
	if ($valueObject->get_is_resync() != $this->isResync) {
		return(false);
	}
	if ($valueObject->get_remaining_quasi_diff_bytes() != $this->remainingQuasiDiffBytes) {
		return(false);
	}
	if ($valueObject->get_is_quasiflag() != $this->isQuasiflag) {
		return(false);
	}
	if ($valueObject->get_resync_start_tagtime() != $this->resyncStartTagtime) {
		return(false);
	}
	if ($valueObject->get_resync_start_tagtime_sequence() != $this->resyncStartTagtimeSequence) {
		return(false);
	}
	if ($valueObject->get_resync_end_tagtime() != $this->resyncEndTagtime) {
		return(false);
	}
	if ($valueObject->get_resync_end_tagtime_sequence() != $this->resyncEndTagtimeSequence) {
		return(false);
	}
	if ($valueObject->get_quasidiff_starttime() != $this->quasidiffStarttime) {
		return(false);
	}
	if ($valueObject->get_quasidiff_endtime() != $this->quasidiffEndtime) {
		return(false);
	}
	if ($valueObject->get_should_resync_set_from() != $this->ShouldResyncSetFrom) {
		return(false);
	}
	if ($valueObject->get_resync_settimestamp() != $this->resyncSettimestamp) {
		return(false);
	}
	if ($valueObject->get_resync_set_cxtimestamp() != $this->resyncSetCxtimestamp) {
		return(false);
	}
	if ($valueObject->get_throttleresync() != $this->throttleresync) {
		return(false);
	}
	if ($valueObject->get_throttle_differentials() != $this->throttleDifferentials) {
		return(false);
	}
	if ($valueObject->get_auto_resync_start_type() != $this->autoResyncStartType) {
		return(false);
	}
	if ($valueObject->get_auto_resync_start_time() != $this->autoResyncStartTime) {
		return(false);
	}
	if ($valueObject->get_auto_resync_start_hours() != $this->autoResyncStartHours) {
		return(false);
	}
	if ($valueObject->get_auto_resync_start_minutes() != $this->autoResyncStartMinutes) {
		return(false);
	}
	if ($valueObject->get_auto_resync_stop_hours() != $this->autoResyncStopHours) {
		return(false);
	}
	if ($valueObject->get_auto_resync_stop_minutes() != $this->autoResyncStopMinutes) {
		return(false);
	}
	if ($valueObject->get_max_compression() != $this->maxCompression) {
		return(false);
	}
	if ($valueObject->get_max_un_compression() != $this->maxUnCompression) {
		return(false);
	}
	if ($valueObject->get_profiling_id() != $this->profilingId) {
		return(false);
	}
	if ($valueObject->get_pair_configure_time() != $this->pairConfigureTime) {
		return(false);
	}
	if ($valueObject->get_ftp_failure() != $this->ftpFailure) {
		return(false);
	}
	if ($valueObject->get_phy__lunid() != $this->Phy_Lunid) {
		return(false);
	}
	if ($valueObject->get_lun_state() != $this->lun_state) {
		return(false);
	}
	if ($valueObject->get_offset() != $this->offset) {
		return(false);
	}
	if ($valueObject->get_stats() != $this->stats) {
		return(false);
	}
    return true;
 }
 
/**
 * toString will return String object representing the state of this 
 * valueObject. This is useful during application development, and 
 * possibly when application is writing object states in textlog.
 */
function toString() {
	$out = $this->get_codegen_version();
	$out = $out."\nclass SrcLogicalVolumeDestLogicalVolumeVO, mapping to table srcLogicalVolumeDestLogicalVolume\n";
	$out = $out."Persistent attributes: \n";
	$out = $out."sourceHostId = ".$this->sourceHostId."\n";
	$out = $out."sourceDeviceName = ".$this->sourceDeviceName."\n";
	$out = $out."destinationHostId = ".$this->destinationHostId."\n";
	$out = $out."destinationDeviceName = ".$this->destinationDeviceName."\n";
	$out = $out."fullSyncStartTime = ".$this->fullSyncStartTime."\n";
	$out = $out."fullSyncEndTime = ".$this->fullSyncEndTime."\n";
	$out = $out."fullSyncStatus = ".$this->fullSyncStatus."\n";
	$out = $out."fullSyncBytesSent = ".$this->fullSyncBytesSent."\n";
	$out = $out."resyncStartTime = ".$this->resyncStartTime."\n";
	$out = $out."resyncEndTime = ".$this->resyncEndTime."\n";
	$out = $out."resyncStatus = ".$this->resyncStatus."\n";
	$out = $out."lastResyncOffset = ".$this->lastResyncOffset."\n";
	$out = $out."differentialStartTime = ".$this->differentialStartTime."\n";
	$out = $out."differentialEndTime = ".$this->differentialEndTime."\n";
	$out = $out."differentialStatus = ".$this->differentialStatus."\n";
	$out = $out."lastDifferentialOffset = ".$this->lastDifferentialOffset."\n";
	$out = $out."returnhomeEndTime = ".$this->returnhomeEndTime."\n";
	$out = $out."returnhomeStartTime = ".$this->returnhomeStartTime."\n";
	$out = $out."returnHomeStatus = ".$this->returnHomeStatus."\n";
	$out = $out."lastSentinelChange = ".$this->lastSentinelChange."\n";
	$out = $out."lastTMChange = ".$this->lastTMChange."\n";
	$out = $out."lastOutpostAgentChange = ".$this->lastOutpostAgentChange."\n";
	$out = $out."wanLagTicks = ".$this->wanLagTicks."\n";
	$out = $out."shouldResync = ".$this->shouldResync."\n";
	$out = $out."remainingDifferentialBytes = ".$this->remainingDifferentialBytes."\n";
	$out = $out."remainingResyncBytes = ".$this->remainingResyncBytes."\n";
	$out = $out."currentRPOTime = ".$this->currentRPOTime."\n";
	$out = $out."statusUpdateTime = ".$this->statusUpdateTime."\n";
	$out = $out."profilingMode = ".$this->profilingMode."\n";
	$out = $out."rpoSLAThreshold = ".$this->rpoSLAThreshold."\n";
	$out = $out."maxResyncFilesThreshold = ".$this->maxResyncFilesThreshold."\n";
	$out = $out."ftpsSourceSecureMode = ".$this->ftpsSourceSecureMode."\n";
	$out = $out."ftpsDestSecureMode = ".$this->ftpsDestSecureMode."\n";
	$out = $out."oneToManySource = ".$this->oneToManySource."\n";
	$out = $out."resyncVersion = ".$this->resyncVersion."\n";
	$out = $out."compressionEnable = ".$this->compressionEnable."\n";
	$out = $out."fastResyncMatched = ".$this->fastResyncMatched."\n";
	$out = $out."fastResyncUnmatched = ".$this->fastResyncUnmatched."\n";
	$out = $out."jobId = ".$this->jobId."\n";
	$out = $out."ruleId = ".$this->ruleId."\n";
	$out = $out."mediaretent = ".$this->mediaretent."\n";
	$out = $out."logsFrom = ".$this->logsFrom."\n";
	$out = $out."logsTo = ".$this->logsTo."\n";
	$out = $out."volumeGroupId = ".$this->volumeGroupId."\n";
	$out = $out."preCommandsource = ".$this->preCommandsource."\n";
	$out = $out."postCommandsource = ".$this->postCommandsource."\n";
	$out = $out."isResync = ".$this->isResync."\n";
	$out = $out."remainingQuasiDiffBytes = ".$this->remainingQuasiDiffBytes."\n";
	$out = $out."isQuasiflag = ".$this->isQuasiflag."\n";
	$out = $out."resyncStartTagtime = ".$this->resyncStartTagtime."\n";
	$out = $out."resyncStartTagtimeSequence = ".$this->resyncStartTagtimeSequence."\n";
	$out = $out."resyncEndTagtime = ".$this->resyncEndTagtime."\n";
	$out = $out."resyncEndTagtimeSequence = ".$this->resyncEndTagtimeSequence."\n";
	$out = $out."quasidiffStarttime = ".$this->quasidiffStarttime."\n";
	$out = $out."quasidiffEndtime = ".$this->quasidiffEndtime."\n";
	$out = $out."ShouldResyncSetFrom = ".$this->ShouldResyncSetFrom."\n";
	$out = $out."resyncSettimestamp = ".$this->resyncSettimestamp."\n";
	$out = $out."resyncSetCxtimestamp = ".$this->resyncSetCxtimestamp."\n";
	$out = $out."throttleresync = ".$this->throttleresync."\n";
	$out = $out."throttleDifferentials = ".$this->throttleDifferentials."\n";
	$out = $out."autoResyncStartType = ".$this->autoResyncStartType."\n";
	$out = $out."autoResyncStartTime = ".$this->autoResyncStartTime."\n";
	$out = $out."autoResyncStartHours = ".$this->autoResyncStartHours."\n";
	$out = $out."autoResyncStartMinutes = ".$this->autoResyncStartMinutes."\n";
	$out = $out."autoResyncStopHours = ".$this->autoResyncStopHours."\n";
	$out = $out."autoResyncStopMinutes = ".$this->autoResyncStopMinutes."\n";
	$out = $out."maxCompression = ".$this->maxCompression."\n";
	$out = $out."maxUnCompression = ".$this->maxUnCompression."\n";
	$out = $out."profilingId = ".$this->profilingId."\n";
	$out = $out."pairConfigureTime = ".$this->pairConfigureTime."\n";
	$out = $out."ftpFailure = ".$this->ftpFailure."\n";
	$out = $out."Phy_Lunid = ".$this->Phy_Lunid."\n";
	$out = $out."lun_state = ".$this->lun_state."\n";
	$out = $out."offset = ".$this->offset."\n";
	$out = $out."stats = ".$this->stats."\n";
	return $out;
}

/**
 * Clone will return identical deep copy of this valueObject.
 * Here, the retuned cloned object will have all its attributes cloned
 */
function __clone() {
	$cloned = new SrcLogicalVolumeDestLogicalVolumeVO();
	
	 $cloned->set_source_host_id($this->sourceHostId);
	 $cloned->set_source_device_name($this->sourceDeviceName);
	 $cloned->set_destination_host_id($this->destinationHostId);
	 $cloned->set_destination_device_name($this->destinationDeviceName);
	 $cloned->set_full_sync_start_time($this->fullSyncStartTime);
	 $cloned->set_full_sync_end_time($this->fullSyncEndTime);
	 $cloned->set_full_sync_status($this->fullSyncStatus);
	 $cloned->set_full_sync_bytes_sent($this->fullSyncBytesSent);
	 $cloned->set_resync_start_time($this->resyncStartTime);
	 $cloned->set_resync_end_time($this->resyncEndTime);
	 $cloned->set_resync_status($this->resyncStatus);
	 $cloned->set_last_resync_offset($this->lastResyncOffset);
	 $cloned->set_differential_start_time($this->differentialStartTime);
	 $cloned->set_differential_end_time($this->differentialEndTime);
	 $cloned->set_differential_status($this->differentialStatus);
	 $cloned->set_last_differential_offset($this->lastDifferentialOffset);
	 $cloned->set_returnhome_end_time($this->returnhomeEndTime);
	 $cloned->set_returnhome_start_time($this->returnhomeStartTime);
	 $cloned->set_return_home_status($this->returnHomeStatus);
	 $cloned->set_last_sentinel_change($this->lastSentinelChange);
	 $cloned->set_last_t_m_change($this->lastTMChange);
	 $cloned->set_last_outpost_agent_change($this->lastOutpostAgentChange);
	 $cloned->set_wan_lag_ticks($this->wanLagTicks);
	 $cloned->set_should_resync($this->shouldResync);
	 $cloned->set_remaining_differential_bytes($this->remainingDifferentialBytes);
	 $cloned->set_remaining_resync_bytes($this->remainingResyncBytes);
	 $cloned->set_current_r_p_o_time($this->currentRPOTime);
	 $cloned->set_status_update_time($this->statusUpdateTime);
	 $cloned->set_profiling_mode($this->profilingMode);
	 $cloned->set_rpo_s_l_a_threshold($this->rpoSLAThreshold);
	 $cloned->set_max_resync_files_threshold($this->maxResyncFilesThreshold);
	 $cloned->set_ftps_source_secure_mode($this->ftpsSourceSecureMode);
	 $cloned->set_ftps_dest_secure_mode($this->ftpsDestSecureMode);
	 $cloned->set_one_to_many_source($this->oneToManySource);
	 $cloned->set_resync_version($this->resyncVersion);
	 $cloned->set_compression_enable($this->compressionEnable);
	 $cloned->set_fast_resync_matched($this->fastResyncMatched);
	 $cloned->set_fast_resync_unmatched($this->fastResyncUnmatched);
	 $cloned->set_job_id($this->jobId);
	 $cloned->set_rule_id($this->ruleId);
	 $cloned->set_mediaretent($this->mediaretent);
	 $cloned->set_logs_from($this->logsFrom);
	 $cloned->set_logs_to($this->logsTo);
	 $cloned->set_volume_group_id($this->volumeGroupId);
	 $cloned->set_pre_commandsource($this->preCommandsource);
	 $cloned->set_post_commandsource($this->postCommandsource);
	 $cloned->set_is_resync($this->isResync);
	 $cloned->set_remaining_quasi_diff_bytes($this->remainingQuasiDiffBytes);
	 $cloned->set_is_quasiflag($this->isQuasiflag);
	 $cloned->set_resync_start_tagtime($this->resyncStartTagtime);
	 $cloned->set_resync_start_tagtime_sequence($this->resyncStartTagtimeSequence);
	 $cloned->set_resync_end_tagtime($this->resyncEndTagtime);
	 $cloned->set_resync_end_tagtime_sequence($this->resyncEndTagtimeSequence);
	 $cloned->set_quasidiff_starttime($this->quasidiffStarttime);
	 $cloned->set_quasidiff_endtime($this->quasidiffEndtime);
	 $cloned->set_should_resync_set_from($this->ShouldResyncSetFrom);
	 $cloned->set_resync_settimestamp($this->resyncSettimestamp);
	 $cloned->set_resync_set_cxtimestamp($this->resyncSetCxtimestamp);
	 $cloned->set_throttleresync($this->throttleresync);
	 $cloned->set_throttle_differentials($this->throttleDifferentials);
	 $cloned->set_auto_resync_start_type($this->autoResyncStartType);
	 $cloned->set_auto_resync_start_time($this->autoResyncStartTime);
	 $cloned->set_auto_resync_start_hours($this->autoResyncStartHours);
	 $cloned->set_auto_resync_start_minutes($this->autoResyncStartMinutes);
	 $cloned->set_auto_resync_stop_hours($this->autoResyncStopHours);
	 $cloned->set_auto_resync_stop_minutes($this->autoResyncStopMinutes);
	 $cloned->set_max_compression($this->maxCompression);
	 $cloned->set_max_un_compression($this->maxUnCompression);
	 $cloned->set_profiling_id($this->profilingId);
	 $cloned->set_pair_configure_time($this->pairConfigureTime);
	 $cloned->set_ftp_failure($this->ftpFailure);
	 $cloned->set_phy__lunid($this->Phy_Lunid);
	 $cloned->set_lun_state($this->lun_state);
	 $cloned->set_offset($this->offset);
	 $cloned->set_stats($this->stats);
	
	return $cloned;
}

/** 
 * getCodegenVersion will return information about
 * generator which created these sources.
 */
function get_codegen_version() {
    return  "1.0";
 }
/** 
 * getCodegenTemplateVersion will return information about
 * generator which created these sources.
 */
function get_codegen_template_version() {
    return  "PHPVO-1.7";
 }

}
?>
