<?php
/**
 * This sourcecode has been generated by InMage Source Code Generator version 1.0
 * The usage of generated code is restricted to InMage Systems Inc.
 *
 * snapshotMain Value Object[VO]
 * This class is value object representing database table host
 * This class is needs to be used with associated Dao object
 * Generated Date:	Tue, 27 Nov 2007 14:01:29 +0530	
 * Pattern Version:1.0
 */

class SnapshotMainVO
{

/**
 * Global variables 
 */
 
 public $ary;
 
 
 
/** 
 * Persistent Instance variables. This data is directly 
 * mapped to the columns of database table.
 */

public $snapshotId;
public $srcHostid;
public $srcDeviceName;
public $destHostid;
public $destDeviceName;
public $pending;
public $bytesSent;
public $status;
public $typeOfsnapshot;
public $volumeType;
public $preCommandsource;
public $postCommandsource;
public $snapScheduleId;
public $scheduledVol;
public $lastScheduledVol;
public $lastUpdateTime;
public $indVolflag;
public $indVolumes;
public $Deleted;
public $queueState;
public $ruleId;
public $clusterFlag;
public $userBookmark;
public $deleteLog;
public $readWrite;
public $dataLogPath;
public $ranNo;

/** 
 * Constructors. Code generator generates two constructors by default.
 * The first one takes no arguments and provides the most simple
 * way to create object instance. The another one takes one
 * argument, which is the primary key of the corresponding table.
 */

function SnapshotMainVO(){

}

/*
	function SnapshotMainVO(snapshotIdIn){
 this->snapshotId=$snapshotIdIn;
}
*/

/** 
 * Initializes the variables with database specific 
 * defaults.
 */
 function initialize(){
 
	$this->pending="0";
	$this->bytesSent="0";
	$this->status="0";
	$this->typeOfsnapshot="0";
	$this->volumeType="0";
	$this->lastUpdateTime="0000-00-00 00:00:00";
	$this->indVolflag="0";
	$this->queueState="0";
	$this->ruleId="0";
	$this->clusterFlag="0";
	$this->deleteLog="0";
 }
 
/** 
 * Get and Set methods for persistent variables. 
 */

function get_snapshot_id() {
	return $this->snapshotId;
}
function set_snapshot_id($snapshotIdIn) { 
	$this->snapshotId=$snapshotIdIn;
}

function isset_snapshot_id() {
	return isset($this->snapshotId);
}


function get_src_hostid() {
	return $this->srcHostid;
}
function set_src_hostid($srcHostidIn) { 
	$this->srcHostid=$srcHostidIn;
}

function isset_src_hostid() {
	return isset($this->srcHostid);
}


function get_src_device_name() {
	return $this->srcDeviceName;
}
function set_src_device_name($srcDeviceNameIn) { 
	$this->srcDeviceName=$srcDeviceNameIn;
}

function isset_src_device_name() {
	return isset($this->srcDeviceName);
}


function get_dest_hostid() {
	return $this->destHostid;
}
function set_dest_hostid($destHostidIn) { 
	$this->destHostid=$destHostidIn;
}

function isset_dest_hostid() {
	return isset($this->destHostid);
}


function get_dest_device_name() {
	return $this->destDeviceName;
}
function set_dest_device_name($destDeviceNameIn) { 
	$this->destDeviceName=$destDeviceNameIn;
}

function isset_dest_device_name() {
	return isset($this->destDeviceName);
}


function get_pending() {
	return $this->pending;
}
function set_pending($pendingIn) { 
	$this->pending=$pendingIn;
}

function isset_pending() {
	return isset($this->pending);
}


function get_bytes_sent() {
	return $this->bytesSent;
}
function set_bytes_sent($bytesSentIn) { 
	$this->bytesSent=$bytesSentIn;
}

function isset_bytes_sent() {
	return isset($this->bytesSent);
}


function get_status() {
	return $this->status;
}
function set_status($statusIn) { 
	$this->status=$statusIn;
}

function isset_status() {
	return isset($this->status);
}


function get_type_ofsnapshot() {
	return $this->typeOfsnapshot;
}
function set_type_ofsnapshot($typeOfsnapshotIn) { 
	$this->typeOfsnapshot=$typeOfsnapshotIn;
}

function isset_type_ofsnapshot() {
	return isset($this->typeOfsnapshot);
}


function get_volume_type() {
	return $this->volumeType;
}
function set_volume_type($volumeTypeIn) { 
	$this->volumeType=$volumeTypeIn;
}

function isset_volume_type() {
	return isset($this->volumeType);
}


function get_pre_commandsource() {
	return $this->preCommandsource;
}
function set_pre_commandsource($preCommandsourceIn) { 
	$this->preCommandsource=$preCommandsourceIn;
}

function isset_pre_commandsource() {
	return isset($this->preCommandsource);
}


function get_post_commandsource() {
	return $this->postCommandsource;
}
function set_post_commandsource($postCommandsourceIn) { 
	$this->postCommandsource=$postCommandsourceIn;
}

function isset_post_commandsource() {
	return isset($this->postCommandsource);
}


function get_snap_schedule_id() {
	return $this->snapScheduleId;
}
function set_snap_schedule_id($snapScheduleIdIn) { 
	$this->snapScheduleId=$snapScheduleIdIn;
}

function isset_snap_schedule_id() {
	return isset($this->snapScheduleId);
}


function get_scheduled_vol() {
	return $this->scheduledVol;
}
function set_scheduled_vol($scheduledVolIn) { 
	$this->scheduledVol=$scheduledVolIn;
}

function isset_scheduled_vol() {
	return isset($this->scheduledVol);
}


function get_last_scheduled_vol() {
	return $this->lastScheduledVol;
}
function set_last_scheduled_vol($lastScheduledVolIn) { 
	$this->lastScheduledVol=$lastScheduledVolIn;
}

function isset_last_scheduled_vol() {
	return isset($this->lastScheduledVol);
}


function get_last_update_time() {
	return $this->lastUpdateTime;
}
function set_last_update_time($lastUpdateTimeIn) { 
	$this->lastUpdateTime=$lastUpdateTimeIn;
}

function isset_last_update_time() {
	return isset($this->lastUpdateTime);
}


function get_ind_volflag() {
	return $this->indVolflag;
}
function set_ind_volflag($indVolflagIn) { 
	$this->indVolflag=$indVolflagIn;
}

function isset_ind_volflag() {
	return isset($this->indVolflag);
}


function get_ind_volumes() {
	return $this->indVolumes;
}
function set_ind_volumes($indVolumesIn) { 
	$this->indVolumes=$indVolumesIn;
}

function isset_ind_volumes() {
	return isset($this->indVolumes);
}


function get_deleted() {
	return $this->Deleted;
}
function set_deleted($DeletedIn) { 
	$this->Deleted=$DeletedIn;
}

function isset_deleted() {
	return isset($this->Deleted);
}


function get_queue_state() {
	return $this->queueState;
}
function set_queue_state($queueStateIn) { 
	$this->queueState=$queueStateIn;
}

function isset_queue_state() {
	return isset($this->queueState);
}


function get_rule_id() {
	return $this->ruleId;
}
function set_rule_id($ruleIdIn) { 
	$this->ruleId=$ruleIdIn;
}

function isset_rule_id() {
	return isset($this->ruleId);
}


function get_cluster_flag() {
	return $this->clusterFlag;
}
function set_cluster_flag($clusterFlagIn) { 
	$this->clusterFlag=$clusterFlagIn;
}

function isset_cluster_flag() {
	return isset($this->clusterFlag);
}


function get_user_bookmark() {
	return $this->userBookmark;
}
function set_user_bookmark($userBookmarkIn) { 
	$this->userBookmark=$userBookmarkIn;
}

function isset_user_bookmark() {
	return isset($this->userBookmark);
}


function get_delete_log() {
	return $this->deleteLog;
}
function set_delete_log($deleteLogIn) { 
	$this->deleteLog=$deleteLogIn;
}

function isset_delete_log() {
	return isset($this->deleteLog);
}


function get_read_write() {
	return $this->readWrite;
}
function set_read_write($readWriteIn) { 
	$this->readWrite=$readWriteIn;
}

function isset_read_write() {
	return isset($this->readWrite);
}


function get_data_log_path() {
	return $this->dataLogPath;
}
function set_data_log_path($dataLogPathIn) { 
	$this->dataLogPath=$dataLogPathIn;
}

function isset_data_log_path() {
	return isset($this->dataLogPath);
}


function get_ran_no() {
	return $this->ranNo;
}
function set_ran_no($ranNoIn) { 
	$this->ranNo=$ranNoIn;
}

function isset_ran_no() {
	return isset($this->ranNo);
}


/** 
 * setAll allows to set all persistent variables in one method call.
 * This is useful, when all data is available and it is needed to 
 * set the initial state of this object. Note that this method will
 * directly modify instance variales, without going trough the 
 * individual set-methods.
 */
function setAll($snapshotIdIn,$srcHostidIn,$srcDeviceNameIn,$destHostidIn,$destDeviceNameIn,$pendingIn,$bytesSentIn,$statusIn,$typeOfsnapshotIn,$volumeTypeIn,$preCommandsourceIn,$postCommandsourceIn,$snapScheduleIdIn,$scheduledVolIn,$lastScheduledVolIn,$lastUpdateTimeIn,$indVolflagIn,$indVolumesIn,$DeletedIn,$queueStateIn,$ruleIdIn,$clusterFlagIn,$userBookmarkIn,$deleteLogIn,$readWriteIn,$dataLogPathIn,$ranNoIn){
	$this->snapshotId=$snapshotIdIn;
	$this->srcHostid=$srcHostidIn;
	$this->srcDeviceName=$srcDeviceNameIn;
	$this->destHostid=$destHostidIn;
	$this->destDeviceName=$destDeviceNameIn;
	$this->pending=$pendingIn;
	$this->bytesSent=$bytesSentIn;
	$this->status=$statusIn;
	$this->typeOfsnapshot=$typeOfsnapshotIn;
	$this->volumeType=$volumeTypeIn;
	$this->preCommandsource=$preCommandsourceIn;
	$this->postCommandsource=$postCommandsourceIn;
	$this->snapScheduleId=$snapScheduleIdIn;
	$this->scheduledVol=$scheduledVolIn;
	$this->lastScheduledVol=$lastScheduledVolIn;
	$this->lastUpdateTime=$lastUpdateTimeIn;
	$this->indVolflag=$indVolflagIn;
	$this->indVolumes=$indVolumesIn;
	$this->Deleted=$DeletedIn;
	$this->queueState=$queueStateIn;
	$this->ruleId=$ruleIdIn;
	$this->clusterFlag=$clusterFlagIn;
	$this->userBookmark=$userBookmarkIn;
	$this->deleteLog=$deleteLogIn;
	$this->readWrite=$readWriteIn;
	$this->dataLogPath=$dataLogPathIn;
	$this->ranNo=$ranNoIn;
}

/** 
 * setAry allows copy the contents of an associative array 
 * to the member variables
 */
function setAry($ary){ 
	$this->ary=$ary;
	$this->snapshotId=$ary["snapshotId"];
	$this->srcHostid=$ary["srcHostid"];
	$this->srcDeviceName=$ary["srcDeviceName"];
	$this->destHostid=$ary["destHostid"];
	$this->destDeviceName=$ary["destDeviceName"];
	$this->pending=$ary["pending"];
	$this->bytesSent=$ary["bytesSent"];
	$this->status=$ary["status"];
	$this->typeOfsnapshot=$ary["typeOfsnapshot"];
	$this->volumeType=$ary["volumeType"];
	$this->preCommandsource=$ary["preCommandsource"];
	$this->postCommandsource=$ary["postCommandsource"];
	$this->snapScheduleId=$ary["snapScheduleId"];
	$this->scheduledVol=$ary["scheduledVol"];
	$this->lastScheduledVol=$ary["lastScheduledVol"];
	$this->lastUpdateTime=$ary["lastUpdateTime"];
	$this->indVolflag=$ary["indVolflag"];
	$this->indVolumes=$ary["indVolumes"];
	$this->Deleted=$ary["Deleted"];
	$this->queueState=$ary["queueState"];
	$this->ruleId=$ary["ruleId"];
	$this->clusterFlag=$ary["clusterFlag"];
	$this->userBookmark=$ary["userBookmark"];
	$this->deleteLog=$ary["deleteLog"];
	$this->readWrite=$ary["readWrite"];
	$this->dataLogPath=$ary["dataLogPath"];
	$this->ranNo=$ary["ranNo"];
}

/** 
 * returns an associative array representing the object
 * if the object values are loaded as result of DB operation, then the array
 * return would equivalent of the row returned DB resultset 
 */
function getAry(){ 
	$oAry = array();
	if (isset($this->ary))
	{
		$oAry = $this->ary;
	}
	else
	{
		$oAry["snapshotId"]=$this->snapshotId;
		$oAry["srcHostid"]=$this->srcHostid;
		$oAry["srcDeviceName"]=$this->srcDeviceName;
		$oAry["destHostid"]=$this->destHostid;
		$oAry["destDeviceName"]=$this->destDeviceName;
		$oAry["pending"]=$this->pending;
		$oAry["bytesSent"]=$this->bytesSent;
		$oAry["status"]=$this->status;
		$oAry["typeOfsnapshot"]=$this->typeOfsnapshot;
		$oAry["volumeType"]=$this->volumeType;
		$oAry["preCommandsource"]=$this->preCommandsource;
		$oAry["postCommandsource"]=$this->postCommandsource;
		$oAry["snapScheduleId"]=$this->snapScheduleId;
		$oAry["scheduledVol"]=$this->scheduledVol;
		$oAry["lastScheduledVol"]=$this->lastScheduledVol;
		$oAry["lastUpdateTime"]=$this->lastUpdateTime;
		$oAry["indVolflag"]=$this->indVolflag;
		$oAry["indVolumes"]=$this->indVolumes;
		$oAry["Deleted"]=$this->Deleted;
		$oAry["queueState"]=$this->queueState;
		$oAry["ruleId"]=$this->ruleId;
		$oAry["clusterFlag"]=$this->clusterFlag;
		$oAry["userBookmark"]=$this->userBookmark;
		$oAry["deleteLog"]=$this->deleteLog;
		$oAry["readWrite"]=$this->readWrite;
		$oAry["dataLogPath"]=$this->dataLogPath;
		$oAry["ranNo"]=$this->ranNo;
	}
	return $oAry;
} 

 /** 
  * hasEqualMapping-method will compare two Host instances
  * and return true if they contain same values in all persistent instance 
  * variables. If hasEqualMapping returns true, it does not mean the objects
  * are the same instance. However it does mean that in that moment, they 
  * are mapped to the same row in database.
  */
function hasEqualMapping($valueObject){
	if ($valueObject->get_snapshot_id() != $this->snapshotId) {
		return(false);
	}
	if ($valueObject->get_src_hostid() != $this->srcHostid) {
		return(false);
	}
	if ($valueObject->get_src_device_name() != $this->srcDeviceName) {
		return(false);
	}
	if ($valueObject->get_dest_hostid() != $this->destHostid) {
		return(false);
	}
	if ($valueObject->get_dest_device_name() != $this->destDeviceName) {
		return(false);
	}
	if ($valueObject->get_pending() != $this->pending) {
		return(false);
	}
	if ($valueObject->get_bytes_sent() != $this->bytesSent) {
		return(false);
	}
	if ($valueObject->get_status() != $this->status) {
		return(false);
	}
	if ($valueObject->get_type_ofsnapshot() != $this->typeOfsnapshot) {
		return(false);
	}
	if ($valueObject->get_volume_type() != $this->volumeType) {
		return(false);
	}
	if ($valueObject->get_pre_commandsource() != $this->preCommandsource) {
		return(false);
	}
	if ($valueObject->get_post_commandsource() != $this->postCommandsource) {
		return(false);
	}
	if ($valueObject->get_snap_schedule_id() != $this->snapScheduleId) {
		return(false);
	}
	if ($valueObject->get_scheduled_vol() != $this->scheduledVol) {
		return(false);
	}
	if ($valueObject->get_last_scheduled_vol() != $this->lastScheduledVol) {
		return(false);
	}
	if ($valueObject->get_last_update_time() != $this->lastUpdateTime) {
		return(false);
	}
	if ($valueObject->get_ind_volflag() != $this->indVolflag) {
		return(false);
	}
	if ($valueObject->get_ind_volumes() != $this->indVolumes) {
		return(false);
	}
	if ($valueObject->get_deleted() != $this->Deleted) {
		return(false);
	}
	if ($valueObject->get_queue_state() != $this->queueState) {
		return(false);
	}
	if ($valueObject->get_rule_id() != $this->ruleId) {
		return(false);
	}
	if ($valueObject->get_cluster_flag() != $this->clusterFlag) {
		return(false);
	}
	if ($valueObject->get_user_bookmark() != $this->userBookmark) {
		return(false);
	}
	if ($valueObject->get_delete_log() != $this->deleteLog) {
		return(false);
	}
	if ($valueObject->get_read_write() != $this->readWrite) {
		return(false);
	}
	if ($valueObject->get_data_log_path() != $this->dataLogPath) {
		return(false);
	}
	if ($valueObject->get_ran_no() != $this->ranNo) {
		return(false);
	}
    return true;
 }
 
/**
 * toString will return String object representing the state of this 
 * valueObject. This is useful during application development, and 
 * possibly when application is writing object states in textlog.
 */
function toString() {
	$out = $this->get_codegen_version();
	$out = $out."\nclass SnapshotMainVO, mapping to table snapshotMain\n";
	$out = $out."Persistent attributes: \n";
	$out = $out."snapshotId = ".$this->snapshotId."\n";
	$out = $out."srcHostid = ".$this->srcHostid."\n";
	$out = $out."srcDeviceName = ".$this->srcDeviceName."\n";
	$out = $out."destHostid = ".$this->destHostid."\n";
	$out = $out."destDeviceName = ".$this->destDeviceName."\n";
	$out = $out."pending = ".$this->pending."\n";
	$out = $out."bytesSent = ".$this->bytesSent."\n";
	$out = $out."status = ".$this->status."\n";
	$out = $out."typeOfsnapshot = ".$this->typeOfsnapshot."\n";
	$out = $out."volumeType = ".$this->volumeType."\n";
	$out = $out."preCommandsource = ".$this->preCommandsource."\n";
	$out = $out."postCommandsource = ".$this->postCommandsource."\n";
	$out = $out."snapScheduleId = ".$this->snapScheduleId."\n";
	$out = $out."scheduledVol = ".$this->scheduledVol."\n";
	$out = $out."lastScheduledVol = ".$this->lastScheduledVol."\n";
	$out = $out."lastUpdateTime = ".$this->lastUpdateTime."\n";
	$out = $out."indVolflag = ".$this->indVolflag."\n";
	$out = $out."indVolumes = ".$this->indVolumes."\n";
	$out = $out."Deleted = ".$this->Deleted."\n";
	$out = $out."queueState = ".$this->queueState."\n";
	$out = $out."ruleId = ".$this->ruleId."\n";
	$out = $out."clusterFlag = ".$this->clusterFlag."\n";
	$out = $out."userBookmark = ".$this->userBookmark."\n";
	$out = $out."deleteLog = ".$this->deleteLog."\n";
	$out = $out."readWrite = ".$this->readWrite."\n";
	$out = $out."dataLogPath = ".$this->dataLogPath."\n";
	$out = $out."ranNo = ".$this->ranNo."\n";
	return $out;
}

/**
 * Clone will return identical deep copy of this valueObject.
 * Here, the retuned cloned object will have all its attributes cloned
 */
function __clone() {
	$cloned = new SnapshotMainVO();
	
	 $cloned->set_snapshot_id($this->snapshotId);
	 $cloned->set_src_hostid($this->srcHostid);
	 $cloned->set_src_device_name($this->srcDeviceName);
	 $cloned->set_dest_hostid($this->destHostid);
	 $cloned->set_dest_device_name($this->destDeviceName);
	 $cloned->set_pending($this->pending);
	 $cloned->set_bytes_sent($this->bytesSent);
	 $cloned->set_status($this->status);
	 $cloned->set_type_ofsnapshot($this->typeOfsnapshot);
	 $cloned->set_volume_type($this->volumeType);
	 $cloned->set_pre_commandsource($this->preCommandsource);
	 $cloned->set_post_commandsource($this->postCommandsource);
	 $cloned->set_snap_schedule_id($this->snapScheduleId);
	 $cloned->set_scheduled_vol($this->scheduledVol);
	 $cloned->set_last_scheduled_vol($this->lastScheduledVol);
	 $cloned->set_last_update_time($this->lastUpdateTime);
	 $cloned->set_ind_volflag($this->indVolflag);
	 $cloned->set_ind_volumes($this->indVolumes);
	 $cloned->set_deleted($this->Deleted);
	 $cloned->set_queue_state($this->queueState);
	 $cloned->set_rule_id($this->ruleId);
	 $cloned->set_cluster_flag($this->clusterFlag);
	 $cloned->set_user_bookmark($this->userBookmark);
	 $cloned->set_delete_log($this->deleteLog);
	 $cloned->set_read_write($this->readWrite);
	 $cloned->set_data_log_path($this->dataLogPath);
	 $cloned->set_ran_no($this->ranNo);
	
	return $cloned;
}

/** 
 * getCodegenVersion will return information about
 * generator which created these sources.
 */
function get_codegen_version() {
    return  "1.0";
 }
/** 
 * getCodegenTemplateVersion will return information about
 * generator which created these sources.
 */
function get_codegen_template_version() {
    return  "PHPVO-1.7";
 }

}
?>
