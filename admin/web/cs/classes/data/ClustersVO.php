<?php
/**
 * This sourcecode has been generated by InMage Source Code Generator version 1.0
 * The usage of generated code is restricted to InMage Systems Inc.
 *
 * clusters Value Object[VO]
 * This class is value object representing database table host
 * This class is needs to be used with associated Dao object
 * Generated Date:	Tue, 27 Nov 2007 14:01:23 +0530	
 * Pattern Version:1.0
 */

class ClustersVO
{

/**
 * Global variables 
 */
 
 public $ary;
 
 
 
/** 
 * Persistent Instance variables. This data is directly 
 * mapped to the columns of database table.
 */

public $hostId;
public $deviceName;
public $deviceId;
public $clusterName;
public $clusterGroupName;
public $clusterGroupId;
public $clusterruleId;
public $exchangeVirtualServerName;
public $sqlVirtualServerName;
public $fileServerVirtualServerName;
public $clusterResourceName;
public $clusterResourceId;
public $clusterId;

/** 
 * Constructors. Code generator generates two constructors by default.
 * The first one takes no arguments and provides the most simple
 * way to create object instance. The another one takes one
 * argument, which is the primary key of the corresponding table.
 */

function ClustersVO(){

}

/** 
 * Initializes the variables with database specific 
 * defaults.
 */
 function initialize(){
 
	$this->clusterruleId="0";
 }
 
/** 
 * Get and Set methods for persistent variables. 
 */

function get_host_id() {
	return $this->hostId;
}
function set_host_id($hostIdIn) { 
	$this->hostId=$hostIdIn;
}

function isset_host_id() {
	return isset($this->hostId);
}


function get_device_name() {
	return $this->deviceName;
}
function set_device_name($deviceNameIn) { 
	$this->deviceName=$deviceNameIn;
}

function isset_device_name() {
	return isset($this->deviceName);
}


function get_device_id() {
	return $this->deviceId;
}
function set_device_id($deviceIdIn) { 
	$this->deviceId=$deviceIdIn;
}

function isset_device_id() {
	return isset($this->deviceId);
}


function get_cluster_name() {
	return $this->clusterName;
}
function set_cluster_name($clusterNameIn) { 
	$this->clusterName=$clusterNameIn;
}

function isset_cluster_name() {
	return isset($this->clusterName);
}


function get_cluster_group_name() {
	return $this->clusterGroupName;
}
function set_cluster_group_name($clusterGroupNameIn) { 
	$this->clusterGroupName=$clusterGroupNameIn;
}

function isset_cluster_group_name() {
	return isset($this->clusterGroupName);
}


function get_cluster_group_id() {
	return $this->clusterGroupId;
}
function set_cluster_group_id($clusterGroupIdIn) { 
	$this->clusterGroupId=$clusterGroupIdIn;
}

function isset_cluster_group_id() {
	return isset($this->clusterGroupId);
}


function get_clusterrule_id() {
	return $this->clusterruleId;
}
function set_clusterrule_id($clusterruleIdIn) { 
	$this->clusterruleId=$clusterruleIdIn;
}

function isset_clusterrule_id() {
	return isset($this->clusterruleId);
}


function get_exchange_virtual_server_name() {
	return $this->exchangeVirtualServerName;
}
function set_exchange_virtual_server_name($exchangeVirtualServerNameIn) { 
	$this->exchangeVirtualServerName=$exchangeVirtualServerNameIn;
}

function isset_exchange_virtual_server_name() {
	return isset($this->exchangeVirtualServerName);
}


function get_sql_virtual_server_name() {
	return $this->sqlVirtualServerName;
}
function set_sql_virtual_server_name($sqlVirtualServerNameIn) { 
	$this->sqlVirtualServerName=$sqlVirtualServerNameIn;
}

function isset_sql_virtual_server_name() {
	return isset($this->sqlVirtualServerName);
}


function get_file_server_virtual_server_name() {
	return $this->fileServerVirtualServerName;
}
function set_file_server_virtual_server_name($fileServerVirtualServerNameIn) { 
	$this->fileServerVirtualServerName=$fileServerVirtualServerNameIn;
}

function isset_file_server_virtual_server_name() {
	return isset($this->fileServerVirtualServerName);
}


function get_cluster_resource_name() {
	return $this->clusterResourceName;
}
function set_cluster_resource_name($clusterResourceNameIn) { 
	$this->clusterResourceName=$clusterResourceNameIn;
}

function isset_cluster_resource_name() {
	return isset($this->clusterResourceName);
}


function get_cluster_resource_id() {
	return $this->clusterResourceId;
}
function set_cluster_resource_id($clusterResourceIdIn) { 
	$this->clusterResourceId=$clusterResourceIdIn;
}

function isset_cluster_resource_id() {
	return isset($this->clusterResourceId);
}


function get_cluster_id() {
	return $this->clusterId;
}
function set_cluster_id($clusterIdIn) { 
	$this->clusterId=$clusterIdIn;
}

function isset_cluster_id() {
	return isset($this->clusterId);
}


/** 
 * setAll allows to set all persistent variables in one method call.
 * This is useful, when all data is available and it is needed to 
 * set the initial state of this object. Note that this method will
 * directly modify instance variales, without going trough the 
 * individual set-methods.
 */
function setAll($hostIdIn,$deviceNameIn,$deviceIdIn,$clusterNameIn,$clusterGroupNameIn,$clusterGroupIdIn,$clusterruleIdIn,$exchangeVirtualServerNameIn,$sqlVirtualServerNameIn,$fileServerVirtualServerNameIn,$clusterResourceNameIn,$clusterResourceIdIn,$clusterIdIn){
	$this->hostId=$hostIdIn;
	$this->deviceName=$deviceNameIn;
	$this->deviceId=$deviceIdIn;
	$this->clusterName=$clusterNameIn;
	$this->clusterGroupName=$clusterGroupNameIn;
	$this->clusterGroupId=$clusterGroupIdIn;
	$this->clusterruleId=$clusterruleIdIn;
	$this->exchangeVirtualServerName=$exchangeVirtualServerNameIn;
	$this->sqlVirtualServerName=$sqlVirtualServerNameIn;
	$this->fileServerVirtualServerName=$fileServerVirtualServerNameIn;
	$this->clusterResourceName=$clusterResourceNameIn;
	$this->clusterResourceId=$clusterResourceIdIn;
	$this->clusterId=$clusterIdIn;
}

/** 
 * setAry allows copy the contents of an associative array 
 * to the member variables
 */
function setAry($ary){ 
	$this->ary=$ary;
	$this->hostId=$ary["hostId"];
	$this->deviceName=$ary["deviceName"];
	$this->deviceId=$ary["deviceId"];
	$this->clusterName=$ary["clusterName"];
	$this->clusterGroupName=$ary["clusterGroupName"];
	$this->clusterGroupId=$ary["clusterGroupId"];
	$this->clusterruleId=$ary["clusterruleId"];
	$this->exchangeVirtualServerName=$ary["exchangeVirtualServerName"];
	$this->sqlVirtualServerName=$ary["sqlVirtualServerName"];
	$this->fileServerVirtualServerName=$ary["fileServerVirtualServerName"];
	$this->clusterResourceName=$ary["clusterResourceName"];
	$this->clusterResourceId=$ary["clusterResourceId"];
	$this->clusterId=$ary["clusterId"];
}

/** 
 * returns an associative array representing the object
 * if the object values are loaded as result of DB operation, then the array
 * return would equivalent of the row returned DB resultset 
 */
function getAry(){ 
	$oAry = array();
	if (isset($this->ary))
	{
		$oAry = $this->ary;
	}
	else
	{
		$oAry["hostId"]=$this->hostId;
		$oAry["deviceName"]=$this->deviceName;
		$oAry["deviceId"]=$this->deviceId;
		$oAry["clusterName"]=$this->clusterName;
		$oAry["clusterGroupName"]=$this->clusterGroupName;
		$oAry["clusterGroupId"]=$this->clusterGroupId;
		$oAry["clusterruleId"]=$this->clusterruleId;
		$oAry["exchangeVirtualServerName"]=$this->exchangeVirtualServerName;
		$oAry["sqlVirtualServerName"]=$this->sqlVirtualServerName;
		$oAry["fileServerVirtualServerName"]=$this->fileServerVirtualServerName;
		$oAry["clusterResourceName"]=$this->clusterResourceName;
		$oAry["clusterResourceId"]=$this->clusterResourceId;
		$oAry["clusterId"]=$this->clusterId;
	}
	return $oAry;
} 

 /** 
  * hasEqualMapping-method will compare two Host instances
  * and return true if they contain same values in all persistent instance 
  * variables. If hasEqualMapping returns true, it does not mean the objects
  * are the same instance. However it does mean that in that moment, they 
  * are mapped to the same row in database.
  */
function hasEqualMapping($valueObject){
	if ($valueObject->get_host_id() != $this->hostId) {
		return(false);
	}
	if ($valueObject->get_device_name() != $this->deviceName) {
		return(false);
	}
	if ($valueObject->get_device_id() != $this->deviceId) {
		return(false);
	}
	if ($valueObject->get_cluster_name() != $this->clusterName) {
		return(false);
	}
	if ($valueObject->get_cluster_group_name() != $this->clusterGroupName) {
		return(false);
	}
	if ($valueObject->get_cluster_group_id() != $this->clusterGroupId) {
		return(false);
	}
	if ($valueObject->get_clusterrule_id() != $this->clusterruleId) {
		return(false);
	}
	if ($valueObject->get_exchange_virtual_server_name() != $this->exchangeVirtualServerName) {
		return(false);
	}
	if ($valueObject->get_sql_virtual_server_name() != $this->sqlVirtualServerName) {
		return(false);
	}
	if ($valueObject->get_file_server_virtual_server_name() != $this->fileServerVirtualServerName) {
		return(false);
	}
	if ($valueObject->get_cluster_resource_name() != $this->clusterResourceName) {
		return(false);
	}
	if ($valueObject->get_cluster_resource_id() != $this->clusterResourceId) {
		return(false);
	}
	if ($valueObject->get_cluster_id() != $this->clusterId) {
		return(false);
	}
    return true;
 }
 
/**
 * toString will return String object representing the state of this 
 * valueObject. This is useful during application development, and 
 * possibly when application is writing object states in textlog.
 */
function toString() {
	$out = $this->get_codegen_version();
	$out = $out."\nclass ClustersVO, mapping to table clusters\n";
	$out = $out."Persistent attributes: \n";
	$out = $out."hostId = ".$this->hostId."\n";
	$out = $out."deviceName = ".$this->deviceName."\n";
	$out = $out."deviceId = ".$this->deviceId."\n";
	$out = $out."clusterName = ".$this->clusterName."\n";
	$out = $out."clusterGroupName = ".$this->clusterGroupName."\n";
	$out = $out."clusterGroupId = ".$this->clusterGroupId."\n";
	$out = $out."clusterruleId = ".$this->clusterruleId."\n";
	$out = $out."exchangeVirtualServerName = ".$this->exchangeVirtualServerName."\n";
	$out = $out."sqlVirtualServerName = ".$this->sqlVirtualServerName."\n";
	$out = $out."fileServerVirtualServerName = ".$this->fileServerVirtualServerName."\n";
	$out = $out."clusterResourceName = ".$this->clusterResourceName."\n";
	$out = $out."clusterResourceId = ".$this->clusterResourceId."\n";
	$out = $out."clusterId = ".$this->clusterId."\n";
	return $out;
}

/**
 * Clone will return identical deep copy of this valueObject.
 * Here, the retuned cloned object will have all its attributes cloned
 */
function __clone() {
	$cloned = new ClustersVO();
	
	 $cloned->set_host_id($this->hostId);
	 $cloned->set_device_name($this->deviceName);
	 $cloned->set_device_id($this->deviceId);
	 $cloned->set_cluster_name($this->clusterName);
	 $cloned->set_cluster_group_name($this->clusterGroupName);
	 $cloned->set_cluster_group_id($this->clusterGroupId);
	 $cloned->set_clusterrule_id($this->clusterruleId);
	 $cloned->set_exchange_virtual_server_name($this->exchangeVirtualServerName);
	 $cloned->set_sql_virtual_server_name($this->sqlVirtualServerName);
	 $cloned->set_file_server_virtual_server_name($this->fileServerVirtualServerName);
	 $cloned->set_cluster_resource_name($this->clusterResourceName);
	 $cloned->set_cluster_resource_id($this->clusterResourceId);
	 $cloned->set_cluster_id($this->clusterId);
	
	return $cloned;
}

/** 
 * getCodegenVersion will return information about
 * generator which created these sources.
 */
function get_codegen_version() {
    return  "1.0";
 }
/** 
 * getCodegenTemplateVersion will return information about
 * generator which created these sources.
 */
function get_codegen_template_version() {
    return  "PHPVO-1.7";
 }

}
?>
