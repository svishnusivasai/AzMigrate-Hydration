<?php
/**
 * This sourcecode has been generated by InMage Source Code Generator version 1.0
 * The usage of generated code is restricted to InMage Systems Inc.
 *
 * switchAgents Value Object[VO]
 * This class is value object representing database table host
 * This class is needs to be used with associated Dao object
 * Generated Date:	Mon, 28 Apr 2008 14:10:32 +0530	
 * Pattern Version:1.0
 */

class SwitchAgentsVO
{

/**
 * Global variables 
 */
 
 public $ary;
 
 
 
/** 
 * Persistent Instance variables. This data is directly 
 * mapped to the columns of database table.
 */

public $switchAgentId;
public $fabricId;
public $name;
public $version;
public $platformModel;
public $switchWwn;
public $physicalPortInfo;
public $dpcCount;
public $driverVersion;
public $osInfo;
public $currentCompatibilityNum;
public $installPath;
public $osVal;
public $timeZone;
public $timeLocal;
public $patchHistory;
public $cpIpAddressList;
public $prefCpIpAddressList;
public $bpIpAddressLIst;
public $prefBpIpAddressList;
public $sasVersion;
public $fosVersion;
public $cacheState;
public $switchAgentSpaceWarnThreshold;

/** 
 * Constructors. Code generator generates two constructors by default.
 * The first one takes no arguments and provides the most simple
 * way to create object instance. The another one takes one
 * argument, which is the primary key of the corresponding table.
 */

function SwitchAgentsVO(){

}

/*
	function SwitchAgentsVO(fabricIdIn,switchAgentIdIn){
 this->fabricId=$fabricIdIn;
 this->switchAgentId=$switchAgentIdIn;
}
*/

/** 
 * Initializes the variables with database specific 
 * defaults.
 */
 function initialize(){
 
 }
 
/** 
 * Get and Set methods for persistent variables. 
 */

function get_switch_agent_id() {
	return $this->switchAgentId;
}
function set_switch_agent_id($switchAgentIdIn) { 
	$this->switchAgentId=$switchAgentIdIn;
}

function isset_switch_agent_id() {
	return isset($this->switchAgentId);
}


function get_fabric_id() {
	return $this->fabricId;
}
function set_fabric_id($fabricIdIn) { 
	$this->fabricId=$fabricIdIn;
}

function isset_fabric_id() {
	return isset($this->fabricId);
}


function get_name() {
	return $this->name;
}
function set_name($nameIn) { 
	$this->name=$nameIn;
}

function isset_name() {
	return isset($this->name);
}


function get_version() {
	return $this->version;
}
function set_version($versionIn) { 
	$this->version=$versionIn;
}

function isset_version() {
	return isset($this->version);
}


function get_platform_model() {
	return $this->platformModel;
}
function set_platform_model($platformModelIn) { 
	$this->platformModel=$platformModelIn;
}

function isset_platform_model() {
	return isset($this->platformModel);
}


function get_switch_wwn() {
	return $this->switchWwn;
}
function set_switch_wwn($switchWwnIn) { 
	$this->switchWwn=$switchWwnIn;
}

function isset_switch_wwn() {
	return isset($this->switchWwn);
}


function get_physical_port_info() {
	return $this->physicalPortInfo;
}
function set_physical_port_info($physicalPortInfoIn) { 
	$this->physicalPortInfo=$physicalPortInfoIn;
}

function isset_physical_port_info() {
	return isset($this->physicalPortInfo);
}


function get_dpc_count() {
	return $this->dpcCount;
}
function set_dpc_count($dpcCountIn) { 
	$this->dpcCount=$dpcCountIn;
}

function isset_dpc_count() {
	return isset($this->dpcCount);
}


function get_driver_version() {
	return $this->driverVersion;
}
function set_driver_version($driverVersionIn) { 
	$this->driverVersion=$driverVersionIn;
}

function isset_driver_version() {
	return isset($this->driverVersion);
}


function get_os_info() {
	return $this->osInfo;
}
function set_os_info($osInfoIn) { 
	$this->osInfo=$osInfoIn;
}

function isset_os_info() {
	return isset($this->osInfo);
}


function get_current_compatibility_num() {
	return $this->currentCompatibilityNum;
}
function set_current_compatibility_num($currentCompatibilityNumIn) { 
	$this->currentCompatibilityNum=$currentCompatibilityNumIn;
}

function isset_current_compatibility_num() {
	return isset($this->currentCompatibilityNum);
}


function get_install_path() {
	return $this->installPath;
}
function set_install_path($installPathIn) { 
	$this->installPath=$installPathIn;
}

function isset_install_path() {
	return isset($this->installPath);
}


function get_os_val() {
	return $this->osVal;
}
function set_os_val($osValIn) { 
	$this->osVal=$osValIn;
}

function isset_os_val() {
	return isset($this->osVal);
}


function get_time_zone() {
	return $this->timeZone;
}
function set_time_zone($timeZoneIn) { 
	$this->timeZone=$timeZoneIn;
}

function isset_time_zone() {
	return isset($this->timeZone);
}


function get_time_local() {
	return $this->timeLocal;
}
function set_time_local($timeLocalIn) { 
	$this->timeLocal=$timeLocalIn;
}

function isset_time_local() {
	return isset($this->timeLocal);
}


function get_patch_history() {
	return $this->patchHistory;
}
function set_patch_history($patchHistoryIn) { 
	$this->patchHistory=$patchHistoryIn;
}

function isset_patch_history() {
	return isset($this->patchHistory);
}


function get_cp_ip_address_list() {
	return $this->cpIpAddressList;
}
function set_cp_ip_address_list($cpIpAddressListIn) { 
	$this->cpIpAddressList=$cpIpAddressListIn;
}

function isset_cp_ip_address_list() {
	return isset($this->cpIpAddressList);
}


function get_pref_cp_ip_address_list() {
	return $this->prefCpIpAddressList;
}
function set_pref_cp_ip_address_list($prefCpIpAddressListIn) { 
	$this->prefCpIpAddressList=$prefCpIpAddressListIn;
}

function isset_pref_cp_ip_address_list() {
	return isset($this->prefCpIpAddressList);
}


function get_bp_ip_address_l_ist() {
	return $this->bpIpAddressLIst;
}
function set_bp_ip_address_l_ist($bpIpAddressLIstIn) { 
	$this->bpIpAddressLIst=$bpIpAddressLIstIn;
}

function isset_bp_ip_address_l_ist() {
	return isset($this->bpIpAddressLIst);
}


function get_pref_bp_ip_address_list() {
	return $this->prefBpIpAddressList;
}
function set_pref_bp_ip_address_list($prefBpIpAddressListIn) { 
	$this->prefBpIpAddressList=$prefBpIpAddressListIn;
}

function isset_pref_bp_ip_address_list() {
	return isset($this->prefBpIpAddressList);
}


function get_sas_version() {
	return $this->sasVersion;
}
function set_sas_version($sasVersionIn) { 
	$this->sasVersion=$sasVersionIn;
}

function isset_sas_version() {
	return isset($this->sasVersion);
}


function get_fos_version() {
	return $this->fosVersion;
}
function set_fos_version($fosVersionIn) { 
	$this->fosVersion=$fosVersionIn;
}

function isset_fos_version() {
	return isset($this->fosVersion);
}
function get_cache_state() {
	return $this->cacheState;
}
function set_cache_state($cacheStateIn) { 
	$this->cacheState=$cacheStateIn;
}

function isset_cache_state() {
	return isset($this->cacheState);
}

function get_switchAgentSpaceWarnThreshold() {
	return $this->switchAgentSpaceWarnThreshold;
}
function set_switchAgentSpaceWarnThreshold($switchAgentSpaceWarnThresholdIn) { 
	$this->switchAgentSpaceWarnThreshold=$switchAgentSpaceWarnThresholdIn;
}

function isset_switchAgentSpaceWarnThreshold() {
	return isset($this->switchAgentSpaceWarnThreshold);
}



/** 
 * setAll allows to set all persistent variables in one method call.
 * This is useful, when all data is available and it is needed to 
 * set the initial state of this object. Note that this method will
 * directly modify instance variales, without going trough the 
 * individual set-methods.
 */
function setAll($switchAgentIdIn,$fabricIdIn,$nameIn,$versionIn,$platformModelIn,$switchWwnIn,$physicalPortInfoIn,$dpcCountIn,$driverVersionIn,$osInfoIn,$currentCompatibilityNumIn,$installPathIn,$osValIn,$timeZoneIn,$timeLocalIn,$patchHistoryIn,$cpIpAddressListIn,$prefCpIpAddressListIn,$bpIpAddressLIstIn,$prefBpIpAddressListIn,$sasVersionIn,$fosVersionIn,$cacheStateIn,$switchAgentSpaceWarnThresholdIn){
	$this->switchAgentId=$switchAgentIdIn;
	$this->fabricId=$fabricIdIn;
	$this->name=$nameIn;
	$this->version=$versionIn;
	$this->platformModel=$platformModelIn;
	$this->switchWwn=$switchWwnIn;
	$this->physicalPortInfo=$physicalPortInfoIn;
	$this->dpcCount=$dpcCountIn;
	$this->driverVersion=$driverVersionIn;
	$this->osInfo=$osInfoIn;
	$this->currentCompatibilityNum=$currentCompatibilityNumIn;
	$this->installPath=$installPathIn;
	$this->osVal=$osValIn;
	$this->timeZone=$timeZoneIn;
	$this->timeLocal=$timeLocalIn;
	$this->patchHistory=$patchHistoryIn;
	$this->cpIpAddressList=$cpIpAddressListIn;
	$this->prefCpIpAddressList=$prefCpIpAddressListIn;
	$this->bpIpAddressLIst=$bpIpAddressLIstIn;
	$this->prefBpIpAddressList=$prefBpIpAddressListIn;
	$this->sasVersion=$sasVersionIn;
	$this->fosVersion=$fosVersionIn;
	$this->cacheState=$cacheStateIn;
	$this->switchAgentSpaceWarnThreshold=$switchAgentSpaceWarnThresholdIn;
}

/** 
 * setAry allows copy the contents of an associative array 
 * to the member variables
 */
function setAry($ary){ 
	$this->ary=$ary;
	$this->switchAgentId=$ary["switchAgentId"];
	$this->fabricId=$ary["fabricId"];
	$this->name=$ary["name"];
	$this->version=$ary["version"];
	$this->platformModel=$ary["platformModel"];
	$this->switchWwn=$ary["switchWwn"];
	$this->physicalPortInfo=$ary["physicalPortInfo"];
	$this->dpcCount=$ary["dpcCount"];
	$this->driverVersion=$ary["driverVersion"];
	$this->osInfo=$ary["osInfo"];
	$this->currentCompatibilityNum=$ary["currentCompatibilityNum"];
	$this->installPath=$ary["installPath"];
	$this->osVal=$ary["osVal"];
	$this->timeZone=$ary["timeZone"];
	$this->timeLocal=$ary["timeLocal"];
	$this->patchHistory=$ary["patchHistory"];
	$this->cpIpAddressList=$ary["cpIpAddressList"];
	$this->prefCpIpAddressList=$ary["prefCpIpAddressList"];
	$this->bpIpAddressLIst=$ary["bpIpAddressLIst"];
	$this->prefBpIpAddressList=$ary["prefBpIpAddressList"];
	$this->sasVersion=$ary["sasVersion"];
	$this->fosVersion=$ary["fosVersion"];
	$this->cacheState=$ary["cacheState"];
	$this->switchAgentSpaceWarnThreshold=$ary["switchAgentSpaceWarnThreshold"];
}

/** 
 * returns an associative array representing the object
 * if the object values are loaded as result of DB operation, then the array
 * return would equivalent of the row returned DB resultset 
 */
function getAry(){ 
	$oAry = array();
	if (isset($this->ary))
	{
		$oAry = $this->ary;
	}
	else
	{
		$oAry["switchAgentId"]=$this->switchAgentId;
		$oAry["fabricId"]=$this->fabricId;
		$oAry["name"]=$this->name;
		$oAry["version"]=$this->version;
		$oAry["platformModel"]=$this->platformModel;
		$oAry["switchWwn"]=$this->switchWwn;
		$oAry["physicalPortInfo"]=$this->physicalPortInfo;
		$oAry["dpcCount"]=$this->dpcCount;
		$oAry["driverVersion"]=$this->driverVersion;
		$oAry["osInfo"]=$this->osInfo;
		$oAry["currentCompatibilityNum"]=$this->currentCompatibilityNum;
		$oAry["installPath"]=$this->installPath;
		$oAry["osVal"]=$this->osVal;
		$oAry["timeZone"]=$this->timeZone;
		$oAry["timeLocal"]=$this->timeLocal;
		$oAry["patchHistory"]=$this->patchHistory;
		$oAry["cpIpAddressList"]=$this->cpIpAddressList;
		$oAry["prefCpIpAddressList"]=$this->prefCpIpAddressList;
		$oAry["bpIpAddressLIst"]=$this->bpIpAddressLIst;
		$oAry["prefBpIpAddressList"]=$this->prefBpIpAddressList;
		$oAry["sasVersion"]=$this->sasVersion;
		$oAry["fosVersion"]=$this->fosVersion;
		$oAry["cacheState"]=$this->cacheState;
		$oAry["switchAgentSpaceWarnThreshold"]=$this->switchAgentSpaceWarnThreshold;
		
	}
	return $oAry;
} 

 /** 
  * hasEqualMapping-method will compare two Host instances
  * and return true if they contain same values in all persistent instance 
  * variables. If hasEqualMapping returns true, it does not mean the objects
  * are the same instance. However it does mean that in that moment, they 
  * are mapped to the same row in database.
  */
function hasEqualMapping($valueObject){
	if ($valueObject->get_switch_agent_id() != $this->switchAgentId) {
		return(false);
	}
	if ($valueObject->get_fabric_id() != $this->fabricId) {
		return(false);
	}
	if ($valueObject->get_name() != $this->name) {
		return(false);
	}
	if ($valueObject->get_version() != $this->version) {
		return(false);
	}
	if ($valueObject->get_platform_model() != $this->platformModel) {
		return(false);
	}
	if ($valueObject->get_switch_wwn() != $this->switchWwn) {
		return(false);
	}
	if ($valueObject->get_physical_port_info() != $this->physicalPortInfo) {
		return(false);
	}
	if ($valueObject->get_dpc_count() != $this->dpcCount) {
		return(false);
	}
	if ($valueObject->get_driver_version() != $this->driverVersion) {
		return(false);
	}
	if ($valueObject->get_os_info() != $this->osInfo) {
		return(false);
	}
	if ($valueObject->get_current_compatibility_num() != $this->currentCompatibilityNum) {
		return(false);
	}
	if ($valueObject->get_install_path() != $this->installPath) {
		return(false);
	}
	if ($valueObject->get_os_val() != $this->osVal) {
		return(false);
	}
	if ($valueObject->get_time_zone() != $this->timeZone) {
		return(false);
	}
	if ($valueObject->get_time_local() != $this->timeLocal) {
		return(false);
	}
	if ($valueObject->get_patch_history() != $this->patchHistory) {
		return(false);
	}
	if ($valueObject->get_cp_ip_address_list() != $this->cpIpAddressList) {
		return(false);
	}
	if ($valueObject->get_pref_cp_ip_address_list() != $this->prefCpIpAddressList) {
		return(false);
	}
	if ($valueObject->get_bp_ip_address_l_ist() != $this->bpIpAddressLIst) {
		return(false);
	}
	if ($valueObject->get_pref_bp_ip_address_list() != $this->prefBpIpAddressList) {
		return(false);
	}
	if ($valueObject->get_sas_version() != $this->sasVersion) {
		return(false);
	}
	if ($valueObject->get_fos_version() != $this->fosVersion) {
		return(false);
	}
	if ($valueObject->get_cache_state() != $this->cacheState) {
		return(false);
	}
	if ($valueObject->get_switchAgentSpaceWarnThreshold() != $this->switchAgentSpaceWarnThreshold) {
		return(false);
	}
	
	return true;
 }
 
/**
 * toString will return String object representing the state of this 
 * valueObject. This is useful during application development, and 
 * possibly when application is writing object states in textlog.
 */
function toString() {
	$out = $this->get_codegen_version();
	$out = $out."\nclass SwitchAgentsVO, mapping to table switchAgents\n";
	$out = $out."Persistent attributes: \n";
	$out = $out."switchAgentId = ".$this->switchAgentId."\n";
	$out = $out."fabricId = ".$this->fabricId."\n";
	$out = $out."name = ".$this->name."\n";
	$out = $out."version = ".$this->version."\n";
	$out = $out."platformModel = ".$this->platformModel."\n";
	$out = $out."switchWwn = ".$this->switchWwn."\n";
	$out = $out."physicalPortInfo = ".$this->physicalPortInfo."\n";
	$out = $out."dpcCount = ".$this->dpcCount."\n";
	$out = $out."driverVersion = ".$this->driverVersion."\n";
	$out = $out."osInfo = ".$this->osInfo."\n";
	$out = $out."currentCompatibilityNum = ".$this->currentCompatibilityNum."\n";
	$out = $out."installPath = ".$this->installPath."\n";
	$out = $out."osVal = ".$this->osVal."\n";
	$out = $out."timeZone = ".$this->timeZone."\n";
	$out = $out."timeLocal = ".$this->timeLocal."\n";
	$out = $out."patchHistory = ".$this->patchHistory."\n";
	$out = $out."cpIpAddressList = ".$this->cpIpAddressList."\n";
	$out = $out."prefCpIpAddressList = ".$this->prefCpIpAddressList."\n";
	$out = $out."bpIpAddressLIst = ".$this->bpIpAddressLIst."\n";
	$out = $out."prefBpIpAddressList = ".$this->prefBpIpAddressList."\n";
	$out = $out."sasVersion = ".$this->sasVersion."\n";
	$out = $out."fosVersion = ".$this->fosVersion."\n";
	$out = $out."cacheState = ".$this->cacheState."\n";
	$out = $out."switchAgentSpaceWarnThreshold = ".$this->switchAgentSpaceWarnThreshold."\n";
	
	return $out;
}

/**
 * Clone will return identical deep copy of this valueObject.
 * Here, the retuned cloned object will have all its attributes cloned
 */
function __clone() {
	$cloned = new SwitchAgentsVO();
	
	 $cloned->set_switch_agent_id($this->switchAgentId);
	 $cloned->set_fabric_id($this->fabricId);
	 $cloned->set_name($this->name);
	 $cloned->set_version($this->version);
	 $cloned->set_platform_model($this->platformModel);
	 $cloned->set_switch_wwn($this->switchWwn);
	 $cloned->set_physical_port_info($this->physicalPortInfo);
	 $cloned->set_dpc_count($this->dpcCount);
	 $cloned->set_driver_version($this->driverVersion);
	 $cloned->set_os_info($this->osInfo);
	 $cloned->set_current_compatibility_num($this->currentCompatibilityNum);
	 $cloned->set_install_path($this->installPath);
	 $cloned->set_os_val($this->osVal);
	 $cloned->set_time_zone($this->timeZone);
	 $cloned->set_time_local($this->timeLocal);
	 $cloned->set_patch_history($this->patchHistory);
	 $cloned->set_cp_ip_address_list($this->cpIpAddressList);
	 $cloned->set_pref_cp_ip_address_list($this->prefCpIpAddressList);
	 $cloned->set_bp_ip_address_l_ist($this->bpIpAddressLIst);
	 $cloned->set_pref_bp_ip_address_list($this->prefBpIpAddressList);
	 $cloned->set_sas_version($this->sasVersion);
	 $cloned->set_fos_version($this->fosVersion);
	 $cloned->set_cache_state($this->cacheState);
	 $cloned->set_switchAgentSpaceWarnThreshold($this->switchAgentSpaceWarnThreshold);
	 
	
	return $cloned;
}

/** 
 * getCodegenVersion will return information about
 * generator which created these sources.
 */
function get_codegen_version() {
    return  "1.0";
 }
/** 
 * getCodegenTemplateVersion will return information about
 * generator which created these sources.
 */
function get_codegen_template_version() {
    return  "PHPVO-1.7";
 }

}
?>
