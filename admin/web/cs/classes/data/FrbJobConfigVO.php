<?php
/**
 * This sourcecode has been generated by InMage Source Code Generator version 1.0
 * The usage of generated code is restricted to InMage Systems Inc.
 *
 * frbJobConfig Value Object[VO]
 * This class is value object representing database table host
 * This class is needs to be used with associated Dao object
 * Generated Date:	Tue, 27 Nov 2007 14:01:25 +0530	
 * Pattern Version:1.0
 */

class FrbJobConfigVO
{

/**
 * Global variables 
 */
 
 public $ary;
 
 
 
/** 
 * Persistent Instance variables. This data is directly 
 * mapped to the columns of database table.
 */

public $id;
public $groupId;
public $jobOrder;
public $sourceHost;
public $sourcePath;
public $destHost;
public $destPath;
public $scheduleId;
public $optionsId;
public $direction;
public $rpoThreshold;
public $preCommandSource;
public $postCommandSource;
public $preCommandTarget;
public $postCommandTarget;
public $cpuThrottle;
public $progressThreshold;
public $comment;
public $jobDescription;
public $deleted;
public $appname;
public $sshEnable;
public $sshKeyType;
public $sshCipherType;
public $secshPublicKey;
public $sshEncrPublicKey;
public $keygen_state;
public $sch_mode;

/** 
 * Constructors. Code generator generates two constructors by default.
 * The first one takes no arguments and provides the most simple
 * way to create object instance. The another one takes one
 * argument, which is the primary key of the corresponding table.
 */

function FrbJobConfigVO(){

}

/*
	function FrbJobConfigVO(idIn){
 this->id=$idIn;
}
*/

/** 
 * Initializes the variables with database specific 
 * defaults.
 */
 function initialize(){
 
	$this->groupId="0";
	$this->jobOrder="0";
	$this->sourceHost="X";
	$this->sourcePath="X";
	$this->destHost="X";
	$this->destPath="X";
	$this->scheduleId="0";
	$this->optionsId="0";
	$this->direction="0";
	$this->rpoThreshold="0";
	$this->cpuThrottle="0";
	$this->progressThreshold="0";
	$this->comment="X";
	$this->jobDescription="X";
	$this->deleted="0";
	$this->appname="Ungrouped";
	$this->sshEnable="0";
	$this->sshKeyType="-1";
	$this->keygen_state="0";
 }
 
/** 
 * Get and Set methods for persistent variables. 
 */

function get_id() {
	return $this->id;
}
function set_id($idIn) { 
	$this->id=$idIn;
}

function isset_id() {
	return isset($this->id);
}


function get_group_id() {
	return $this->groupId;
}
function set_group_id($groupIdIn) { 
	$this->groupId=$groupIdIn;
}

function isset_group_id() {
	return isset($this->groupId);
}


function get_job_order() {
	return $this->jobOrder;
}
function set_job_order($jobOrderIn) { 
	$this->jobOrder=$jobOrderIn;
}

function isset_job_order() {
	return isset($this->jobOrder);
}


function get_source_host() {
	return $this->sourceHost;
}
function set_source_host($sourceHostIn) { 
	$this->sourceHost=$sourceHostIn;
}

function isset_source_host() {
	return isset($this->sourceHost);
}


function get_source_path() {
	return $this->sourcePath;
}
function set_source_path($sourcePathIn) { 
	$this->sourcePath=$sourcePathIn;
}

function isset_source_path() {
	return isset($this->sourcePath);
}


function get_dest_host() {
	return $this->destHost;
}
function set_dest_host($destHostIn) { 
	$this->destHost=$destHostIn;
}

function isset_dest_host() {
	return isset($this->destHost);
}


function get_dest_path() {
	return $this->destPath;
}
function set_dest_path($destPathIn) { 
	$this->destPath=$destPathIn;
}

function isset_dest_path() {
	return isset($this->destPath);
}


function get_schedule_id() {
	return $this->scheduleId;
}
function set_schedule_id($scheduleIdIn) { 
	$this->scheduleId=$scheduleIdIn;
}

function isset_schedule_id() {
	return isset($this->scheduleId);
}


function get_options_id() {
	return $this->optionsId;
}
function set_options_id($optionsIdIn) { 
	$this->optionsId=$optionsIdIn;
}

function isset_options_id() {
	return isset($this->optionsId);
}


function get_direction() {
	return $this->direction;
}
function set_direction($directionIn) { 
	$this->direction=$directionIn;
}

function isset_direction() {
	return isset($this->direction);
}


function get_rpo_threshold() {
	return $this->rpoThreshold;
}
function set_rpo_threshold($rpoThresholdIn) { 
	$this->rpoThreshold=$rpoThresholdIn;
}

function isset_rpo_threshold() {
	return isset($this->rpoThreshold);
}


function get_pre_command_source() {
	return $this->preCommandSource;
}
function set_pre_command_source($preCommandSourceIn) { 
	$this->preCommandSource=$preCommandSourceIn;
}

function isset_pre_command_source() {
	return isset($this->preCommandSource);
}


function get_post_command_source() {
	return $this->postCommandSource;
}
function set_post_command_source($postCommandSourceIn) { 
	$this->postCommandSource=$postCommandSourceIn;
}

function isset_post_command_source() {
	return isset($this->postCommandSource);
}


function get_pre_command_target() {
	return $this->preCommandTarget;
}
function set_pre_command_target($preCommandTargetIn) { 
	$this->preCommandTarget=$preCommandTargetIn;
}

function isset_pre_command_target() {
	return isset($this->preCommandTarget);
}


function get_post_command_target() {
	return $this->postCommandTarget;
}
function set_post_command_target($postCommandTargetIn) { 
	$this->postCommandTarget=$postCommandTargetIn;
}

function isset_post_command_target() {
	return isset($this->postCommandTarget);
}


function get_cpu_throttle() {
	return $this->cpuThrottle;
}
function set_cpu_throttle($cpuThrottleIn) { 
	$this->cpuThrottle=$cpuThrottleIn;
}

function isset_cpu_throttle() {
	return isset($this->cpuThrottle);
}


function get_progress_threshold() {
	return $this->progressThreshold;
}
function set_progress_threshold($progressThresholdIn) { 
	$this->progressThreshold=$progressThresholdIn;
}

function isset_progress_threshold() {
	return isset($this->progressThreshold);
}


function get_comment() {
	return $this->comment;
}
function set_comment($commentIn) { 
	$this->comment=$commentIn;
}

function isset_comment() {
	return isset($this->comment);
}


function get_job_descr_iption() {
	return $this->jobDescription;
}
function set_job_descr_iption($jobDescriptionIn) { 
	$this->jobDescription=$jobDescriptionIn;
}

function isset_job_descr_iption() {
	return isset($this->jobDescription);
}


function get_deleted() {
	return $this->deleted;
}
function set_deleted($deletedIn) { 
	$this->deleted=$deletedIn;
}

function isset_deleted() {
	return isset($this->deleted);
}


function get_appname() {
	return $this->appname;
}
function set_appname($appnameIn) { 
	$this->appname=$appnameIn;
}

function isset_appname() {
	return isset($this->appname);
}


function get_ssh_enable() {
	return $this->sshEnable;
}
function set_ssh_enable($sshEnableIn) { 
	$this->sshEnable=$sshEnableIn;
}

function isset_ssh_enable() {
	return isset($this->sshEnable);
}


function get_ssh_key_type() {
	return $this->sshKeyType;
}
function set_ssh_key_type($sshKeyTypeIn) { 
	$this->sshKeyType=$sshKeyTypeIn;
}

function isset_ssh_key_type() {
	return isset($this->sshKeyType);
}


function get_ssh_c_ipher_type() {
	return $this->sshCipherType;
}
function set_ssh_c_ipher_type($sshCipherTypeIn) { 
	$this->sshCipherType=$sshCipherTypeIn;
}

function isset_ssh_c_ipher_type() {
	return isset($this->sshCipherType);
}


function get_secsh_public_key() {
	return $this->secshPublicKey;
}
function set_secsh_public_key($secshPublicKeyIn) { 
	$this->secshPublicKey=$secshPublicKeyIn;
}

function isset_secsh_public_key() {
	return isset($this->secshPublicKey);
}


function get_ssh_encr_public_key() {
	return $this->sshEncrPublicKey;
}
function set_ssh_encr_public_key($sshEncrPublicKeyIn) { 
	$this->sshEncrPublicKey=$sshEncrPublicKeyIn;
}

function isset_ssh_encr_public_key() {
	return isset($this->sshEncrPublicKey);
}


function get_keygen_state() {
	return $this->keygen_state;
}
function set_keygen_state($keygen_stateIn) { 
	$this->keygen_state=$keygen_stateIn;
}

function isset_keygen_state() {
	return isset($this->keygen_state);
}


function get_sch_mode() {
	return $this->sch_mode;
}
function set_sch_mode($sch_modeIn) { 
	$this->sch_mode=$sch_modeIn;
}

function isset_sch_mode() {
	return isset($this->sch_mode);
}


/** 
 * setAll allows to set all persistent variables in one method call.
 * This is useful, when all data is available and it is needed to 
 * set the initial state of this object. Note that this method will
 * directly modify instance variales, without going trough the 
 * individual set-methods.
 */
function setAll($idIn,$groupIdIn,$jobOrderIn,$sourceHostIn,$sourcePathIn,$destHostIn,$destPathIn,$scheduleIdIn,$optionsIdIn,$directionIn,$rpoThresholdIn,$preCommandSourceIn,$postCommandSourceIn,$preCommandTargetIn,$postCommandTargetIn,$cpuThrottleIn,$progressThresholdIn,$commentIn,$jobDescriptionIn,$deletedIn,$appnameIn,$sshEnableIn,$sshKeyTypeIn,$sshCipherTypeIn,$secshPublicKeyIn,$sshEncrPublicKeyIn,$keygen_stateIn,$sch_modeIn){
	$this->id=$idIn;
	$this->groupId=$groupIdIn;
	$this->jobOrder=$jobOrderIn;
	$this->sourceHost=$sourceHostIn;
	$this->sourcePath=$sourcePathIn;
	$this->destHost=$destHostIn;
	$this->destPath=$destPathIn;
	$this->scheduleId=$scheduleIdIn;
	$this->optionsId=$optionsIdIn;
	$this->direction=$directionIn;
	$this->rpoThreshold=$rpoThresholdIn;
	$this->preCommandSource=$preCommandSourceIn;
	$this->postCommandSource=$postCommandSourceIn;
	$this->preCommandTarget=$preCommandTargetIn;
	$this->postCommandTarget=$postCommandTargetIn;
	$this->cpuThrottle=$cpuThrottleIn;
	$this->progressThreshold=$progressThresholdIn;
	$this->comment=$commentIn;
	$this->jobDescription=$jobDescriptionIn;
	$this->deleted=$deletedIn;
	$this->appname=$appnameIn;
	$this->sshEnable=$sshEnableIn;
	$this->sshKeyType=$sshKeyTypeIn;
	$this->sshCipherType=$sshCipherTypeIn;
	$this->secshPublicKey=$secshPublicKeyIn;
	$this->sshEncrPublicKey=$sshEncrPublicKeyIn;
	$this->keygen_state=$keygen_stateIn;
	$this->sch_mode=$sch_modeIn;
}

/** 
 * setAry allows copy the contents of an associative array 
 * to the member variables
 */
function setAry($ary){ 
	$this->ary=$ary;
	$this->id=$ary["id"];
	$this->groupId=$ary["groupId"];
	$this->jobOrder=$ary["jobOrder"];
	$this->sourceHost=$ary["sourceHost"];
	$this->sourcePath=$ary["sourcePath"];
	$this->destHost=$ary["destHost"];
	$this->destPath=$ary["destPath"];
	$this->scheduleId=$ary["scheduleId"];
	$this->optionsId=$ary["optionsId"];
	$this->direction=$ary["direction"];
	$this->rpoThreshold=$ary["rpoThreshold"];
	$this->preCommandSource=$ary["preCommandSource"];
	$this->postCommandSource=$ary["postCommandSource"];
	$this->preCommandTarget=$ary["preCommandTarget"];
	$this->postCommandTarget=$ary["postCommandTarget"];
	$this->cpuThrottle=$ary["cpuThrottle"];
	$this->progressThreshold=$ary["progressThreshold"];
	$this->comment=$ary["comment"];
	$this->jobDescription=$ary["jobDescription"];
	$this->deleted=$ary["deleted"];
	$this->appname=$ary["appname"];
	$this->sshEnable=$ary["sshEnable"];
	$this->sshKeyType=$ary["sshKeyType"];
	$this->sshCipherType=$ary["sshCipherType"];
	$this->secshPublicKey=$ary["secshPublicKey"];
	$this->sshEncrPublicKey=$ary["sshEncrPublicKey"];
	$this->keygen_state=$ary["keygen_state"];
	$this->sch_mode=$ary["sch_mode"];
}

/** 
 * returns an associative array representing the object
 * if the object values are loaded as result of DB operation, then the array
 * return would equivalent of the row returned DB resultset 
 */
function getAry(){ 
	$oAry = array();
	if (isset($this->ary))
	{
		$oAry = $this->ary;
	}
	else
	{
		$oAry["id"]=$this->id;
		$oAry["groupId"]=$this->groupId;
		$oAry["jobOrder"]=$this->jobOrder;
		$oAry["sourceHost"]=$this->sourceHost;
		$oAry["sourcePath"]=$this->sourcePath;
		$oAry["destHost"]=$this->destHost;
		$oAry["destPath"]=$this->destPath;
		$oAry["scheduleId"]=$this->scheduleId;
		$oAry["optionsId"]=$this->optionsId;
		$oAry["direction"]=$this->direction;
		$oAry["rpoThreshold"]=$this->rpoThreshold;
		$oAry["preCommandSource"]=$this->preCommandSource;
		$oAry["postCommandSource"]=$this->postCommandSource;
		$oAry["preCommandTarget"]=$this->preCommandTarget;
		$oAry["postCommandTarget"]=$this->postCommandTarget;
		$oAry["cpuThrottle"]=$this->cpuThrottle;
		$oAry["progressThreshold"]=$this->progressThreshold;
		$oAry["comment"]=$this->comment;
		$oAry["jobDescription"]=$this->jobDescription;
		$oAry["deleted"]=$this->deleted;
		$oAry["appname"]=$this->appname;
		$oAry["sshEnable"]=$this->sshEnable;
		$oAry["sshKeyType"]=$this->sshKeyType;
		$oAry["sshCipherType"]=$this->sshCipherType;
		$oAry["secshPublicKey"]=$this->secshPublicKey;
		$oAry["sshEncrPublicKey"]=$this->sshEncrPublicKey;
		$oAry["keygen_state"]=$this->keygen_state;
		$oAry["sch_mode"]=$this->sch_mode;
	}
	return $oAry;
} 

 /** 
  * hasEqualMapping-method will compare two Host instances
  * and return true if they contain same values in all persistent instance 
  * variables. If hasEqualMapping returns true, it does not mean the objects
  * are the same instance. However it does mean that in that moment, they 
  * are mapped to the same row in database.
  */
function hasEqualMapping($valueObject){
	if ($valueObject->get_id() != $this->id) {
		return(false);
	}
	if ($valueObject->get_group_id() != $this->groupId) {
		return(false);
	}
	if ($valueObject->get_job_order() != $this->jobOrder) {
		return(false);
	}
	if ($valueObject->get_source_host() != $this->sourceHost) {
		return(false);
	}
	if ($valueObject->get_source_path() != $this->sourcePath) {
		return(false);
	}
	if ($valueObject->get_dest_host() != $this->destHost) {
		return(false);
	}
	if ($valueObject->get_dest_path() != $this->destPath) {
		return(false);
	}
	if ($valueObject->get_schedule_id() != $this->scheduleId) {
		return(false);
	}
	if ($valueObject->get_options_id() != $this->optionsId) {
		return(false);
	}
	if ($valueObject->get_direction() != $this->direction) {
		return(false);
	}
	if ($valueObject->get_rpo_threshold() != $this->rpoThreshold) {
		return(false);
	}
	if ($valueObject->get_pre_command_source() != $this->preCommandSource) {
		return(false);
	}
	if ($valueObject->get_post_command_source() != $this->postCommandSource) {
		return(false);
	}
	if ($valueObject->get_pre_command_target() != $this->preCommandTarget) {
		return(false);
	}
	if ($valueObject->get_post_command_target() != $this->postCommandTarget) {
		return(false);
	}
	if ($valueObject->get_cpu_throttle() != $this->cpuThrottle) {
		return(false);
	}
	if ($valueObject->get_progress_threshold() != $this->progressThreshold) {
		return(false);
	}
	if ($valueObject->get_comment() != $this->comment) {
		return(false);
	}
	if ($valueObject->get_job_descr_iption() != $this->jobDescription) {
		return(false);
	}
	if ($valueObject->get_deleted() != $this->deleted) {
		return(false);
	}
	if ($valueObject->get_appname() != $this->appname) {
		return(false);
	}
	if ($valueObject->get_ssh_enable() != $this->sshEnable) {
		return(false);
	}
	if ($valueObject->get_ssh_key_type() != $this->sshKeyType) {
		return(false);
	}
	if ($valueObject->get_ssh_c_ipher_type() != $this->sshCipherType) {
		return(false);
	}
	if ($valueObject->get_secsh_public_key() != $this->secshPublicKey) {
		return(false);
	}
	if ($valueObject->get_ssh_encr_public_key() != $this->sshEncrPublicKey) {
		return(false);
	}
	if ($valueObject->get_keygen_state() != $this->keygen_state) {
		return(false);
	}
	if ($valueObject->get_sch_mode() != $this->sch_mode) {
		return(false);
	}
    return true;
 }
 
/**
 * toString will return String object representing the state of this 
 * valueObject. This is useful during application development, and 
 * possibly when application is writing object states in textlog.
 */
function toString() {
	$out = $this->get_codegen_version();
	$out = $out."\nclass FrbJobConfigVO, mapping to table frbJobConfig\n";
	$out = $out."Persistent attributes: \n";
	$out = $out."id = ".$this->id."\n";
	$out = $out."groupId = ".$this->groupId."\n";
	$out = $out."jobOrder = ".$this->jobOrder."\n";
	$out = $out."sourceHost = ".$this->sourceHost."\n";
	$out = $out."sourcePath = ".$this->sourcePath."\n";
	$out = $out."destHost = ".$this->destHost."\n";
	$out = $out."destPath = ".$this->destPath."\n";
	$out = $out."scheduleId = ".$this->scheduleId."\n";
	$out = $out."optionsId = ".$this->optionsId."\n";
	$out = $out."direction = ".$this->direction."\n";
	$out = $out."rpoThreshold = ".$this->rpoThreshold."\n";
	$out = $out."preCommandSource = ".$this->preCommandSource."\n";
	$out = $out."postCommandSource = ".$this->postCommandSource."\n";
	$out = $out."preCommandTarget = ".$this->preCommandTarget."\n";
	$out = $out."postCommandTarget = ".$this->postCommandTarget."\n";
	$out = $out."cpuThrottle = ".$this->cpuThrottle."\n";
	$out = $out."progressThreshold = ".$this->progressThreshold."\n";
	$out = $out."comment = ".$this->comment."\n";
	$out = $out."jobDescription = ".$this->jobDescription."\n";
	$out = $out."deleted = ".$this->deleted."\n";
	$out = $out."appname = ".$this->appname."\n";
	$out = $out."sshEnable = ".$this->sshEnable."\n";
	$out = $out."sshKeyType = ".$this->sshKeyType."\n";
	$out = $out."sshCipherType = ".$this->sshCipherType."\n";
	$out = $out."secshPublicKey = ".$this->secshPublicKey."\n";
	$out = $out."sshEncrPublicKey = ".$this->sshEncrPublicKey."\n";
	$out = $out."keygen_state = ".$this->keygen_state."\n";
	$out = $out."sch_mode = ".$this->sch_mode."\n";
	return $out;
}

/**
 * Clone will return identical deep copy of this valueObject.
 * Here, the retuned cloned object will have all its attributes cloned
 */
function __clone() {
	$cloned = new FrbJobConfigVO();
	
	 $cloned->set_id($this->id);
	 $cloned->set_group_id($this->groupId);
	 $cloned->set_job_order($this->jobOrder);
	 $cloned->set_source_host($this->sourceHost);
	 $cloned->set_source_path($this->sourcePath);
	 $cloned->set_dest_host($this->destHost);
	 $cloned->set_dest_path($this->destPath);
	 $cloned->set_schedule_id($this->scheduleId);
	 $cloned->set_options_id($this->optionsId);
	 $cloned->set_direction($this->direction);
	 $cloned->set_rpo_threshold($this->rpoThreshold);
	 $cloned->set_pre_command_source($this->preCommandSource);
	 $cloned->set_post_command_source($this->postCommandSource);
	 $cloned->set_pre_command_target($this->preCommandTarget);
	 $cloned->set_post_command_target($this->postCommandTarget);
	 $cloned->set_cpu_throttle($this->cpuThrottle);
	 $cloned->set_progress_threshold($this->progressThreshold);
	 $cloned->set_comment($this->comment);
	 $cloned->set_job_descr_iption($this->jobDescription);
	 $cloned->set_deleted($this->deleted);
	 $cloned->set_appname($this->appname);
	 $cloned->set_ssh_enable($this->sshEnable);
	 $cloned->set_ssh_key_type($this->sshKeyType);
	 $cloned->set_ssh_c_ipher_type($this->sshCipherType);
	 $cloned->set_secsh_public_key($this->secshPublicKey);
	 $cloned->set_ssh_encr_public_key($this->sshEncrPublicKey);
	 $cloned->set_keygen_state($this->keygen_state);
	 $cloned->set_sch_mode($this->sch_mode);
	
	return $cloned;
}

/** 
 * getCodegenVersion will return information about
 * generator which created these sources.
 */
function get_codegen_version() {
    return  "1.0";
 }
/** 
 * getCodegenTemplateVersion will return information about
 * generator which created these sources.
 */
function get_codegen_template_version() {
    return  "PHPVO-1.7";
 }

}
?>
