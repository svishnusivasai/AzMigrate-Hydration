<?php
/**
 * This sourcecode has been generated by InMage Source Code Generator version 1.0
 * The usage of generated code is restricted to InMage Systems Inc.
 *
 * users Value Object[VO]
 * This class is value object representing database table host
 * This class is needs to be used with associated Dao object
 * Generated Date:	Tue, 27 Nov 2007 14:01:30 +0530	
 * Pattern Version:1.0
 */

class UsersVO
{

/**
 * Global variables 
 */
 
 public $ary;
 
 
 
/** 
 * Persistent Instance variables. This data is directly 
 * mapped to the columns of database table.
 */

public $UID;
public $uname;
public $name;
public $passwd;
public $email;
public $mailsEnabled;
public $sessiontimeout;

/** 
 * Constructors. Code generator generates two constructors by default.
 * The first one takes no arguments and provides the most simple
 * way to create object instance. The another one takes one
 * argument, which is the primary key of the corresponding table.
 */

function UsersVO(){

}

/** 
 * Initializes the variables with database specific 
 * defaults.
 */
 function initialize(){
 
	$this->UID="0";
	$this->uname="nbody";
	$this->name="no body";
	$this->passwd="passwd";
	$this->email="no.body@null.com";
	$this->mailsEnabled="1";
	$this->sessiontimeout="180";
 }
 
/** 
 * Get and Set methods for persistent variables. 
 */

function get_u_id() {
	return $this->UID;
}
function set_u_id($UIDIn) { 
	$this->UID=$UIDIn;
}

function isset_u_id() {
	return isset($this->UID);
}


function get_uname() {
	return $this->uname;
}
function set_uname($unameIn) { 
	$this->uname=$unameIn;
}

function isset_uname() {
	return isset($this->uname);
}


function get_name() {
	return $this->name;
}
function set_name($nameIn) { 
	$this->name=$nameIn;
}

function isset_name() {
	return isset($this->name);
}


function get_passwd() {
	return $this->passwd;
}
function set_passwd($passwdIn) { 
	$this->passwd=$passwdIn;
}

function isset_passwd() {
	return isset($this->passwd);
}


function get_email() {
	return $this->email;
}
function set_email($emailIn) { 
	$this->email=$emailIn;
}

function isset_email() {
	return isset($this->email);
}


function get_mails_enabled() {
	return $this->mailsEnabled;
}
function set_mails_enabled($mailsEnabledIn) { 
	$this->mailsEnabled=$mailsEnabledIn;
}

function isset_mails_enabled() {
	return isset($this->mailsEnabled);
}


function get_sessiontimeout() {
	return $this->sessiontimeout;
}
function set_sessiontimeout($sessiontimeoutIn) { 
	$this->sessiontimeout=$sessiontimeoutIn;
}

function isset_sessiontimeout() {
	return isset($this->sessiontimeout);
}


/** 
 * setAll allows to set all persistent variables in one method call.
 * This is useful, when all data is available and it is needed to 
 * set the initial state of this object. Note that this method will
 * directly modify instance variales, without going trough the 
 * individual set-methods.
 */
function setAll($UIDIn,$unameIn,$nameIn,$passwdIn,$emailIn,$mailsEnabledIn,$sessiontimeoutIn){
	$this->UID=$UIDIn;
	$this->uname=$unameIn;
	$this->name=$nameIn;
	$this->passwd=$passwdIn;
	$this->email=$emailIn;
	$this->mailsEnabled=$mailsEnabledIn;
	$this->sessiontimeout=$sessiontimeoutIn;
}

/** 
 * setAry allows copy the contents of an associative array 
 * to the member variables
 */
function setAry($ary){ 
	$this->ary=$ary;
	$this->UID=$ary["UID"];
	$this->uname=$ary["uname"];
	$this->name=$ary["name"];
	$this->passwd=$ary["passwd"];
	$this->email=$ary["email"];
	$this->mailsEnabled=$ary["mailsEnabled"];
	$this->sessiontimeout=$ary["sessiontimeout"];
}

/** 
 * returns an associative array representing the object
 * if the object values are loaded as result of DB operation, then the array
 * return would equivalent of the row returned DB resultset 
 */
function getAry(){ 
	$oAry = array();
	if (isset($this->ary))
	{
		$oAry = $this->ary;
	}
	else
	{
		$oAry["UID"]=$this->UID;
		$oAry["uname"]=$this->uname;
		$oAry["name"]=$this->name;
		$oAry["passwd"]=$this->passwd;
		$oAry["email"]=$this->email;
		$oAry["mailsEnabled"]=$this->mailsEnabled;
		$oAry["sessiontimeout"]=$this->sessiontimeout;
	}
	return $oAry;
} 

 /** 
  * hasEqualMapping-method will compare two Host instances
  * and return true if they contain same values in all persistent instance 
  * variables. If hasEqualMapping returns true, it does not mean the objects
  * are the same instance. However it does mean that in that moment, they 
  * are mapped to the same row in database.
  */
function hasEqualMapping($valueObject){
	if ($valueObject->get_u_id() != $this->UID) {
		return(false);
	}
	if ($valueObject->get_uname() != $this->uname) {
		return(false);
	}
	if ($valueObject->get_name() != $this->name) {
		return(false);
	}
	if ($valueObject->get_passwd() != $this->passwd) {
		return(false);
	}
	if ($valueObject->get_email() != $this->email) {
		return(false);
	}
	if ($valueObject->get_mails_enabled() != $this->mailsEnabled) {
		return(false);
	}
	if ($valueObject->get_sessiontimeout() != $this->sessiontimeout) {
		return(false);
	}
    return true;
 }
 
/**
 * toString will return String object representing the state of this 
 * valueObject. This is useful during application development, and 
 * possibly when application is writing object states in textlog.
 */
function toString() {
	$out = $this->get_codegen_version();
	$out = $out."\nclass UsersVO, mapping to table users\n";
	$out = $out."Persistent attributes: \n";
	$out = $out."UID = ".$this->UID."\n";
	$out = $out."uname = ".$this->uname."\n";
	$out = $out."name = ".$this->name."\n";
	$out = $out."passwd = ".$this->passwd."\n";
	$out = $out."email = ".$this->email."\n";
	$out = $out."mailsEnabled = ".$this->mailsEnabled."\n";
	$out = $out."sessiontimeout = ".$this->sessiontimeout."\n";
	return $out;
}

/**
 * Clone will return identical deep copy of this valueObject.
 * Here, the retuned cloned object will have all its attributes cloned
 */
function __clone() {
	$cloned = new UsersVO();
	
	 $cloned->set_u_id($this->UID);
	 $cloned->set_uname($this->uname);
	 $cloned->set_name($this->name);
	 $cloned->set_passwd($this->passwd);
	 $cloned->set_email($this->email);
	 $cloned->set_mails_enabled($this->mailsEnabled);
	 $cloned->set_sessiontimeout($this->sessiontimeout);
	
	return $cloned;
}

/** 
 * getCodegenVersion will return information about
 * generator which created these sources.
 */
function get_codegen_version() {
    return  "1.0";
 }
/** 
 * getCodegenTemplateVersion will return information about
 * generator which created these sources.
 */
function get_codegen_template_version() {
    return  "PHPVO-1.7";
 }

}
?>
