<?php
/**
  * This sourcecode has been generated by InMage Source Code Generator version 1.0
  * The usage of generated code is restricted to InMage Systems Inc.
  *
  * srcLogicalVolumeDestLogicalVolume Data Access Object[DAO]
  * This class contains all database handling that is needed to 
  * permanently store and retrieve srcLogicalVolumeDestLogicalVolume object instances. 
  * Generated Date:	Sat, 5 Jul 2008 15:01:34 +0530	
  * Pattern Version:1.0
  */
class SrcLogicalVolumeDestLogicalVolumeDAO
{

/**
 * createValueObject-method. This method is used when the Dao class needs
 * to create new value object instance. The reason why this method exists
 * is that sometimes the programmer may want to extend also the valueObject
 * and then this method can be overrided to return extended valueObject.
 * NOTE: If you extend the valueObject class, make sure to override the
 * clone() method in it!
 */
function createValueObject() {
	return new SrcLogicalVolumeDestLogicalVolumeVO();
 }

/**
 * getObject-method. This will create and load valueObject contents from database 
 * using given Primary-Key as identifier. This method is just a convenience method 
 * for the real load-method which accepts the valueObject as a parameter. Returned
 * valueObject will be created using the createValueObject() method.
 */
function getObject($conn) {
	$valueObject = $this->createValueObject();
	$this->findByPrimaryKey($conn,$valueObject);
	return $valueObject;
}

/**
 * findbyaffected_rows-method. A user defined or custom findbyMethod  
 * ROW_COUNT returns the number of rows updated, inserted, or deleted by the preceding statement
 *
 * @param conn         This method requires working database connection.
 * @param params       associate array: sql will be searched and replaced by the matching values
 *					   associated with the token
 */
function find_by_affected_rows($conn, $params = array()) {

	$sql = "SELECT ROW_COUNT()";
	$sql = str_replace(array_keys($params), array_values($params), $sql);
	$searchResults = $this->listQuery($conn, $sql);
	return $searchResults;
		
}

/**
 * findbypair_insync-method. A user defined or custom findbyMethod  
 * This method updates by type
 *
 * @param conn         This method requires working database connection.
 * @param params       associate array: sql will be searched and replaced by the matching values
 *					   associated with the token
 */
function find_by_pair_insync($conn, $params = array()) {

	$sql = "sourceHostId='srcid' and  sourceDeviceName = '". mysqli_real_escape_string ($conn,'srcdevicename') ."' and jobId = 'jobid' and isResync = 1";
	$sql = str_replace(array_keys($params), array_values($params), $sql);
	$sql = "SELECT * FROM srcLogicalVolumeDestLogicalVolume WHERE (" . $sql . ")";
	$searchResults = $this->listQuery($conn, $sql);
	return $searchResults;
		
}

/**
 * findbysrcdestlv_details-method. A user defined or custom findbyMethod  
 * This method updates by type
 *
 * @param conn         This method requires working database connection.
 * @param params       associate array: sql will be searched and replaced by the matching values
 *					   associated with the token
 */
function find_by_srcdestlv_details($conn, $params = array()) {

	$sql = "jobId = 'jobid'";
	$sql = str_replace(array_keys($params), array_values($params), $sql);
	$sql = "SELECT * FROM srcLogicalVolumeDestLogicalVolume WHERE (" . $sql . ")";
	$searchResults = $this->listQuery($conn, $sql);
	return $searchResults;
		
}

/**
 * findbysrcdestlv-method. A user defined or custom findbyMethod  
 * This method updates by type
 *
 * @param conn         This method requires working database connection.
 * @param params       associate array: sql will be searched and replaced by the matching values
 *					   associated with the token
 */
function find_by_srcdestlv($conn, $params = array()) {

	$sql = "sourceHostId= 'srcid' and  sourceDeviceName = 'srcdevicename'  and destinationHostId= 'destid'  and  destinationDeviceName = 'destdevicename'  ";
	$sql = str_replace(array_keys($params), array_values($params), $sql);
	$sql = "SELECT * FROM srcLogicalVolumeDestLogicalVolume WHERE (" . $sql . ")";
	$searchResults = $this->listQuery($conn, $sql);
	return $searchResults;
		
}

/**
 * findbysrcdestlv_destdetails-method. A user defined or custom findbyMethod  
 * This method updates by type
 *
 * @param conn         This method requires working database connection.
 * @param params       associate array: sql will be searched and replaced by the matching values
 *					   associated with the token
 */
function find_by_srcdestlv_destdetails($conn, $params = array()) {

	$sql = "destinationHostId= 'destid'  and  destinationDeviceName = 'destdevicename'  ";
	$sql = str_replace(array_keys($params), array_values($params), $sql);
	$sql = "SELECT * FROM srcLogicalVolumeDestLogicalVolume WHERE (" . $sql . ")";
	$searchResults = $this->listQuery($conn, $sql);
	return $searchResults;
		
}

/**
 * findbysrcdestlv_destid-method. A user defined or custom findbyMethod  
 * This method updates by type
 *
 * @param conn         This method requires working database connection.
 * @param params       associate array: sql will be searched and replaced by the matching values
 *					   associated with the token
 */
function find_by_srcdestlv_destid($conn, $params = array()) {

	$sql = "destinationHostId= 'destid'";
	$sql = str_replace(array_keys($params), array_values($params), $sql);
	$sql = "SELECT * FROM srcLogicalVolumeDestLogicalVolume WHERE (" . $sql . ")";
	$searchResults = $this->listQuery($conn, $sql);
	return $searchResults;
		
}

/**
 * findbysrcdestlv_srcid-method. A user defined or custom findbyMethod  
 * This method updates by type
 *
 * @param conn         This method requires working database connection.
 * @param params       associate array: sql will be searched and replaced by the matching values
 *					   associated with the token
 */
function find_by_srcdestlv_srcid($conn, $params = array()) {

	$sql = "sourceHostId= 'srcid'";
	$sql = str_replace(array_keys($params), array_values($params), $sql);
	$sql = "SELECT * FROM srcLogicalVolumeDestLogicalVolume WHERE (" . $sql . ")";
	$searchResults = $this->listQuery($conn, $sql);
	return $searchResults;
		
}

/**
 * findbypair_insync_aliasone-method. A user defined or custom findbyMethod  
 * This method updates by type
 *
 * @param conn         This method requires working database connection.
 * @param params       associate array: sql will be searched and replaced by the matching values
 *					   associated with the token
 */
function find_by_pair_insync_aliasone($conn, $params = array()) {

	$sql = "sourceHostId='srcid' and  sourceDeviceName = 'srcdevicename' and jobId = 'jobid' and isResync = 1 and resyncEndTagtime = 0";
	$sql = str_replace(array_keys($params), array_values($params), $sql);
	$sql = "SELECT * FROM srcLogicalVolumeDestLogicalVolume WHERE (" . $sql . ")";
	$searchResults = $this->listQuery($conn, $sql);
	return $searchResults;
		
}

/**
 * findbypair_details_insync_aliasthree-method. A user defined or custom findbyMethod  
 * This method updates by type
 *
 * @param conn         This method requires working database connection.
 * @param params       associate array: sql will be searched and replaced by the matching values
 *					   associated with the token
 */
function find_by_pair_details_insync_aliasthree($conn, $params = array()) {

	$sql = "sourceHostId=  'srcid'  and  sourceDeviceName = 'srcdevicename' and destinationHostId= 'destid'  and  destinationDeviceName =  'destdevicename' and isResync = 1 ";
	$sql = str_replace(array_keys($params), array_values($params), $sql);
	$sql = "SELECT * FROM srcLogicalVolumeDestLogicalVolume WHERE (" . $sql . ")";
	$searchResults = $this->listQuery($conn, $sql);
	return $searchResults;
		
}

/**
 * findAll-method. This will read all contents from database table and
 * build an Vector containing valueObjects. Please note, that this method
 * will consume huge amounts of resources if table has lot's of rows. 
 * This should only be used when target tables have only small amounts
 * of data.
 *
 * @param conn         This method requires working database connection.
 */
function findAll($conn) {
	
	$sql = "SELECT * FROM srcLogicalVolumeDestLogicalVolume";
	$searchResults = $this->listQuery($conn, $sql);
	return $searchResults;
}

/**
 * findbyscenarioid_and_resyncorder-method. A user defined or custom findbyMethod  
 * This method updates by type
 *
 * @param conn         This method requires working database connection.
 * @param params       associate array: sql will be searched and replaced by the matching values
 *					   associated with the token
 */
function find_by_scenarioid_and_resyncorder($conn, $params = array()) {

	$sql = "select scenarioId, resyncOrder, ruleId, planId from srcLogicalVolumeDestLogicalVolume where destinationDeviceName='tdevice' and destinationHostId='tid'";
	$sql = str_replace(array_keys($params), array_values($params), $sql);
	$searchResults = $this->listQuery($conn, $sql);
	return $searchResults;
		
}

/**
 * findbyisquasiflag-method. A user defined or custom findbyMethod  
 * This method updates by type
 *
 * @param conn         This method requires working database connection.
 * @param params       associate array: sql will be searched and replaced by the matching values
 *					   associated with the token
 */
function find_by_isquasiflag($conn, $params = array()) {

	$sql = "select isQuasiflag, executionState from srcLogicalVolumeDestLogicalVolume where scenarioId='scenario_Id' and planId='plan_Id'";
	$sql = str_replace(array_keys($params), array_values($params), $sql);
	$searchResults = $this->listQuery($conn, $sql);
	return $searchResults;
		
}

function find_by_executionState($conn, $params = array()) {

	$sql = "select destinationHostId, destinationDeviceName from srcLogicalVolumeDestLogicalVolume where scenarioId='scenario_Id' and executionState='execution_state' and planId='plan_Id' LIMIT 1";
	$sql = str_replace(array_keys($params), array_values($params), $sql);
	$searchResults = $this->listQuery($conn, $sql);
	return $searchResults;
		
}


/**
 * update_byexecutionstate-method. A user defined or custom updatebyMethod  
 * This method updates by type
 *
 * @param conn         This method requires working database connection.
 * @param params       associate array: sql will be searched and replaced by the matching values
 *					   associated with the token
 */
function update_by_executionstate($conn, $valueObject,$params = array()) {
	$wsql = "destinationDeviceName='tdevice' and destinationHostId='tid'";
	$ssql = str_replace(array_keys($params), array_values($params), $wsql);
	$wsql = " WHERE (" . $ssql . ")";
	
	$count = 0;
	$sql = "UPDATE srcLogicalVolumeDestLogicalVolume SET ";
	if ($valueObject->isset_source_host_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."sourceHostId = '".$valueObject->get_source_host_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_source_device_name())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."sourceDeviceName = '".$valueObject->get_source_device_name()."'";
		$count++;
	}
	
	if ($valueObject->isset_destination_host_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."destinationHostId = '".$valueObject->get_destination_host_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_destination_device_name())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."destinationDeviceName = '".$valueObject->get_destination_device_name()."'";
		$count++;
	}
	
	if ($valueObject->isset_full_sync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."fullSyncStartTime = '".$valueObject->get_full_sync_start_time()."'";
		$count++;
	}
	
	if ($valueObject->isset_full_sync_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."fullSyncEndTime = '".$valueObject->get_full_sync_end_time()."'";
		$count++;
	}
	
	if ($valueObject->isset_full_sync_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."fullSyncStatus = '".$valueObject->get_full_sync_status()."'";
		$count++;
	}
	
	if ($valueObject->isset_full_sync_bytes_sent())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."fullSyncBytesSent = '".$valueObject->get_full_sync_bytes_sent()."'";
		$count++;
	}
	
	if ($valueObject->isset_resync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."resyncStartTime = '".$valueObject->get_resync_start_time()."'";
		$count++;
	}
	
	if ($valueObject->isset_resync_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."resyncEndTime = '".$valueObject->get_resync_end_time()."'";
		$count++;
	}
	
	if ($valueObject->isset_resync_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."resyncStatus = '".$valueObject->get_resync_status()."'";
		$count++;
	}
	
	if ($valueObject->isset_last_resync_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."lastResyncOffset = '".$valueObject->get_last_resync_offset()."'";
		$count++;
	}
	
	if ($valueObject->isset_differential_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."differentialStartTime = '".$valueObject->get_differential_start_time()."'";
		$count++;
	}
	
	if ($valueObject->isset_differential_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."differentialEndTime = '".$valueObject->get_differential_end_time()."'";
		$count++;
	}
	
	if ($valueObject->isset_differential_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."differentialStatus = '".$valueObject->get_differential_status()."'";
		$count++;
	}
	
	if ($valueObject->isset_last_differential_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."lastDifferentialOffset = '".$valueObject->get_last_differential_offset()."'";
		$count++;
	}
	
	if ($valueObject->isset_returnhome_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."returnhomeEndTime = '".$valueObject->get_returnhome_end_time()."'";
		$count++;
	}
	
	if ($valueObject->isset_returnhome_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."returnhomeStartTime = '".$valueObject->get_returnhome_start_time()."'";
		$count++;
	}
	
	if ($valueObject->isset_return_home_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."returnHomeStatus = '".$valueObject->get_return_home_status()."'";
		$count++;
	}
	
	if ($valueObject->isset_last_sentinel_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."lastSentinelChange = '".$valueObject->get_last_sentinel_change()."'";
		$count++;
	}
	
	if ($valueObject->isset_last_t_m_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."lastTMChange = '".$valueObject->get_last_t_m_change()."'";
		$count++;
	}
	
	if ($valueObject->isset_last_outpost_agent_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."lastOutpostAgentChange = '".$valueObject->get_last_outpost_agent_change()."'";
		$count++;
	}
	
	if ($valueObject->isset_wan_lag_ticks())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."wanLagTicks = '".$valueObject->get_wan_lag_ticks()."'";
		$count++;
	}
	
	if ($valueObject->isset_should_resync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."shouldResync = '".$valueObject->get_should_resync()."'";
		$count++;
	}
	
	if ($valueObject->isset_remaining_differential_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."remainingDifferentialBytes = '".$valueObject->get_remaining_differential_bytes()."'";
		$count++;
	}
	
	if ($valueObject->isset_remaining_resync_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."remainingResyncBytes = '".$valueObject->get_remaining_resync_bytes()."'";
		$count++;
	}
	
	if ($valueObject->isset_current_r_p_o_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."currentRPOTime = '".$valueObject->get_current_r_p_o_time()."'";
		$count++;
	}
	
	if ($valueObject->isset_status_update_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."statusUpdateTime = '".$valueObject->get_status_update_time()."'";
		$count++;
	}
	
	if ($valueObject->isset_profiling_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."profilingMode = '".$valueObject->get_profiling_mode()."'";
		$count++;
	}
	
	if ($valueObject->isset_rpo_s_l_a_threshold())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."rpoSLAThreshold = '".$valueObject->get_rpo_s_l_a_threshold()."'";
		$count++;
	}
	
	if ($valueObject->isset_max_resync_files_threshold())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."maxResyncFilesThreshold = '".$valueObject->get_max_resync_files_threshold()."'";
		$count++;
	}
	
	if ($valueObject->isset_ftps_source_secure_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."ftpsSourceSecureMode = '".$valueObject->get_ftps_source_secure_mode()."'";
		$count++;
	}
	
	if ($valueObject->isset_ftps_dest_secure_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."ftpsDestSecureMode = '".$valueObject->get_ftps_dest_secure_mode()."'";
		$count++;
	}
	
	if ($valueObject->isset_one_to_many_source())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."oneToManySource = '".$valueObject->get_one_to_many_source()."'";
		$count++;
	}
	
	if ($valueObject->isset_resync_version())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."resyncVersion = '".$valueObject->get_resync_version()."'";
		$count++;
	}
	
	if ($valueObject->isset_compression_enable())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."compressionEnable = '".$valueObject->get_compression_enable()."'";
		$count++;
	}
	
	if ($valueObject->isset_fast_resync_matched())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."fastResyncMatched = '".$valueObject->get_fast_resync_matched()."'";
		$count++;
	}
	
	if ($valueObject->isset_fast_resync_unmatched())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."fastResyncUnmatched = '".$valueObject->get_fast_resync_unmatched()."'";
		$count++;
	}
	
	if ($valueObject->isset_job_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."jobId = '".$valueObject->get_job_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_rule_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."ruleId = '".$valueObject->get_rule_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_mediaretent())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."mediaretent = '".$valueObject->get_mediaretent()."'";
		$count++;
	}
	
	if ($valueObject->isset_logs_from())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."logsFrom = '".$valueObject->get_logs_from()."'";
		$count++;
	}
	
	if ($valueObject->isset_logs_to())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."logsTo = '".$valueObject->get_logs_to()."'";
		$count++;
	}
	
	if ($valueObject->isset_volume_group_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."volumeGroupId = '".$valueObject->get_volume_group_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_pre_commandsource())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."preCommandsource = '".$valueObject->get_pre_commandsource()."'";
		$count++;
	}
	
	if ($valueObject->isset_post_commandsource())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."postCommandsource = '".$valueObject->get_post_commandsource()."'";
		$count++;
	}
	
	if ($valueObject->isset_is_resync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."isResync = '".$valueObject->get_is_resync()."'";
		$count++;
	}
	
	if ($valueObject->isset_remaining_quasi_diff_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."remainingQuasiDiffBytes = '".$valueObject->get_remaining_quasi_diff_bytes()."'";
		$count++;
	}
	
	if ($valueObject->isset_is_quasiflag())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."isQuasiflag = '".$valueObject->get_is_quasiflag()."'";
		$count++;
	}
	
	if ($valueObject->isset_resync_start_tagtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."resyncStartTagtime = '".$valueObject->get_resync_start_tagtime()."'";
		$count++;
	}
	
	if ($valueObject->isset_resync_start_tagtime_sequence())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."resyncStartTagtimeSequence = '".$valueObject->get_resync_start_tagtime_sequence()."'";
		$count++;
	}
	
	if ($valueObject->isset_resync_end_tagtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."resyncEndTagtime = '".$valueObject->get_resync_end_tagtime()."'";
		$count++;
	}
	
	if ($valueObject->isset_resync_end_tagtime_sequence())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."resyncEndTagtimeSequence = '".$valueObject->get_resync_end_tagtime_sequence()."'";
		$count++;
	}
	
	if ($valueObject->isset_quasidiff_starttime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."quasidiffStarttime = '".$valueObject->get_quasidiff_starttime()."'";
		$count++;
	}
	
	if ($valueObject->isset_quasidiff_endtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."quasidiffEndtime = '".$valueObject->get_quasidiff_endtime()."'";
		$count++;
	}
	
	if ($valueObject->isset_should_resync_set_from())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."ShouldResyncSetFrom = '".$valueObject->get_should_resync_set_from()."'";
		$count++;
	}
	
	if ($valueObject->isset_resync_settimestamp())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."resyncSettimestamp = '".$valueObject->get_resync_settimestamp()."'";
		$count++;
	}
	
	if ($valueObject->isset_resync_set_cxtimestamp())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."resyncSetCxtimestamp = '".$valueObject->get_resync_set_cxtimestamp()."'";
		$count++;
	}
	
	if ($valueObject->isset_throttleresync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."throttleresync = '".$valueObject->get_throttleresync()."'";
		$count++;
	}
	
	if ($valueObject->isset_throttle_differentials())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."throttleDifferentials = '".$valueObject->get_throttle_differentials()."'";
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_type())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."autoResyncStartType = '".$valueObject->get_auto_resync_start_type()."'";
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."autoResyncStartTime = '".$valueObject->get_auto_resync_start_time()."'";
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_hours())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."autoResyncStartHours = '".$valueObject->get_auto_resync_start_hours()."'";
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_minutes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."autoResyncStartMinutes = '".$valueObject->get_auto_resync_start_minutes()."'";
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_stop_hours())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."autoResyncStopHours = '".$valueObject->get_auto_resync_stop_hours()."'";
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_stop_minutes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."autoResyncStopMinutes = '".$valueObject->get_auto_resync_stop_minutes()."'";
		$count++;
	}
	
	if ($valueObject->isset_max_compression())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."maxCompression = '".$valueObject->get_max_compression()."'";
		$count++;
	}
	
	if ($valueObject->isset_max_un_compression())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."maxUnCompression = '".$valueObject->get_max_un_compression()."'";
		$count++;
	}
	
	if ($valueObject->isset_profiling_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."profilingId = '".$valueObject->get_profiling_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_pair_configure_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."pairConfigureTime = '".$valueObject->get_pair_configure_time()."'";
		$count++;
	}
	
	if ($valueObject->isset_is_communicationfrom_source())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."isCommunicationfromSource = '".$valueObject->get_is_communicationfrom_source()."'";
		$count++;
	}
	
	if ($valueObject->isset_replication_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."replication_status = '".$valueObject->get_replication_status()."'";
		$count++;
	}
	
	if ($valueObject->isset_src_replication_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."src_replication_status = '".$valueObject->get_src_replication_status()."'";
		$count++;
	}
	
	if ($valueObject->isset_tar_replication_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."tar_replication_status = '".$valueObject->get_tar_replication_status()."'";
		$count++;
	}
	
	if ($valueObject->isset_differential_pending_in_target())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."differentialPendingInTarget = '".$valueObject->get_differential_pending_in_target()."'";
		$count++;
	}
	
	if ($valueObject->isset_differential_apply_rate())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."differentialApplyRate = '".$valueObject->get_differential_apply_rate()."'";
		$count++;
	}
	
	if ($valueObject->isset_replication_cleanup_options())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."replicationCleanupOptions = '".$valueObject->get_replication_cleanup_options()."'";
		$count++;
	}
	
	if ($valueObject->isset_logs_from_u_t_c())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."logsFromUTC = '".$valueObject->get_logs_from_u_t_c()."'";
		$count++;
	}
	
	if ($valueObject->isset_logs_to_u_t_c())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."logsToUTC = '".$valueObject->get_logs_to_u_t_c()."'";
		$count++;
	}
	
	if ($valueObject->isset_phy__lunid())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."Phy_Lunid = '".$valueObject->get_phy__lunid()."'";
		$count++;
	}
	
	if ($valueObject->isset_lun_state())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."lun_state = '".$valueObject->get_lun_state()."'";
		$count++;
	}
	
	if ($valueObject->isset_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."offset = '".$valueObject->get_offset()."'";
		$count++;
	}
	
	if ($valueObject->isset_resync_counter())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."resyncCounter = '".$valueObject->get_resync_counter()."'";
		$count++;
	}
	
	if ($valueObject->isset_process_server_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."processServerId = '".$valueObject->get_process_server_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_deleted())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."deleted = '".$valueObject->get_deleted()."'";
		$count++;
	}
	
	if ($valueObject->isset_pause_activity())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."pauseActivity = '".$valueObject->get_pause_activity()."'";
		$count++;
	}
	
	if ($valueObject->isset_auto_resume())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."autoResume = '".$valueObject->get_auto_resume()."'";
		$count++;
	}
	
	if ($valueObject->isset_restart_resync_counter())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."restartResyncCounter = '".$valueObject->get_restart_resync_counter()."'";
		$count++;
	}
	
	if ($valueObject->isset_plan_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."planId = '".$valueObject->get_plan_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_scenario_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."scenarioId = '".$valueObject->get_scenario_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_application_type())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."applicationType = '".$valueObject->get_application_type()."'";
		$count++;
	}
	
	if ($valueObject->isset_resync_order())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."resyncOrder = '".$valueObject->get_resync_order()."'";
		$count++;
	}
	
	if ($valueObject->isset_execution_state())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."executionState = '".$valueObject->get_execution_state()."'";
		$count++;
	}
	
	if ($valueObject->isset_stats())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		$sql = $sql."stats = '".$valueObject->get_stats()."'";
		$count++;
	}
	
	$sql = $sql.$wsql;
    $result = $this->databaseUpdate($conn, $sql);
    if ($result != 1) {
        //print "PrimaryKey Error when updating DB!";
    	return false;
	}
 	return true;
}

/**
 * create-method. This will create new row in database according to supplied
 * valueObject contents. Make sure that values for all NOT NULL columns are
 * correctly specified. Also, if this table does not use automatic surrogate-keys
 * the primary-key must be specified. After INSERT command this method will 
 * read the generated primary-key back to valueObject if automatic surrogate-keys
 * were used. 
 *
 * @param conn         This method requires working database connection.
 * @param valueObject  This parameter contains the class instance to be created.
 *                     If automatic surrogate-keys are not used the Primary-key 
 *                     field must be set for this to work properly.
 */
function create($conn, $valueObject) {
	 $count = 0;
     $sql1 = "INSERT INTO srcLogicalVolumeDestLogicalVolume(";
     $sql3 = ") VALUES ("; 
	 
	 if ($valueObject->isset_source_host_id())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."sourceHostId";
 	    
 	    
 	     $sql4 = $sql4."'".$valueObject->get_source_host_id()."'"; 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_source_device_name())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."sourceDeviceName";
 	    
 	    
 	     $sql4 = $sql4."'".$valueObject->get_source_device_name()."'"; 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_destination_host_id())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."destinationHostId";
 	    
 	    
 	     $sql4 = $sql4."'".$valueObject->get_destination_host_id()."'"; 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_destination_device_name())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."destinationDeviceName";
 	    
 	    
 	     $sql4 = $sql4."'".$valueObject->get_destination_device_name()."'"; 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_full_sync_start_time())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."fullSyncStartTime";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_full_sync_start_time(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_full_sync_end_time())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."fullSyncEndTime";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_full_sync_end_time(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_full_sync_status())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."fullSyncStatus";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_full_sync_status(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_full_sync_bytes_sent())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."fullSyncBytesSent";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_full_sync_bytes_sent(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_resync_start_time())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."resyncStartTime";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_resync_start_time(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_resync_end_time())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."resyncEndTime";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_resync_end_time(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_resync_status())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."resyncStatus";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_resync_status(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_last_resync_offset())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."lastResyncOffset";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_last_resync_offset(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_differential_start_time())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."differentialStartTime";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_differential_start_time(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_differential_end_time())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."differentialEndTime";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_differential_end_time(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_differential_status())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."differentialStatus";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_differential_status(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_last_differential_offset())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."lastDifferentialOffset";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_last_differential_offset(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_returnhome_end_time())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."returnhomeEndTime";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_returnhome_end_time(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_returnhome_start_time())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."returnhomeStartTime";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_returnhome_start_time(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_return_home_status())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."returnHomeStatus";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_return_home_status(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_last_sentinel_change())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."lastSentinelChange";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_last_sentinel_change(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_last_t_m_change())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."lastTMChange";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_last_t_m_change(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_last_outpost_agent_change())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."lastOutpostAgentChange";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_last_outpost_agent_change(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_wan_lag_ticks())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."wanLagTicks";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_wan_lag_ticks(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_should_resync())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."shouldResync";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_should_resync(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_remaining_differential_bytes())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."remainingDifferentialBytes";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_remaining_differential_bytes(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_remaining_resync_bytes())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."remainingResyncBytes";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_remaining_resync_bytes(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_current_r_p_o_time())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."currentRPOTime";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_current_r_p_o_time(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_status_update_time())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."statusUpdateTime";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_status_update_time(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_profiling_mode())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."profilingMode";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_profiling_mode(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_rpo_s_l_a_threshold())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."rpoSLAThreshold";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_rpo_s_l_a_threshold(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_max_resync_files_threshold())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."maxResyncFilesThreshold";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_max_resync_files_threshold(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_ftps_source_secure_mode())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."ftpsSourceSecureMode";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_ftps_source_secure_mode(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_ftps_dest_secure_mode())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."ftpsDestSecureMode";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_ftps_dest_secure_mode(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_one_to_many_source())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."oneToManySource";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_one_to_many_source(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_resync_version())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."resyncVersion";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_resync_version(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_compression_enable())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."compressionEnable";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_compression_enable(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_fast_resync_matched())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."fastResyncMatched";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_fast_resync_matched(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_fast_resync_unmatched())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."fastResyncUnmatched";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_fast_resync_unmatched(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_job_id())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."jobId";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_job_id(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_rule_id())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."ruleId";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_rule_id(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_mediaretent())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."mediaretent";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_mediaretent(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_logs_from())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."logsFrom";
 	    
 	    
 	     $sql4 = $sql4."'".$valueObject->get_logs_from()."'"; 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_logs_to())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."logsTo";
 	    
 	    
 	     $sql4 = $sql4."'".$valueObject->get_logs_to()."'"; 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_volume_group_id())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."volumeGroupId";
 	    
 	    
 	     $sql4 = $sql4."'".$valueObject->get_volume_group_id()."'"; 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_pre_commandsource())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."preCommandsource";
 	    
 	    
 	     $sql4 = $sql4."'".$valueObject->get_pre_commandsource()."'"; 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_post_commandsource())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."postCommandsource";
 	    
 	    
 	     $sql4 = $sql4."'".$valueObject->get_post_commandsource()."'"; 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_is_resync())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."isResync";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_is_resync(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_remaining_quasi_diff_bytes())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."remainingQuasiDiffBytes";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_remaining_quasi_diff_bytes(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_is_quasiflag())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."isQuasiflag";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_is_quasiflag(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_resync_start_tagtime())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."resyncStartTagtime";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_resync_start_tagtime(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_resync_start_tagtime_sequence())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."resyncStartTagtimeSequence";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_resync_start_tagtime_sequence(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_resync_end_tagtime())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."resyncEndTagtime";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_resync_end_tagtime(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_resync_end_tagtime_sequence())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."resyncEndTagtimeSequence";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_resync_end_tagtime_sequence(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_quasidiff_starttime())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."quasidiffStarttime";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_quasidiff_starttime(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_quasidiff_endtime())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."quasidiffEndtime";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_quasidiff_endtime(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_should_resync_set_from())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."ShouldResyncSetFrom";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_should_resync_set_from(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_resync_settimestamp())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."resyncSettimestamp";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_resync_settimestamp(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_resync_set_cxtimestamp())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."resyncSetCxtimestamp";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_resync_set_cxtimestamp(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_throttleresync())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."throttleresync";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_throttleresync(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_throttle_differentials())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."throttleDifferentials";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_throttle_differentials(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_auto_resync_start_type())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."autoResyncStartType";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_auto_resync_start_type(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_auto_resync_start_time())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."autoResyncStartTime";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_auto_resync_start_time(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_auto_resync_start_hours())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."autoResyncStartHours";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_auto_resync_start_hours(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_auto_resync_start_minutes())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."autoResyncStartMinutes";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_auto_resync_start_minutes(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_auto_resync_stop_hours())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."autoResyncStopHours";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_auto_resync_stop_hours(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_auto_resync_stop_minutes())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."autoResyncStopMinutes";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_auto_resync_stop_minutes(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_max_compression())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."maxCompression";
 	    
 	    
 	     $sql4 = $sql4."'".$valueObject->get_max_compression()."'"; 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_max_un_compression())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."maxUnCompression";
 	    
 	    
 	     $sql4 = $sql4."'".$valueObject->get_max_un_compression()."'"; 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_profiling_id())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."profilingId";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_profiling_id(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_pair_configure_time())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."pairConfigureTime";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_pair_configure_time(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_ftp_failure())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."ftpFailure";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_ftp_failure(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_phy__lunid())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."Phy_Lunid";
 	    
 	    
 	     $sql4 = $sql4."'".$valueObject->get_phy__lunid()."'"; 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_lun_state())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."lun_state";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_lun_state(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_offset())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."offset";
 	    
 	    
 	     $sql4 = $sql4.$valueObject->get_offset(); 	
		
 		$count++;
 	 }
	 
	 if ($valueObject->isset_stats())
 	 {
 	  	if($count>0)
		{
			$sql2 = $sql2 . ",";
			$sql4 = $sql4 . ",";
		}
 	    $sql2 = $sql2."stats";
 	    
 	    
 	     $sql4 = $sql4."'".$valueObject->get_stats()."'"; 	
		
 		$count++;
 	 }
	 
	$sql = $sql1 . $sql2. $sql3. $sql4.")";
	$result = $this->databaseUpdate($conn, $sql);
	return true;
}

/**
 * update_byagent_sync_end_time-method. A user defined or custom updatebyMethod  
 * This method updates by type
 *
 * @param conn         This method requires working database connection.
 * @param params       associate array: sql will be searched and replaced by the matching values
 *					   associated with the token
 */
function update_by_agent_sync_end_time($conn, $valueObject,$params = array()) {
	$wsql = "destinationHostId= 'destid' and  destinationDeviceName = 'destdevicename'  and resyncEndTagtime = 0";
	$ssql = str_replace(array_keys($params), array_values($params), $wsql);
	$wsql = " WHERE (" . $ssql . ")";
	
	$count = 0;
	$sql = "UPDATE srcLogicalVolumeDestLogicalVolume SET ";
	if ($valueObject->isset_source_host_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."sourceHostId = '".$valueObject->get_source_host_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_source_device_name())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."sourceDeviceName = '".$valueObject->get_source_device_name()."'";
		$count++;
	}
	
	if ($valueObject->isset_destination_host_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."destinationHostId = '".$valueObject->get_destination_host_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_destination_device_name())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."destinationDeviceName = '".$valueObject->get_destination_device_name()."'";
		$count++;
	}
	
	if ($valueObject->isset_full_sync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncStartTime = ".$valueObject->get_full_sync_start_time();
		$count++;
	}
	
	if ($valueObject->isset_full_sync_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncEndTime = ".$valueObject->get_full_sync_end_time();
		$count++;
	}
	
	if ($valueObject->isset_full_sync_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncStatus = ".$valueObject->get_full_sync_status();
		$count++;
	}
	
	if ($valueObject->isset_full_sync_bytes_sent())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncBytesSent = ".$valueObject->get_full_sync_bytes_sent();
		$count++;
	}
	
	if ($valueObject->isset_resync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStartTime = ".$valueObject->get_resync_start_time();
		$count++;
	}
	
	if ($valueObject->isset_resync_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncEndTime = ".$valueObject->get_resync_end_time();
		$count++;
	}
	
	if ($valueObject->isset_resync_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStatus = ".$valueObject->get_resync_status();
		$count++;
	}
	
	if ($valueObject->isset_last_resync_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastResyncOffset = ".$valueObject->get_last_resync_offset();
		$count++;
	}
	
	if ($valueObject->isset_differential_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."differentialStartTime = ".$valueObject->get_differential_start_time();
		$count++;
	}
	
	if ($valueObject->isset_differential_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."differentialEndTime = ".$valueObject->get_differential_end_time();
		$count++;
	}
	
	if ($valueObject->isset_differential_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."differentialStatus = ".$valueObject->get_differential_status();
		$count++;
	}
	
	if ($valueObject->isset_last_differential_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastDifferentialOffset = ".$valueObject->get_last_differential_offset();
		$count++;
	}
	
	if ($valueObject->isset_returnhome_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."returnhomeEndTime = ".$valueObject->get_returnhome_end_time();
		$count++;
	}
	
	if ($valueObject->isset_returnhome_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."returnhomeStartTime = ".$valueObject->get_returnhome_start_time();
		$count++;
	}
	
	if ($valueObject->isset_return_home_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."returnHomeStatus = ".$valueObject->get_return_home_status();
		$count++;
	}
	
	if ($valueObject->isset_last_sentinel_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastSentinelChange = ".$valueObject->get_last_sentinel_change();
		$count++;
	}
	
	if ($valueObject->isset_last_t_m_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastTMChange = ".$valueObject->get_last_t_m_change();
		$count++;
	}
	
	if ($valueObject->isset_last_outpost_agent_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastOutpostAgentChange = ".$valueObject->get_last_outpost_agent_change();
		$count++;
	}
	
	if ($valueObject->isset_wan_lag_ticks())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."wanLagTicks = ".$valueObject->get_wan_lag_ticks();
		$count++;
	}
	
	if ($valueObject->isset_should_resync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."shouldResync = ".$valueObject->get_should_resync();
		$count++;
	}
	
	if ($valueObject->isset_remaining_differential_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."remainingDifferentialBytes = ".$valueObject->get_remaining_differential_bytes();
		$count++;
	}
	
	if ($valueObject->isset_remaining_resync_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."remainingResyncBytes = ".$valueObject->get_remaining_resync_bytes();
		$count++;
	}
	
	if ($valueObject->isset_current_r_p_o_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."currentRPOTime = ".$valueObject->get_current_r_p_o_time();
		$count++;
	}
	
	if ($valueObject->isset_status_update_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."statusUpdateTime = ".$valueObject->get_status_update_time();
		$count++;
	}
	
	if ($valueObject->isset_profiling_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."profilingMode = ".$valueObject->get_profiling_mode();
		$count++;
	}
	
	if ($valueObject->isset_rpo_s_l_a_threshold())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."rpoSLAThreshold = ".$valueObject->get_rpo_s_l_a_threshold();
		$count++;
	}
	
	if ($valueObject->isset_max_resync_files_threshold())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."maxResyncFilesThreshold = ".$valueObject->get_max_resync_files_threshold();
		$count++;
	}
	
	if ($valueObject->isset_ftps_source_secure_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ftpsSourceSecureMode = ".$valueObject->get_ftps_source_secure_mode();
		$count++;
	}
	
	if ($valueObject->isset_ftps_dest_secure_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ftpsDestSecureMode = ".$valueObject->get_ftps_dest_secure_mode();
		$count++;
	}
	
	if ($valueObject->isset_one_to_many_source())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."oneToManySource = ".$valueObject->get_one_to_many_source();
		$count++;
	}
	
	if ($valueObject->isset_resync_version())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncVersion = ".$valueObject->get_resync_version();
		$count++;
	}
	
	if ($valueObject->isset_compression_enable())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."compressionEnable = ".$valueObject->get_compression_enable();
		$count++;
	}
	
	if ($valueObject->isset_fast_resync_matched())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fastResyncMatched = ".$valueObject->get_fast_resync_matched();
		$count++;
	}
	
	if ($valueObject->isset_fast_resync_unmatched())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fastResyncUnmatched = ".$valueObject->get_fast_resync_unmatched();
		$count++;
	}
	
	if ($valueObject->isset_job_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."jobId = ".$valueObject->get_job_id();
		$count++;
	}
	
	if ($valueObject->isset_rule_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ruleId = ".$valueObject->get_rule_id();
		$count++;
	}
	
	if ($valueObject->isset_mediaretent())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."mediaretent = ".$valueObject->get_mediaretent();
		$count++;
	}
	
	if ($valueObject->isset_logs_from())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."logsFrom = '".$valueObject->get_logs_from()."'";
		$count++;
	}
	
	if ($valueObject->isset_logs_to())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."logsTo = '".$valueObject->get_logs_to()."'";
		$count++;
	}
	
	if ($valueObject->isset_volume_group_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."volumeGroupId = '".$valueObject->get_volume_group_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_pre_commandsource())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."preCommandsource = '".$valueObject->get_pre_commandsource()."'";
		$count++;
	}
	
	if ($valueObject->isset_post_commandsource())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."postCommandsource = '".$valueObject->get_post_commandsource()."'";
		$count++;
	}
	
	if ($valueObject->isset_is_resync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."isResync = ".$valueObject->get_is_resync();
		$count++;
	}
	
	if ($valueObject->isset_remaining_quasi_diff_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."remainingQuasiDiffBytes = ".$valueObject->get_remaining_quasi_diff_bytes();
		$count++;
	}
	
	if ($valueObject->isset_is_quasiflag())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."isQuasiflag = ".$valueObject->get_is_quasiflag();
		$count++;
	}
	
	if ($valueObject->isset_resync_start_tagtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStartTagtime = ".$valueObject->get_resync_start_tagtime();
		$count++;
	}
	
	if ($valueObject->isset_resync_start_tagtime_sequence())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStartTagtimeSequence = ".$valueObject->get_resync_start_tagtime_sequence();
		$count++;
	}
	
	if ($valueObject->isset_resync_end_tagtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncEndTagtime = ".$valueObject->get_resync_end_tagtime();
		$count++;
	}
	
	if ($valueObject->isset_resync_end_tagtime_sequence())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncEndTagtimeSequence = ".$valueObject->get_resync_end_tagtime_sequence();
		$count++;
	}
	
	if ($valueObject->isset_quasidiff_starttime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."quasidiffStarttime = ".$valueObject->get_quasidiff_starttime();
		$count++;
	}
	
	if ($valueObject->isset_quasidiff_endtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."quasidiffEndtime = ".$valueObject->get_quasidiff_endtime();
		$count++;
	}
	
	if ($valueObject->isset_should_resync_set_from())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ShouldResyncSetFrom = ".$valueObject->get_should_resync_set_from();
		$count++;
	}
	
	if ($valueObject->isset_resync_settimestamp())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncSettimestamp = ".$valueObject->get_resync_settimestamp();
		$count++;
	}
	
	if ($valueObject->isset_resync_set_cxtimestamp())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncSetCxtimestamp = ".$valueObject->get_resync_set_cxtimestamp();
		$count++;
	}
	
	if ($valueObject->isset_throttleresync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."throttleresync = ".$valueObject->get_throttleresync();
		$count++;
	}
	
	if ($valueObject->isset_throttle_differentials())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."throttleDifferentials = ".$valueObject->get_throttle_differentials();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_type())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartType = ".$valueObject->get_auto_resync_start_type();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartTime = ".$valueObject->get_auto_resync_start_time();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_hours())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartHours = ".$valueObject->get_auto_resync_start_hours();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_minutes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartMinutes = ".$valueObject->get_auto_resync_start_minutes();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_stop_hours())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStopHours = ".$valueObject->get_auto_resync_stop_hours();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_stop_minutes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStopMinutes = ".$valueObject->get_auto_resync_stop_minutes();
		$count++;
	}
	
	if ($valueObject->isset_max_compression())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."maxCompression = '".$valueObject->get_max_compression()."'";
		$count++;
	}
	
	if ($valueObject->isset_max_un_compression())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."maxUnCompression = '".$valueObject->get_max_un_compression()."'";
		$count++;
	}
	
	if ($valueObject->isset_profiling_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."profilingId = ".$valueObject->get_profiling_id();
		$count++;
	}
	
	if ($valueObject->isset_pair_configure_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."pairConfigureTime = ".$valueObject->get_pair_configure_time();
		$count++;
	}
	
	if ($valueObject->isset_ftp_failure())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ftpFailure = ".$valueObject->get_ftp_failure();
		$count++;
	}
	
	if ($valueObject->isset_phy__lunid())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."Phy_Lunid = '".$valueObject->get_phy__lunid()."'";
		$count++;
	}
	
	if ($valueObject->isset_lun_state())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lun_state = ".$valueObject->get_lun_state();
		$count++;
	}
	
	if ($valueObject->isset_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."offset = ".$valueObject->get_offset();
		$count++;
	}
	
	if ($valueObject->isset_stats())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."stats = '".$valueObject->get_stats()."'";
		$count++;
	}
	
	$sql = $sql.$wsql;    
	$result = $this->databaseUpdate($conn, $sql);
    if ($result != 1) {
        //print "PrimaryKey Error when updating DB!";
    	return false;
	}
 	return true;
}

/**
 * update_byagent_sync_start_time-method. A user defined or custom updatebyMethod  
 * This method updates by type
 *
 * @param conn         This method requires working database connection.
 * @param params       associate array: sql will be searched and replaced by the matching values
 *					   associated with the token
 */
function update_by_agent_sync_start_time($conn, $valueObject,$params = array()) {
	$wsql = "destinationHostId= 'destid' and  destinationDeviceName = 'destdevicename'";
	$ssql = str_replace(array_keys($params), array_values($params), $wsql);
	$wsql = " WHERE (" . $ssql . ")";
	
	$count = 0;
	$sql = "UPDATE srcLogicalVolumeDestLogicalVolume SET ";
	if ($valueObject->isset_source_host_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."sourceHostId = '".$valueObject->get_source_host_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_source_device_name())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."sourceDeviceName = '".$valueObject->get_source_device_name()."'";
		$count++;
	}
	
	if ($valueObject->isset_destination_host_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."destinationHostId = '".$valueObject->get_destination_host_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_destination_device_name())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."destinationDeviceName = '".$valueObject->get_destination_device_name()."'";
		$count++;
	}
	
	if ($valueObject->isset_full_sync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncStartTime = ".$valueObject->get_full_sync_start_time();
		$count++;
	}
	
	if ($valueObject->isset_full_sync_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncEndTime = ".$valueObject->get_full_sync_end_time();
		$count++;
	}
	
	if ($valueObject->isset_full_sync_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncStatus = ".$valueObject->get_full_sync_status();
		$count++;
	}
	
	if ($valueObject->isset_full_sync_bytes_sent())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncBytesSent = ".$valueObject->get_full_sync_bytes_sent();
		$count++;
	}
	
	if ($valueObject->isset_resync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStartTime = ".$valueObject->get_resync_start_time();
		$count++;
	}
	
	if ($valueObject->isset_resync_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncEndTime = ".$valueObject->get_resync_end_time();
		$count++;
	}
	
	if ($valueObject->isset_resync_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStatus = ".$valueObject->get_resync_status();
		$count++;
	}
	
	if ($valueObject->isset_last_resync_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastResyncOffset = ".$valueObject->get_last_resync_offset();
		$count++;
	}
	
	if ($valueObject->isset_differential_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."differentialStartTime = ".$valueObject->get_differential_start_time();
		$count++;
	}
	
	if ($valueObject->isset_differential_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."differentialEndTime = ".$valueObject->get_differential_end_time();
		$count++;
	}
	
	if ($valueObject->isset_differential_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."differentialStatus = ".$valueObject->get_differential_status();
		$count++;
	}
	
	if ($valueObject->isset_last_differential_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastDifferentialOffset = ".$valueObject->get_last_differential_offset();
		$count++;
	}
	
	if ($valueObject->isset_returnhome_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."returnhomeEndTime = ".$valueObject->get_returnhome_end_time();
		$count++;
	}
	
	if ($valueObject->isset_returnhome_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."returnhomeStartTime = ".$valueObject->get_returnhome_start_time();
		$count++;
	}
	
	if ($valueObject->isset_return_home_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."returnHomeStatus = ".$valueObject->get_return_home_status();
		$count++;
	}
	
	if ($valueObject->isset_last_sentinel_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastSentinelChange = ".$valueObject->get_last_sentinel_change();
		$count++;
	}
	
	if ($valueObject->isset_last_t_m_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastTMChange = ".$valueObject->get_last_t_m_change();
		$count++;
	}
	
	if ($valueObject->isset_last_outpost_agent_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastOutpostAgentChange = ".$valueObject->get_last_outpost_agent_change();
		$count++;
	}
	
	if ($valueObject->isset_wan_lag_ticks())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."wanLagTicks = ".$valueObject->get_wan_lag_ticks();
		$count++;
	}
	
	if ($valueObject->isset_should_resync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."shouldResync = ".$valueObject->get_should_resync();
		$count++;
	}
	
	if ($valueObject->isset_remaining_differential_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."remainingDifferentialBytes = ".$valueObject->get_remaining_differential_bytes();
		$count++;
	}
	
	if ($valueObject->isset_remaining_resync_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."remainingResyncBytes = ".$valueObject->get_remaining_resync_bytes();
		$count++;
	}
	
	if ($valueObject->isset_current_r_p_o_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."currentRPOTime = ".$valueObject->get_current_r_p_o_time();
		$count++;
	}
	
	if ($valueObject->isset_status_update_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."statusUpdateTime = ".$valueObject->get_status_update_time();
		$count++;
	}
	
	if ($valueObject->isset_profiling_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."profilingMode = ".$valueObject->get_profiling_mode();
		$count++;
	}
	
	if ($valueObject->isset_rpo_s_l_a_threshold())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."rpoSLAThreshold = ".$valueObject->get_rpo_s_l_a_threshold();
		$count++;
	}
	
	if ($valueObject->isset_max_resync_files_threshold())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."maxResyncFilesThreshold = ".$valueObject->get_max_resync_files_threshold();
		$count++;
	}
	
	if ($valueObject->isset_ftps_source_secure_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ftpsSourceSecureMode = ".$valueObject->get_ftps_source_secure_mode();
		$count++;
	}
	
	if ($valueObject->isset_ftps_dest_secure_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ftpsDestSecureMode = ".$valueObject->get_ftps_dest_secure_mode();
		$count++;
	}
	
	if ($valueObject->isset_one_to_many_source())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."oneToManySource = ".$valueObject->get_one_to_many_source();
		$count++;
	}
	
	if ($valueObject->isset_resync_version())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncVersion = ".$valueObject->get_resync_version();
		$count++;
	}
	
	if ($valueObject->isset_compression_enable())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."compressionEnable = ".$valueObject->get_compression_enable();
		$count++;
	}
	
	if ($valueObject->isset_fast_resync_matched())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fastResyncMatched = ".$valueObject->get_fast_resync_matched();
		$count++;
	}
	
	if ($valueObject->isset_fast_resync_unmatched())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fastResyncUnmatched = ".$valueObject->get_fast_resync_unmatched();
		$count++;
	}
	
	if ($valueObject->isset_job_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."jobId = ".$valueObject->get_job_id();
		$count++;
	}
	
	if ($valueObject->isset_rule_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ruleId = ".$valueObject->get_rule_id();
		$count++;
	}
	
	if ($valueObject->isset_mediaretent())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."mediaretent = ".$valueObject->get_mediaretent();
		$count++;
	}
	
	if ($valueObject->isset_logs_from())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."logsFrom = '".$valueObject->get_logs_from()."'";
		$count++;
	}
	
	if ($valueObject->isset_logs_to())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."logsTo = '".$valueObject->get_logs_to()."'";
		$count++;
	}
	
	if ($valueObject->isset_volume_group_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."volumeGroupId = '".$valueObject->get_volume_group_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_pre_commandsource())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."preCommandsource = '".$valueObject->get_pre_commandsource()."'";
		$count++;
	}
	
	if ($valueObject->isset_post_commandsource())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."postCommandsource = '".$valueObject->get_post_commandsource()."'";
		$count++;
	}
	
	if ($valueObject->isset_is_resync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."isResync = ".$valueObject->get_is_resync();
		$count++;
	}
	
	if ($valueObject->isset_remaining_quasi_diff_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."remainingQuasiDiffBytes = ".$valueObject->get_remaining_quasi_diff_bytes();
		$count++;
	}
	
	if ($valueObject->isset_is_quasiflag())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."isQuasiflag = ".$valueObject->get_is_quasiflag();
		$count++;
	}
	
	if ($valueObject->isset_resync_start_tagtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStartTagtime = ".$valueObject->get_resync_start_tagtime();
		$count++;
	}
	
	if ($valueObject->isset_resync_start_tagtime_sequence())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStartTagtimeSequence = ".$valueObject->get_resync_start_tagtime_sequence();
		$count++;
	}
	
	if ($valueObject->isset_resync_end_tagtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncEndTagtime = ".$valueObject->get_resync_end_tagtime();
		$count++;
	}
	
	if ($valueObject->isset_resync_end_tagtime_sequence())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncEndTagtimeSequence = ".$valueObject->get_resync_end_tagtime_sequence();
		$count++;
	}
	
	if ($valueObject->isset_quasidiff_starttime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."quasidiffStarttime = ".$valueObject->get_quasidiff_starttime();
		$count++;
	}
	
	if ($valueObject->isset_quasidiff_endtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."quasidiffEndtime = ".$valueObject->get_quasidiff_endtime();
		$count++;
	}
	
	if ($valueObject->isset_should_resync_set_from())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ShouldResyncSetFrom = ".$valueObject->get_should_resync_set_from();
		$count++;
	}
	
	if ($valueObject->isset_resync_settimestamp())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncSettimestamp = ".$valueObject->get_resync_settimestamp();
		$count++;
	}
	
	if ($valueObject->isset_resync_set_cxtimestamp())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncSetCxtimestamp = ".$valueObject->get_resync_set_cxtimestamp();
		$count++;
	}
	
	if ($valueObject->isset_throttleresync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."throttleresync = ".$valueObject->get_throttleresync();
		$count++;
	}
	
	if ($valueObject->isset_throttle_differentials())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."throttleDifferentials = ".$valueObject->get_throttle_differentials();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_type())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartType = ".$valueObject->get_auto_resync_start_type();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartTime = ".$valueObject->get_auto_resync_start_time();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_hours())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartHours = ".$valueObject->get_auto_resync_start_hours();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_minutes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartMinutes = ".$valueObject->get_auto_resync_start_minutes();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_stop_hours())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStopHours = ".$valueObject->get_auto_resync_stop_hours();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_stop_minutes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStopMinutes = ".$valueObject->get_auto_resync_stop_minutes();
		$count++;
	}
	
	if ($valueObject->isset_max_compression())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."maxCompression = '".$valueObject->get_max_compression()."'";
		$count++;
	}
	
	if ($valueObject->isset_max_un_compression())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."maxUnCompression = '".$valueObject->get_max_un_compression()."'";
		$count++;
	}
	
	if ($valueObject->isset_profiling_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."profilingId = ".$valueObject->get_profiling_id();
		$count++;
	}
	
	if ($valueObject->isset_pair_configure_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."pairConfigureTime = ".$valueObject->get_pair_configure_time();
		$count++;
	}
	
	if ($valueObject->isset_ftp_failure())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ftpFailure = ".$valueObject->get_ftp_failure();
		$count++;
	}
	
	if ($valueObject->isset_phy__lunid())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."Phy_Lunid = '".$valueObject->get_phy__lunid()."'";
		$count++;
	}
	
	if ($valueObject->isset_lun_state())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lun_state = ".$valueObject->get_lun_state();
		$count++;
	}
	
	if ($valueObject->isset_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."offset = ".$valueObject->get_offset();
		$count++;
	}
	
	if ($valueObject->isset_stats())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."stats = '".$valueObject->get_stats()."'";
		$count++;
	}
	
	$sql = $sql.$wsql;    
	$result = $this->databaseUpdate($conn, $sql);
    if ($result != 1) {
        //print "PrimaryKey Error when updating DB!";
    	return false;
	}
 	return true;
}

/**
 * update_bydestination-method. A user defined or custom updatebyMethod  
 * This method updates by type
 *
 * @param conn         This method requires working database connection.
 * @param params       associate array: sql will be searched and replaced by the matching values
 *					   associated with the token
 */
function update_by_destination($conn, $valueObject,$params = array()) {
	$wsql = "destinationHostId= 'destid' and  destinationDeviceName = 'destdevicename'";
	$ssql = str_replace(array_keys($params), array_values($params), $wsql);
	$wsql = " WHERE (" . $ssql . ")";
	
	$count = 0;
	$sql = "UPDATE srcLogicalVolumeDestLogicalVolume SET ";
	if ($valueObject->isset_source_host_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."sourceHostId = '".$valueObject->get_source_host_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_source_device_name())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."sourceDeviceName = '".$valueObject->get_source_device_name()."'";
		$count++;
	}
	
	if ($valueObject->isset_destination_host_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."destinationHostId = '".$valueObject->get_destination_host_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_destination_device_name())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."destinationDeviceName = '".$valueObject->get_destination_device_name()."'";
		$count++;
	}
	
	if ($valueObject->isset_full_sync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncStartTime = ".$valueObject->get_full_sync_start_time();
		$count++;
	}
	
	if ($valueObject->isset_full_sync_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncEndTime = ".$valueObject->get_full_sync_end_time();
		$count++;
	}
	
	if ($valueObject->isset_full_sync_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncStatus = ".$valueObject->get_full_sync_status();
		$count++;
	}
	
	if ($valueObject->isset_full_sync_bytes_sent())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncBytesSent = ".$valueObject->get_full_sync_bytes_sent();
		$count++;
	}
	
	if ($valueObject->isset_resync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStartTime = ".$valueObject->get_resync_start_time();
		$count++;
	}
	
	if ($valueObject->isset_resync_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncEndTime = ".$valueObject->get_resync_end_time();
		$count++;
	}
	
	if ($valueObject->isset_resync_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStatus = ".$valueObject->get_resync_status();
		$count++;
	}
	
	if ($valueObject->isset_last_resync_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastResyncOffset = ".$valueObject->get_last_resync_offset();
		$count++;
	}
	
	if ($valueObject->isset_differential_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."differentialStartTime = ".$valueObject->get_differential_start_time();
		$count++;
	}
	
	if ($valueObject->isset_differential_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."differentialEndTime = ".$valueObject->get_differential_end_time();
		$count++;
	}
	
	if ($valueObject->isset_differential_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."differentialStatus = ".$valueObject->get_differential_status();
		$count++;
	}
	
	if ($valueObject->isset_last_differential_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastDifferentialOffset = ".$valueObject->get_last_differential_offset();
		$count++;
	}
	
	if ($valueObject->isset_returnhome_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."returnhomeEndTime = ".$valueObject->get_returnhome_end_time();
		$count++;
	}
	
	if ($valueObject->isset_returnhome_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."returnhomeStartTime = ".$valueObject->get_returnhome_start_time();
		$count++;
	}
	
	if ($valueObject->isset_return_home_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."returnHomeStatus = ".$valueObject->get_return_home_status();
		$count++;
	}
	
	if ($valueObject->isset_last_sentinel_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastSentinelChange = ".$valueObject->get_last_sentinel_change();
		$count++;
	}
	
	if ($valueObject->isset_last_t_m_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastTMChange = ".$valueObject->get_last_t_m_change();
		$count++;
	}
	
	if ($valueObject->isset_last_outpost_agent_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastOutpostAgentChange = ".$valueObject->get_last_outpost_agent_change();
		$count++;
	}
	
	if ($valueObject->isset_wan_lag_ticks())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."wanLagTicks = ".$valueObject->get_wan_lag_ticks();
		$count++;
	}
	
	if ($valueObject->isset_should_resync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."shouldResync = ".$valueObject->get_should_resync();
		$count++;
	}
	
	if ($valueObject->isset_remaining_differential_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."remainingDifferentialBytes = ".$valueObject->get_remaining_differential_bytes();
		$count++;
	}
	
	if ($valueObject->isset_remaining_resync_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."remainingResyncBytes = ".$valueObject->get_remaining_resync_bytes();
		$count++;
	}
	
	if ($valueObject->isset_current_r_p_o_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."currentRPOTime = ".$valueObject->get_current_r_p_o_time();
		$count++;
	}
	
	if ($valueObject->isset_status_update_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."statusUpdateTime = ".$valueObject->get_status_update_time();
		$count++;
	}
	
	if ($valueObject->isset_profiling_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."profilingMode = ".$valueObject->get_profiling_mode();
		$count++;
	}
	
	if ($valueObject->isset_rpo_s_l_a_threshold())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."rpoSLAThreshold = ".$valueObject->get_rpo_s_l_a_threshold();
		$count++;
	}
	
	if ($valueObject->isset_max_resync_files_threshold())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."maxResyncFilesThreshold = ".$valueObject->get_max_resync_files_threshold();
		$count++;
	}
	
	if ($valueObject->isset_ftps_source_secure_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ftpsSourceSecureMode = ".$valueObject->get_ftps_source_secure_mode();
		$count++;
	}
	
	if ($valueObject->isset_ftps_dest_secure_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ftpsDestSecureMode = ".$valueObject->get_ftps_dest_secure_mode();
		$count++;
	}
	
	if ($valueObject->isset_one_to_many_source())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."oneToManySource = ".$valueObject->get_one_to_many_source();
		$count++;
	}
	
	if ($valueObject->isset_resync_version())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncVersion = ".$valueObject->get_resync_version();
		$count++;
	}
	
	if ($valueObject->isset_compression_enable())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."compressionEnable = ".$valueObject->get_compression_enable();
		$count++;
	}
	
	if ($valueObject->isset_fast_resync_matched())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fastResyncMatched = ".$valueObject->get_fast_resync_matched();
		$count++;
	}
	
	if ($valueObject->isset_fast_resync_unmatched())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fastResyncUnmatched = ".$valueObject->get_fast_resync_unmatched();
		$count++;
	}
	
	if ($valueObject->isset_job_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."jobId = ".$valueObject->get_job_id();
		$count++;
	}
	
	if ($valueObject->isset_rule_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ruleId = ".$valueObject->get_rule_id();
		$count++;
	}
	
	if ($valueObject->isset_mediaretent())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."mediaretent = ".$valueObject->get_mediaretent();
		$count++;
	}
	
	if ($valueObject->isset_logs_from())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."logsFrom = '".$valueObject->get_logs_from()."'";
		$count++;
	}
	
	if ($valueObject->isset_logs_to())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."logsTo = '".$valueObject->get_logs_to()."'";
		$count++;
	}
	
	if ($valueObject->isset_volume_group_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."volumeGroupId = '".$valueObject->get_volume_group_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_pre_commandsource())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."preCommandsource = '".$valueObject->get_pre_commandsource()."'";
		$count++;
	}
	
	if ($valueObject->isset_post_commandsource())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."postCommandsource = '".$valueObject->get_post_commandsource()."'";
		$count++;
	}
	
	if ($valueObject->isset_is_resync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."isResync = ".$valueObject->get_is_resync();
		$count++;
	}
	
	if ($valueObject->isset_remaining_quasi_diff_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."remainingQuasiDiffBytes = ".$valueObject->get_remaining_quasi_diff_bytes();
		$count++;
	}
	
	if ($valueObject->isset_is_quasiflag())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."isQuasiflag = ".$valueObject->get_is_quasiflag();
		$count++;
	}
	
	if ($valueObject->isset_resync_start_tagtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStartTagtime = ".$valueObject->get_resync_start_tagtime();
		$count++;
	}
	
	if ($valueObject->isset_resync_start_tagtime_sequence())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStartTagtimeSequence = ".$valueObject->get_resync_start_tagtime_sequence();
		$count++;
	}
	
	if ($valueObject->isset_resync_end_tagtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncEndTagtime = ".$valueObject->get_resync_end_tagtime();
		$count++;
	}
	
	if ($valueObject->isset_resync_end_tagtime_sequence())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncEndTagtimeSequence = ".$valueObject->get_resync_end_tagtime_sequence();
		$count++;
	}
	
	if ($valueObject->isset_quasidiff_starttime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."quasidiffStarttime = ".$valueObject->get_quasidiff_starttime();
		$count++;
	}
	
	if ($valueObject->isset_quasidiff_endtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."quasidiffEndtime = ".$valueObject->get_quasidiff_endtime();
		$count++;
	}
	
	if ($valueObject->isset_should_resync_set_from())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ShouldResyncSetFrom = ".$valueObject->get_should_resync_set_from();
		$count++;
	}
	
	if ($valueObject->isset_resync_settimestamp())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncSettimestamp = ".$valueObject->get_resync_settimestamp();
		$count++;
	}
	
	if ($valueObject->isset_resync_set_cxtimestamp())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncSetCxtimestamp = ".$valueObject->get_resync_set_cxtimestamp();
		$count++;
	}
	
	if ($valueObject->isset_throttleresync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."throttleresync = ".$valueObject->get_throttleresync();
		$count++;
	}
	
	if ($valueObject->isset_throttle_differentials())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."throttleDifferentials = ".$valueObject->get_throttle_differentials();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_type())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartType = ".$valueObject->get_auto_resync_start_type();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartTime = ".$valueObject->get_auto_resync_start_time();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_hours())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartHours = ".$valueObject->get_auto_resync_start_hours();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_minutes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartMinutes = ".$valueObject->get_auto_resync_start_minutes();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_stop_hours())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStopHours = ".$valueObject->get_auto_resync_stop_hours();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_stop_minutes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStopMinutes = ".$valueObject->get_auto_resync_stop_minutes();
		$count++;
	}
	
	if ($valueObject->isset_max_compression())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."maxCompression = '".$valueObject->get_max_compression()."'";
		$count++;
	}
	
	if ($valueObject->isset_max_un_compression())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."maxUnCompression = '".$valueObject->get_max_un_compression()."'";
		$count++;
	}
	
	if ($valueObject->isset_profiling_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."profilingId = ".$valueObject->get_profiling_id();
		$count++;
	}
	
	if ($valueObject->isset_pair_configure_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."pairConfigureTime = ".$valueObject->get_pair_configure_time();
		$count++;
	}
	
	if ($valueObject->isset_ftp_failure())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ftpFailure = ".$valueObject->get_ftp_failure();
		$count++;
	}
	
	if ($valueObject->isset_phy__lunid())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."Phy_Lunid = '".$valueObject->get_phy__lunid()."'";
		$count++;
	}
	
	if ($valueObject->isset_lun_state())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lun_state = ".$valueObject->get_lun_state();
		$count++;
	}
	
	if ($valueObject->isset_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."offset = ".$valueObject->get_offset();
		$count++;
	}
	
	if ($valueObject->isset_stats())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."stats = '".$valueObject->get_stats()."'";
		$count++;
	}
	
	$sql = $sql.$wsql;    
	$result = $this->databaseUpdate($conn, $sql);
    if ($result != 1) {
        //print "PrimaryKey Error when updating DB!";
    	return false;
	}
 	return true;
}

/**
 * update_bylastoutpostagentchange-method. A user defined or custom updatebyMethod  
 * This method updates by type
 *
 * @param conn         This method requires working database connection.
 * @param params       associate array: sql will be searched and replaced by the matching values
 *					   associated with the token
 */
function update_by_lastoutpostagentchange($conn, $valueObject,$params = array()) {
	$wsql = "destinationHostId= 'destid'";
	$ssql = str_replace(array_keys($params), array_values($params), $wsql);
	$wsql = " WHERE (" . $ssql . ")";
	
	$count = 0;
	$sql = "UPDATE srcLogicalVolumeDestLogicalVolume SET ";
	if ($valueObject->isset_source_host_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."sourceHostId = '".$valueObject->get_source_host_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_source_device_name())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."sourceDeviceName = '".$valueObject->get_source_device_name()."'";
		$count++;
	}
	
	if ($valueObject->isset_destination_host_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."destinationHostId = '".$valueObject->get_destination_host_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_destination_device_name())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."destinationDeviceName = '".$valueObject->get_destination_device_name()."'";
		$count++;
	}
	
	if ($valueObject->isset_full_sync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncStartTime = ".$valueObject->get_full_sync_start_time();
		$count++;
	}
	
	if ($valueObject->isset_full_sync_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncEndTime = ".$valueObject->get_full_sync_end_time();
		$count++;
	}
	
	if ($valueObject->isset_full_sync_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncStatus = ".$valueObject->get_full_sync_status();
		$count++;
	}
	
	if ($valueObject->isset_full_sync_bytes_sent())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncBytesSent = ".$valueObject->get_full_sync_bytes_sent();
		$count++;
	}
	
	if ($valueObject->isset_resync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStartTime = ".$valueObject->get_resync_start_time();
		$count++;
	}
	
	if ($valueObject->isset_resync_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncEndTime = ".$valueObject->get_resync_end_time();
		$count++;
	}
	
	if ($valueObject->isset_resync_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStatus = ".$valueObject->get_resync_status();
		$count++;
	}
	
	if ($valueObject->isset_last_resync_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastResyncOffset = ".$valueObject->get_last_resync_offset();
		$count++;
	}
	
	if ($valueObject->isset_differential_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."differentialStartTime = ".$valueObject->get_differential_start_time();
		$count++;
	}
	
	if ($valueObject->isset_differential_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."differentialEndTime = ".$valueObject->get_differential_end_time();
		$count++;
	}
	
	if ($valueObject->isset_differential_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."differentialStatus = ".$valueObject->get_differential_status();
		$count++;
	}
	
	if ($valueObject->isset_last_differential_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastDifferentialOffset = ".$valueObject->get_last_differential_offset();
		$count++;
	}
	
	if ($valueObject->isset_returnhome_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."returnhomeEndTime = ".$valueObject->get_returnhome_end_time();
		$count++;
	}
	
	if ($valueObject->isset_returnhome_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."returnhomeStartTime = ".$valueObject->get_returnhome_start_time();
		$count++;
	}
	
	if ($valueObject->isset_return_home_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."returnHomeStatus = ".$valueObject->get_return_home_status();
		$count++;
	}
	
	if ($valueObject->isset_last_sentinel_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastSentinelChange = ".$valueObject->get_last_sentinel_change();
		$count++;
	}
	
	if ($valueObject->isset_last_t_m_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastTMChange = ".$valueObject->get_last_t_m_change();
		$count++;
	}
	
	if ($valueObject->isset_last_outpost_agent_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastOutpostAgentChange = ".$valueObject->get_last_outpost_agent_change();
		$count++;
	}
	
	if ($valueObject->isset_wan_lag_ticks())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."wanLagTicks = ".$valueObject->get_wan_lag_ticks();
		$count++;
	}
	
	if ($valueObject->isset_should_resync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."shouldResync = ".$valueObject->get_should_resync();
		$count++;
	}
	
	if ($valueObject->isset_remaining_differential_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."remainingDifferentialBytes = ".$valueObject->get_remaining_differential_bytes();
		$count++;
	}
	
	if ($valueObject->isset_remaining_resync_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."remainingResyncBytes = ".$valueObject->get_remaining_resync_bytes();
		$count++;
	}
	
	if ($valueObject->isset_current_r_p_o_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."currentRPOTime = ".$valueObject->get_current_r_p_o_time();
		$count++;
	}
	
	if ($valueObject->isset_status_update_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."statusUpdateTime = ".$valueObject->get_status_update_time();
		$count++;
	}
	
	if ($valueObject->isset_profiling_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."profilingMode = ".$valueObject->get_profiling_mode();
		$count++;
	}
	
	if ($valueObject->isset_rpo_s_l_a_threshold())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."rpoSLAThreshold = ".$valueObject->get_rpo_s_l_a_threshold();
		$count++;
	}
	
	if ($valueObject->isset_max_resync_files_threshold())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."maxResyncFilesThreshold = ".$valueObject->get_max_resync_files_threshold();
		$count++;
	}
	
	if ($valueObject->isset_ftps_source_secure_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ftpsSourceSecureMode = ".$valueObject->get_ftps_source_secure_mode();
		$count++;
	}
	
	if ($valueObject->isset_ftps_dest_secure_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ftpsDestSecureMode = ".$valueObject->get_ftps_dest_secure_mode();
		$count++;
	}
	
	if ($valueObject->isset_one_to_many_source())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."oneToManySource = ".$valueObject->get_one_to_many_source();
		$count++;
	}
	
	if ($valueObject->isset_resync_version())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncVersion = ".$valueObject->get_resync_version();
		$count++;
	}
	
	if ($valueObject->isset_compression_enable())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."compressionEnable = ".$valueObject->get_compression_enable();
		$count++;
	}
	
	if ($valueObject->isset_fast_resync_matched())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fastResyncMatched = ".$valueObject->get_fast_resync_matched();
		$count++;
	}
	
	if ($valueObject->isset_fast_resync_unmatched())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fastResyncUnmatched = ".$valueObject->get_fast_resync_unmatched();
		$count++;
	}
	
	if ($valueObject->isset_job_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."jobId = ".$valueObject->get_job_id();
		$count++;
	}
	
	if ($valueObject->isset_rule_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ruleId = ".$valueObject->get_rule_id();
		$count++;
	}
	
	if ($valueObject->isset_mediaretent())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."mediaretent = ".$valueObject->get_mediaretent();
		$count++;
	}
	
	if ($valueObject->isset_logs_from())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."logsFrom = '".$valueObject->get_logs_from()."'";
		$count++;
	}
	
	if ($valueObject->isset_logs_to())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."logsTo = '".$valueObject->get_logs_to()."'";
		$count++;
	}
	
	if ($valueObject->isset_volume_group_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."volumeGroupId = '".$valueObject->get_volume_group_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_pre_commandsource())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."preCommandsource = '".$valueObject->get_pre_commandsource()."'";
		$count++;
	}
	
	if ($valueObject->isset_post_commandsource())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."postCommandsource = '".$valueObject->get_post_commandsource()."'";
		$count++;
	}
	
	if ($valueObject->isset_is_resync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."isResync = ".$valueObject->get_is_resync();
		$count++;
	}
	
	if ($valueObject->isset_remaining_quasi_diff_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."remainingQuasiDiffBytes = ".$valueObject->get_remaining_quasi_diff_bytes();
		$count++;
	}
	
	if ($valueObject->isset_is_quasiflag())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."isQuasiflag = ".$valueObject->get_is_quasiflag();
		$count++;
	}
	
	if ($valueObject->isset_resync_start_tagtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStartTagtime = ".$valueObject->get_resync_start_tagtime();
		$count++;
	}
	
	if ($valueObject->isset_resync_start_tagtime_sequence())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStartTagtimeSequence = ".$valueObject->get_resync_start_tagtime_sequence();
		$count++;
	}
	
	if ($valueObject->isset_resync_end_tagtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncEndTagtime = ".$valueObject->get_resync_end_tagtime();
		$count++;
	}
	
	if ($valueObject->isset_resync_end_tagtime_sequence())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncEndTagtimeSequence = ".$valueObject->get_resync_end_tagtime_sequence();
		$count++;
	}
	
	if ($valueObject->isset_quasidiff_starttime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."quasidiffStarttime = ".$valueObject->get_quasidiff_starttime();
		$count++;
	}
	
	if ($valueObject->isset_quasidiff_endtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."quasidiffEndtime = ".$valueObject->get_quasidiff_endtime();
		$count++;
	}
	
	if ($valueObject->isset_should_resync_set_from())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ShouldResyncSetFrom = ".$valueObject->get_should_resync_set_from();
		$count++;
	}
	
	if ($valueObject->isset_resync_settimestamp())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncSettimestamp = ".$valueObject->get_resync_settimestamp();
		$count++;
	}
	
	if ($valueObject->isset_resync_set_cxtimestamp())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncSetCxtimestamp = ".$valueObject->get_resync_set_cxtimestamp();
		$count++;
	}
	
	if ($valueObject->isset_throttleresync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."throttleresync = ".$valueObject->get_throttleresync();
		$count++;
	}
	
	if ($valueObject->isset_throttle_differentials())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."throttleDifferentials = ".$valueObject->get_throttle_differentials();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_type())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartType = ".$valueObject->get_auto_resync_start_type();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartTime = ".$valueObject->get_auto_resync_start_time();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_hours())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartHours = ".$valueObject->get_auto_resync_start_hours();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_minutes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartMinutes = ".$valueObject->get_auto_resync_start_minutes();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_stop_hours())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStopHours = ".$valueObject->get_auto_resync_stop_hours();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_stop_minutes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStopMinutes = ".$valueObject->get_auto_resync_stop_minutes();
		$count++;
	}
	
	if ($valueObject->isset_max_compression())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."maxCompression = '".$valueObject->get_max_compression()."'";
		$count++;
	}
	
	if ($valueObject->isset_max_un_compression())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."maxUnCompression = '".$valueObject->get_max_un_compression()."'";
		$count++;
	}
	
	if ($valueObject->isset_profiling_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."profilingId = ".$valueObject->get_profiling_id();
		$count++;
	}
	
	if ($valueObject->isset_pair_configure_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."pairConfigureTime = ".$valueObject->get_pair_configure_time();
		$count++;
	}
	
	if ($valueObject->isset_ftp_failure())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ftpFailure = ".$valueObject->get_ftp_failure();
		$count++;
	}
	
	if ($valueObject->isset_phy__lunid())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."Phy_Lunid = '".$valueObject->get_phy__lunid()."'";
		$count++;
	}
	
	if ($valueObject->isset_lun_state())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lun_state = ".$valueObject->get_lun_state();
		$count++;
	}
	
	if ($valueObject->isset_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."offset = ".$valueObject->get_offset();
		$count++;
	}
	
	if ($valueObject->isset_stats())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."stats = '".$valueObject->get_stats()."'";
		$count++;
	}
	
	$sql = $sql.$wsql;    
	$result = $this->databaseUpdate($conn, $sql);
    if ($result != 1) {
        //print "PrimaryKey Error when updating DB!";
    	return false;
	}
 	return true;
}

/**
 * update_byjobid-method. A user defined or custom updatebyMethod  
 * This method updates by type
 *
 * @param conn         This method requires working database connection.
 * @param params       associate array: sql will be searched and replaced by the matching values
 *					   associated with the token
 */
function update_by_jobid($conn, $valueObject,$params = array()) {
	$wsql = "jobId='jobid'";
	$ssql = str_replace(array_keys($params), array_values($params), $wsql);
	$wsql = " WHERE (" . $ssql . ")";
	
	$count = 0;
	$sql = "UPDATE srcLogicalVolumeDestLogicalVolume SET ";
	if ($valueObject->isset_source_host_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."sourceHostId = '".$valueObject->get_source_host_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_source_device_name())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."sourceDeviceName = '".$valueObject->get_source_device_name()."'";
		$count++;
	}
	
	if ($valueObject->isset_destination_host_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."destinationHostId = '".$valueObject->get_destination_host_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_destination_device_name())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."destinationDeviceName = '".$valueObject->get_destination_device_name()."'";
		$count++;
	}
	
	if ($valueObject->isset_full_sync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncStartTime = ".$valueObject->get_full_sync_start_time();
		$count++;
	}
	
	if ($valueObject->isset_full_sync_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncEndTime = ".$valueObject->get_full_sync_end_time();
		$count++;
	}
	
	if ($valueObject->isset_full_sync_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncStatus = ".$valueObject->get_full_sync_status();
		$count++;
	}
	
	if ($valueObject->isset_full_sync_bytes_sent())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncBytesSent = ".$valueObject->get_full_sync_bytes_sent();
		$count++;
	}
	
	if ($valueObject->isset_resync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStartTime = ".$valueObject->get_resync_start_time();
		$count++;
	}
	
	if ($valueObject->isset_resync_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncEndTime = ".$valueObject->get_resync_end_time();
		$count++;
	}
	
	if ($valueObject->isset_resync_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStatus = ".$valueObject->get_resync_status();
		$count++;
	}
	
	if ($valueObject->isset_last_resync_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastResyncOffset = ".$valueObject->get_last_resync_offset();
		$count++;
	}
	
	if ($valueObject->isset_differential_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."differentialStartTime = ".$valueObject->get_differential_start_time();
		$count++;
	}
	
	if ($valueObject->isset_differential_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."differentialEndTime = ".$valueObject->get_differential_end_time();
		$count++;
	}
	
	if ($valueObject->isset_differential_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."differentialStatus = ".$valueObject->get_differential_status();
		$count++;
	}
	
	if ($valueObject->isset_last_differential_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastDifferentialOffset = ".$valueObject->get_last_differential_offset();
		$count++;
	}
	
	if ($valueObject->isset_returnhome_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."returnhomeEndTime = ".$valueObject->get_returnhome_end_time();
		$count++;
	}
	
	if ($valueObject->isset_returnhome_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."returnhomeStartTime = ".$valueObject->get_returnhome_start_time();
		$count++;
	}
	
	if ($valueObject->isset_return_home_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."returnHomeStatus = ".$valueObject->get_return_home_status();
		$count++;
	}
	
	if ($valueObject->isset_last_sentinel_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastSentinelChange = ".$valueObject->get_last_sentinel_change();
		$count++;
	}
	
	if ($valueObject->isset_last_t_m_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastTMChange = ".$valueObject->get_last_t_m_change();
		$count++;
	}
	
	if ($valueObject->isset_last_outpost_agent_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastOutpostAgentChange = ".$valueObject->get_last_outpost_agent_change();
		$count++;
	}
	
	if ($valueObject->isset_wan_lag_ticks())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."wanLagTicks = ".$valueObject->get_wan_lag_ticks();
		$count++;
	}
	
	if ($valueObject->isset_should_resync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."shouldResync = ".$valueObject->get_should_resync();
		$count++;
	}
	
	if ($valueObject->isset_remaining_differential_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."remainingDifferentialBytes = ".$valueObject->get_remaining_differential_bytes();
		$count++;
	}
	
	if ($valueObject->isset_remaining_resync_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."remainingResyncBytes = ".$valueObject->get_remaining_resync_bytes();
		$count++;
	}
	
	if ($valueObject->isset_current_r_p_o_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."currentRPOTime = ".$valueObject->get_current_r_p_o_time();
		$count++;
	}
	
	if ($valueObject->isset_status_update_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."statusUpdateTime = ".$valueObject->get_status_update_time();
		$count++;
	}
	
	if ($valueObject->isset_profiling_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."profilingMode = ".$valueObject->get_profiling_mode();
		$count++;
	}
	
	if ($valueObject->isset_rpo_s_l_a_threshold())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."rpoSLAThreshold = ".$valueObject->get_rpo_s_l_a_threshold();
		$count++;
	}
	
	if ($valueObject->isset_max_resync_files_threshold())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."maxResyncFilesThreshold = ".$valueObject->get_max_resync_files_threshold();
		$count++;
	}
	
	if ($valueObject->isset_ftps_source_secure_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ftpsSourceSecureMode = ".$valueObject->get_ftps_source_secure_mode();
		$count++;
	}
	
	if ($valueObject->isset_ftps_dest_secure_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ftpsDestSecureMode = ".$valueObject->get_ftps_dest_secure_mode();
		$count++;
	}
	
	if ($valueObject->isset_one_to_many_source())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."oneToManySource = ".$valueObject->get_one_to_many_source();
		$count++;
	}
	
	if ($valueObject->isset_resync_version())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncVersion = ".$valueObject->get_resync_version();
		$count++;
	}
	
	if ($valueObject->isset_compression_enable())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."compressionEnable = ".$valueObject->get_compression_enable();
		$count++;
	}
	
	if ($valueObject->isset_fast_resync_matched())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fastResyncMatched = ".$valueObject->get_fast_resync_matched();
		$count++;
	}
	
	if ($valueObject->isset_fast_resync_unmatched())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fastResyncUnmatched = ".$valueObject->get_fast_resync_unmatched();
		$count++;
	}
	
	if ($valueObject->isset_job_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."jobId = ".$valueObject->get_job_id();
		$count++;
	}
	
	if ($valueObject->isset_rule_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ruleId = ".$valueObject->get_rule_id();
		$count++;
	}
	
	if ($valueObject->isset_mediaretent())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."mediaretent = ".$valueObject->get_mediaretent();
		$count++;
	}
	
	if ($valueObject->isset_logs_from())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."logsFrom = '".$valueObject->get_logs_from()."'";
		$count++;
	}
	
	if ($valueObject->isset_logs_to())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."logsTo = '".$valueObject->get_logs_to()."'";
		$count++;
	}
	
	if ($valueObject->isset_volume_group_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."volumeGroupId = '".$valueObject->get_volume_group_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_pre_commandsource())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."preCommandsource = '".$valueObject->get_pre_commandsource()."'";
		$count++;
	}
	
	if ($valueObject->isset_post_commandsource())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."postCommandsource = '".$valueObject->get_post_commandsource()."'";
		$count++;
	}
	
	if ($valueObject->isset_is_resync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."isResync = ".$valueObject->get_is_resync();
		$count++;
	}
	
	if ($valueObject->isset_remaining_quasi_diff_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."remainingQuasiDiffBytes = ".$valueObject->get_remaining_quasi_diff_bytes();
		$count++;
	}
	
	if ($valueObject->isset_is_quasiflag())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."isQuasiflag = ".$valueObject->get_is_quasiflag();
		$count++;
	}
	
	if ($valueObject->isset_resync_start_tagtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStartTagtime = ".$valueObject->get_resync_start_tagtime();
		$count++;
	}
	
	if ($valueObject->isset_resync_start_tagtime_sequence())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStartTagtimeSequence = ".$valueObject->get_resync_start_tagtime_sequence();
		$count++;
	}
	
	if ($valueObject->isset_resync_end_tagtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncEndTagtime = ".$valueObject->get_resync_end_tagtime();
		$count++;
	}
	
	if ($valueObject->isset_resync_end_tagtime_sequence())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncEndTagtimeSequence = ".$valueObject->get_resync_end_tagtime_sequence();
		$count++;
	}
	
	if ($valueObject->isset_quasidiff_starttime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."quasidiffStarttime = ".$valueObject->get_quasidiff_starttime();
		$count++;
	}
	
	if ($valueObject->isset_quasidiff_endtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."quasidiffEndtime = ".$valueObject->get_quasidiff_endtime();
		$count++;
	}
	
	if ($valueObject->isset_should_resync_set_from())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ShouldResyncSetFrom = ".$valueObject->get_should_resync_set_from();
		$count++;
	}
	
	if ($valueObject->isset_resync_settimestamp())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncSettimestamp = ".$valueObject->get_resync_settimestamp();
		$count++;
	}
	
	if ($valueObject->isset_resync_set_cxtimestamp())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncSetCxtimestamp = ".$valueObject->get_resync_set_cxtimestamp();
		$count++;
	}
	
	if ($valueObject->isset_throttleresync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."throttleresync = ".$valueObject->get_throttleresync();
		$count++;
	}
	
	if ($valueObject->isset_throttle_differentials())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."throttleDifferentials = ".$valueObject->get_throttle_differentials();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_type())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartType = ".$valueObject->get_auto_resync_start_type();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartTime = ".$valueObject->get_auto_resync_start_time();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_hours())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartHours = ".$valueObject->get_auto_resync_start_hours();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_minutes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartMinutes = ".$valueObject->get_auto_resync_start_minutes();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_stop_hours())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStopHours = ".$valueObject->get_auto_resync_stop_hours();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_stop_minutes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStopMinutes = ".$valueObject->get_auto_resync_stop_minutes();
		$count++;
	}
	
	if ($valueObject->isset_max_compression())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."maxCompression = '".$valueObject->get_max_compression()."'";
		$count++;
	}
	
	if ($valueObject->isset_max_un_compression())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."maxUnCompression = '".$valueObject->get_max_un_compression()."'";
		$count++;
	}
	
	if ($valueObject->isset_profiling_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."profilingId = ".$valueObject->get_profiling_id();
		$count++;
	}
	
	if ($valueObject->isset_pair_configure_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."pairConfigureTime = ".$valueObject->get_pair_configure_time();
		$count++;
	}
	
	if ($valueObject->isset_ftp_failure())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ftpFailure = ".$valueObject->get_ftp_failure();
		$count++;
	}
	
	if ($valueObject->isset_phy__lunid())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."Phy_Lunid = '".$valueObject->get_phy__lunid()."'";
		$count++;
	}
	
	if ($valueObject->isset_lun_state())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lun_state = ".$valueObject->get_lun_state();
		$count++;
	}
	
	if ($valueObject->isset_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."offset = ".$valueObject->get_offset();
		$count++;
	}
	
	if ($valueObject->isset_stats())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."stats = '".$valueObject->get_stats()."'";
		$count++;
	}
	
	$sql = $sql.$wsql;    
	$result = $this->databaseUpdate($conn, $sql);
    if ($result != 1) {
        //print "PrimaryKey Error when updating DB!";
    	return false;
	}
 	return true;
}

/**
 * update_byhostids_devicenames-method. A user defined or custom updatebyMethod  
 * This method updates by type
 *
 * @param conn         This method requires working database connection.
 * @param params       associate array: sql will be searched and replaced by the matching values
 *					   associated with the token
 */
function update_by_hostids_devicenames($conn, $valueObject,$params = array()) {
	$wsql = "sourceHostId= 'srcid' and  sourceDeviceName = 'srcdevicename'  and destinationHostId= 'destid'  and  destinationDeviceName = 'destdevicename'";
	$ssql = str_replace(array_keys($params), array_values($params), $wsql);
	$wsql = " WHERE (" . $ssql . ")";
	
	$count = 0;
	$sql = "UPDATE srcLogicalVolumeDestLogicalVolume SET ";
	if ($valueObject->isset_source_host_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."sourceHostId = '".$valueObject->get_source_host_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_source_device_name())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."sourceDeviceName = '".$valueObject->get_source_device_name()."'";
		$count++;
	}
	
	if ($valueObject->isset_destination_host_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."destinationHostId = '".$valueObject->get_destination_host_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_destination_device_name())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."destinationDeviceName = '".$valueObject->get_destination_device_name()."'";
		$count++;
	}
	
	if ($valueObject->isset_full_sync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncStartTime = ".$valueObject->get_full_sync_start_time();
		$count++;
	}
	
	if ($valueObject->isset_full_sync_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncEndTime = ".$valueObject->get_full_sync_end_time();
		$count++;
	}
	
	if ($valueObject->isset_full_sync_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncStatus = ".$valueObject->get_full_sync_status();
		$count++;
	}
	
	if ($valueObject->isset_full_sync_bytes_sent())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncBytesSent = ".$valueObject->get_full_sync_bytes_sent();
		$count++;
	}
	
	if ($valueObject->isset_resync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStartTime = ".$valueObject->get_resync_start_time();
		$count++;
	}
	
	if ($valueObject->isset_resync_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncEndTime = ".$valueObject->get_resync_end_time();
		$count++;
	}
	
	if ($valueObject->isset_resync_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStatus = ".$valueObject->get_resync_status();
		$count++;
	}
	
	if ($valueObject->isset_last_resync_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastResyncOffset = ".$valueObject->get_last_resync_offset();
		$count++;
	}
	
	if ($valueObject->isset_differential_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."differentialStartTime = ".$valueObject->get_differential_start_time();
		$count++;
	}
	
	if ($valueObject->isset_differential_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."differentialEndTime = ".$valueObject->get_differential_end_time();
		$count++;
	}
	
	if ($valueObject->isset_differential_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."differentialStatus = ".$valueObject->get_differential_status();
		$count++;
	}
	
	if ($valueObject->isset_last_differential_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastDifferentialOffset = ".$valueObject->get_last_differential_offset();
		$count++;
	}
	
	if ($valueObject->isset_returnhome_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."returnhomeEndTime = ".$valueObject->get_returnhome_end_time();
		$count++;
	}
	
	if ($valueObject->isset_returnhome_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."returnhomeStartTime = ".$valueObject->get_returnhome_start_time();
		$count++;
	}
	
	if ($valueObject->isset_return_home_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."returnHomeStatus = ".$valueObject->get_return_home_status();
		$count++;
	}
	
	if ($valueObject->isset_last_sentinel_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastSentinelChange = ".$valueObject->get_last_sentinel_change();
		$count++;
	}
	
	if ($valueObject->isset_last_t_m_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastTMChange = ".$valueObject->get_last_t_m_change();
		$count++;
	}
	
	if ($valueObject->isset_last_outpost_agent_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastOutpostAgentChange = ".$valueObject->get_last_outpost_agent_change();
		$count++;
	}
	
	if ($valueObject->isset_wan_lag_ticks())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."wanLagTicks = ".$valueObject->get_wan_lag_ticks();
		$count++;
	}
	
	if ($valueObject->isset_should_resync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."shouldResync = ".$valueObject->get_should_resync();
		$count++;
	}
	
	if ($valueObject->isset_remaining_differential_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."remainingDifferentialBytes = ".$valueObject->get_remaining_differential_bytes();
		$count++;
	}
	
	if ($valueObject->isset_remaining_resync_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."remainingResyncBytes = ".$valueObject->get_remaining_resync_bytes();
		$count++;
	}
	
	if ($valueObject->isset_current_r_p_o_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."currentRPOTime = ".$valueObject->get_current_r_p_o_time();
		$count++;
	}
	
	if ($valueObject->isset_status_update_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."statusUpdateTime = ".$valueObject->get_status_update_time();
		$count++;
	}
	
	if ($valueObject->isset_profiling_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."profilingMode = ".$valueObject->get_profiling_mode();
		$count++;
	}
	
	if ($valueObject->isset_rpo_s_l_a_threshold())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."rpoSLAThreshold = ".$valueObject->get_rpo_s_l_a_threshold();
		$count++;
	}
	
	if ($valueObject->isset_max_resync_files_threshold())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."maxResyncFilesThreshold = ".$valueObject->get_max_resync_files_threshold();
		$count++;
	}
	
	if ($valueObject->isset_ftps_source_secure_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ftpsSourceSecureMode = ".$valueObject->get_ftps_source_secure_mode();
		$count++;
	}
	
	if ($valueObject->isset_ftps_dest_secure_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ftpsDestSecureMode = ".$valueObject->get_ftps_dest_secure_mode();
		$count++;
	}
	
	if ($valueObject->isset_one_to_many_source())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."oneToManySource = ".$valueObject->get_one_to_many_source();
		$count++;
	}
	
	if ($valueObject->isset_resync_version())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncVersion = ".$valueObject->get_resync_version();
		$count++;
	}
	
	if ($valueObject->isset_compression_enable())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."compressionEnable = ".$valueObject->get_compression_enable();
		$count++;
	}
	
	if ($valueObject->isset_fast_resync_matched())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fastResyncMatched = ".$valueObject->get_fast_resync_matched();
		$count++;
	}
	
	if ($valueObject->isset_fast_resync_unmatched())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fastResyncUnmatched = ".$valueObject->get_fast_resync_unmatched();
		$count++;
	}
	
	if ($valueObject->isset_job_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."jobId = ".$valueObject->get_job_id();
		$count++;
	}
	
	if ($valueObject->isset_rule_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ruleId = ".$valueObject->get_rule_id();
		$count++;
	}
	
	if ($valueObject->isset_mediaretent())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."mediaretent = ".$valueObject->get_mediaretent();
		$count++;
	}
	
	if ($valueObject->isset_logs_from())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."logsFrom = '".$valueObject->get_logs_from()."'";
		$count++;
	}
	
	if ($valueObject->isset_logs_to())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."logsTo = '".$valueObject->get_logs_to()."'";
		$count++;
	}
	
	if ($valueObject->isset_volume_group_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."volumeGroupId = '".$valueObject->get_volume_group_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_pre_commandsource())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."preCommandsource = '".$valueObject->get_pre_commandsource()."'";
		$count++;
	}
	
	if ($valueObject->isset_post_commandsource())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."postCommandsource = '".$valueObject->get_post_commandsource()."'";
		$count++;
	}
	
	if ($valueObject->isset_is_resync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."isResync = ".$valueObject->get_is_resync();
		$count++;
	}
	
	if ($valueObject->isset_remaining_quasi_diff_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."remainingQuasiDiffBytes = ".$valueObject->get_remaining_quasi_diff_bytes();
		$count++;
	}
	
	if ($valueObject->isset_is_quasiflag())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."isQuasiflag = ".$valueObject->get_is_quasiflag();
		$count++;
	}
	
	if ($valueObject->isset_resync_start_tagtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStartTagtime = ".$valueObject->get_resync_start_tagtime();
		$count++;
	}
	
	if ($valueObject->isset_resync_start_tagtime_sequence())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStartTagtimeSequence = ".$valueObject->get_resync_start_tagtime_sequence();
		$count++;
	}
	
	if ($valueObject->isset_resync_end_tagtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncEndTagtime = ".$valueObject->get_resync_end_tagtime();
		$count++;
	}
	
	if ($valueObject->isset_resync_end_tagtime_sequence())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncEndTagtimeSequence = ".$valueObject->get_resync_end_tagtime_sequence();
		$count++;
	}
	
	if ($valueObject->isset_quasidiff_starttime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."quasidiffStarttime = ".$valueObject->get_quasidiff_starttime();
		$count++;
	}
	
	if ($valueObject->isset_quasidiff_endtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."quasidiffEndtime = ".$valueObject->get_quasidiff_endtime();
		$count++;
	}
	
	if ($valueObject->isset_should_resync_set_from())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ShouldResyncSetFrom = ".$valueObject->get_should_resync_set_from();
		$count++;
	}
	
	if ($valueObject->isset_resync_settimestamp())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncSettimestamp = ".$valueObject->get_resync_settimestamp();
		$count++;
	}
	
	if ($valueObject->isset_resync_set_cxtimestamp())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncSetCxtimestamp = ".$valueObject->get_resync_set_cxtimestamp();
		$count++;
	}
	
	if ($valueObject->isset_throttleresync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."throttleresync = ".$valueObject->get_throttleresync();
		$count++;
	}
	
	if ($valueObject->isset_throttle_differentials())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."throttleDifferentials = ".$valueObject->get_throttle_differentials();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_type())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartType = ".$valueObject->get_auto_resync_start_type();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartTime = ".$valueObject->get_auto_resync_start_time();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_hours())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartHours = ".$valueObject->get_auto_resync_start_hours();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_minutes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartMinutes = ".$valueObject->get_auto_resync_start_minutes();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_stop_hours())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStopHours = ".$valueObject->get_auto_resync_stop_hours();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_stop_minutes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStopMinutes = ".$valueObject->get_auto_resync_stop_minutes();
		$count++;
	}
	
	if ($valueObject->isset_max_compression())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."maxCompression = '".$valueObject->get_max_compression()."'";
		$count++;
	}
	
	if ($valueObject->isset_max_un_compression())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."maxUnCompression = '".$valueObject->get_max_un_compression()."'";
		$count++;
	}
	
	if ($valueObject->isset_profiling_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."profilingId = ".$valueObject->get_profiling_id();
		$count++;
	}
	
	if ($valueObject->isset_pair_configure_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."pairConfigureTime = ".$valueObject->get_pair_configure_time();
		$count++;
	}
	
	if ($valueObject->isset_ftp_failure())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ftpFailure = ".$valueObject->get_ftp_failure();
		$count++;
	}
	
	if ($valueObject->isset_phy__lunid())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."Phy_Lunid = '".$valueObject->get_phy__lunid()."'";
		$count++;
	}
	
	if ($valueObject->isset_lun_state())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lun_state = ".$valueObject->get_lun_state();
		$count++;
	}
	
	if ($valueObject->isset_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."offset = ".$valueObject->get_offset();
		$count++;
	}
	
	if ($valueObject->isset_stats())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."stats = '".$valueObject->get_stats()."'";
		$count++;
	}
	
	$sql = $sql.$wsql;    
	$result = $this->databaseUpdate($conn, $sql);
    if ($result != 1) {
        //print "PrimaryKey Error when updating DB!";
    	return false;
	}
 	return true;
}

/**
 * update_byjobid_resyncs-method. A user defined or custom updatebyMethod  
 * This method updates by type
 *
 * @param conn         This method requires working database connection.
 * @param params       associate array: sql will be searched and replaced by the matching values
 *					   associated with the token
 */
function update_by_jobid_resyncs($conn, $valueObject,$params = array()) {
	$wsql = "sourceHostId= 'srcid' and  sourceDeviceName = 'srcdevicename'  and destinationHostId= 'destid'  and  destinationDeviceName = 'destdevicename' and shouldResync!='valone' and isResync='valtwo'";
	$ssql = str_replace(array_keys($params), array_values($params), $wsql);
	$wsql = " WHERE (" . $ssql . ")";
	
	$count = 0;
	$sql = "UPDATE srcLogicalVolumeDestLogicalVolume SET ";
	if ($valueObject->isset_source_host_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."sourceHostId = '".$valueObject->get_source_host_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_source_device_name())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."sourceDeviceName = '".$valueObject->get_source_device_name()."'";
		$count++;
	}
	
	if ($valueObject->isset_destination_host_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."destinationHostId = '".$valueObject->get_destination_host_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_destination_device_name())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."destinationDeviceName = '".$valueObject->get_destination_device_name()."'";
		$count++;
	}
	
	if ($valueObject->isset_full_sync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncStartTime = ".$valueObject->get_full_sync_start_time();
		$count++;
	}
	
	if ($valueObject->isset_full_sync_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncEndTime = ".$valueObject->get_full_sync_end_time();
		$count++;
	}
	
	if ($valueObject->isset_full_sync_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncStatus = ".$valueObject->get_full_sync_status();
		$count++;
	}
	
	if ($valueObject->isset_full_sync_bytes_sent())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncBytesSent = ".$valueObject->get_full_sync_bytes_sent();
		$count++;
	}
	
	if ($valueObject->isset_resync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStartTime = ".$valueObject->get_resync_start_time();
		$count++;
	}
	
	if ($valueObject->isset_resync_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncEndTime = ".$valueObject->get_resync_end_time();
		$count++;
	}
	
	if ($valueObject->isset_resync_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStatus = ".$valueObject->get_resync_status();
		$count++;
	}
	
	if ($valueObject->isset_last_resync_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastResyncOffset = ".$valueObject->get_last_resync_offset();
		$count++;
	}
	
	if ($valueObject->isset_differential_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."differentialStartTime = ".$valueObject->get_differential_start_time();
		$count++;
	}
	
	if ($valueObject->isset_differential_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."differentialEndTime = ".$valueObject->get_differential_end_time();
		$count++;
	}
	
	if ($valueObject->isset_differential_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."differentialStatus = ".$valueObject->get_differential_status();
		$count++;
	}
	
	if ($valueObject->isset_last_differential_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastDifferentialOffset = ".$valueObject->get_last_differential_offset();
		$count++;
	}
	
	if ($valueObject->isset_returnhome_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."returnhomeEndTime = ".$valueObject->get_returnhome_end_time();
		$count++;
	}
	
	if ($valueObject->isset_returnhome_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."returnhomeStartTime = ".$valueObject->get_returnhome_start_time();
		$count++;
	}
	
	if ($valueObject->isset_return_home_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."returnHomeStatus = ".$valueObject->get_return_home_status();
		$count++;
	}
	
	if ($valueObject->isset_last_sentinel_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastSentinelChange = ".$valueObject->get_last_sentinel_change();
		$count++;
	}
	
	if ($valueObject->isset_last_t_m_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastTMChange = ".$valueObject->get_last_t_m_change();
		$count++;
	}
	
	if ($valueObject->isset_last_outpost_agent_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastOutpostAgentChange = ".$valueObject->get_last_outpost_agent_change();
		$count++;
	}
	
	if ($valueObject->isset_wan_lag_ticks())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."wanLagTicks = ".$valueObject->get_wan_lag_ticks();
		$count++;
	}
	
	if ($valueObject->isset_should_resync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."shouldResync = ".$valueObject->get_should_resync();
		$count++;
	}
	
	if ($valueObject->isset_remaining_differential_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."remainingDifferentialBytes = ".$valueObject->get_remaining_differential_bytes();
		$count++;
	}
	
	if ($valueObject->isset_remaining_resync_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."remainingResyncBytes = ".$valueObject->get_remaining_resync_bytes();
		$count++;
	}
	
	if ($valueObject->isset_current_r_p_o_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."currentRPOTime = ".$valueObject->get_current_r_p_o_time();
		$count++;
	}
	
	if ($valueObject->isset_status_update_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."statusUpdateTime = ".$valueObject->get_status_update_time();
		$count++;
	}
	
	if ($valueObject->isset_profiling_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."profilingMode = ".$valueObject->get_profiling_mode();
		$count++;
	}
	
	if ($valueObject->isset_rpo_s_l_a_threshold())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."rpoSLAThreshold = ".$valueObject->get_rpo_s_l_a_threshold();
		$count++;
	}
	
	if ($valueObject->isset_max_resync_files_threshold())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."maxResyncFilesThreshold = ".$valueObject->get_max_resync_files_threshold();
		$count++;
	}
	
	if ($valueObject->isset_ftps_source_secure_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ftpsSourceSecureMode = ".$valueObject->get_ftps_source_secure_mode();
		$count++;
	}
	
	if ($valueObject->isset_ftps_dest_secure_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ftpsDestSecureMode = ".$valueObject->get_ftps_dest_secure_mode();
		$count++;
	}
	
	if ($valueObject->isset_one_to_many_source())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."oneToManySource = ".$valueObject->get_one_to_many_source();
		$count++;
	}
	
	if ($valueObject->isset_resync_version())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncVersion = ".$valueObject->get_resync_version();
		$count++;
	}
	
	if ($valueObject->isset_compression_enable())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."compressionEnable = ".$valueObject->get_compression_enable();
		$count++;
	}
	
	if ($valueObject->isset_fast_resync_matched())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fastResyncMatched = ".$valueObject->get_fast_resync_matched();
		$count++;
	}
	
	if ($valueObject->isset_fast_resync_unmatched())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fastResyncUnmatched = ".$valueObject->get_fast_resync_unmatched();
		$count++;
	}
	
	if ($valueObject->isset_job_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."jobId = ".$valueObject->get_job_id();
		$count++;
	}
	
	if ($valueObject->isset_rule_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ruleId = ".$valueObject->get_rule_id();
		$count++;
	}
	
	if ($valueObject->isset_mediaretent())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."mediaretent = ".$valueObject->get_mediaretent();
		$count++;
	}
	
	if ($valueObject->isset_logs_from())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."logsFrom = '".$valueObject->get_logs_from()."'";
		$count++;
	}
	
	if ($valueObject->isset_logs_to())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."logsTo = '".$valueObject->get_logs_to()."'";
		$count++;
	}
	
	if ($valueObject->isset_volume_group_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."volumeGroupId = '".$valueObject->get_volume_group_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_pre_commandsource())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."preCommandsource = '".$valueObject->get_pre_commandsource()."'";
		$count++;
	}
	
	if ($valueObject->isset_post_commandsource())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."postCommandsource = '".$valueObject->get_post_commandsource()."'";
		$count++;
	}
	
	if ($valueObject->isset_is_resync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."isResync = ".$valueObject->get_is_resync();
		$count++;
	}
	
	if ($valueObject->isset_remaining_quasi_diff_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."remainingQuasiDiffBytes = ".$valueObject->get_remaining_quasi_diff_bytes();
		$count++;
	}
	
	if ($valueObject->isset_is_quasiflag())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."isQuasiflag = ".$valueObject->get_is_quasiflag();
		$count++;
	}
	
	if ($valueObject->isset_resync_start_tagtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStartTagtime = ".$valueObject->get_resync_start_tagtime();
		$count++;
	}
	
	if ($valueObject->isset_resync_start_tagtime_sequence())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStartTagtimeSequence = ".$valueObject->get_resync_start_tagtime_sequence();
		$count++;
	}
	
	if ($valueObject->isset_resync_end_tagtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncEndTagtime = ".$valueObject->get_resync_end_tagtime();
		$count++;
	}
	
	if ($valueObject->isset_resync_end_tagtime_sequence())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncEndTagtimeSequence = ".$valueObject->get_resync_end_tagtime_sequence();
		$count++;
	}
	
	if ($valueObject->isset_quasidiff_starttime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."quasidiffStarttime = ".$valueObject->get_quasidiff_starttime();
		$count++;
	}
	
	if ($valueObject->isset_quasidiff_endtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."quasidiffEndtime = ".$valueObject->get_quasidiff_endtime();
		$count++;
	}
	
	if ($valueObject->isset_should_resync_set_from())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ShouldResyncSetFrom = ".$valueObject->get_should_resync_set_from();
		$count++;
	}
	
	if ($valueObject->isset_resync_settimestamp())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncSettimestamp = ".$valueObject->get_resync_settimestamp();
		$count++;
	}
	
	if ($valueObject->isset_resync_set_cxtimestamp())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncSetCxtimestamp = ".$valueObject->get_resync_set_cxtimestamp();
		$count++;
	}
	
	if ($valueObject->isset_throttleresync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."throttleresync = ".$valueObject->get_throttleresync();
		$count++;
	}
	
	if ($valueObject->isset_throttle_differentials())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."throttleDifferentials = ".$valueObject->get_throttle_differentials();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_type())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartType = ".$valueObject->get_auto_resync_start_type();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartTime = ".$valueObject->get_auto_resync_start_time();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_hours())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartHours = ".$valueObject->get_auto_resync_start_hours();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_minutes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartMinutes = ".$valueObject->get_auto_resync_start_minutes();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_stop_hours())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStopHours = ".$valueObject->get_auto_resync_stop_hours();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_stop_minutes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStopMinutes = ".$valueObject->get_auto_resync_stop_minutes();
		$count++;
	}
	
	if ($valueObject->isset_max_compression())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."maxCompression = '".$valueObject->get_max_compression()."'";
		$count++;
	}
	
	if ($valueObject->isset_max_un_compression())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."maxUnCompression = '".$valueObject->get_max_un_compression()."'";
		$count++;
	}
	
	if ($valueObject->isset_profiling_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."profilingId = ".$valueObject->get_profiling_id();
		$count++;
	}
	
	if ($valueObject->isset_pair_configure_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."pairConfigureTime = ".$valueObject->get_pair_configure_time();
		$count++;
	}
	
	if ($valueObject->isset_ftp_failure())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ftpFailure = ".$valueObject->get_ftp_failure();
		$count++;
	}
	
	if ($valueObject->isset_phy__lunid())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."Phy_Lunid = '".$valueObject->get_phy__lunid()."'";
		$count++;
	}
	
	if ($valueObject->isset_lun_state())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lun_state = ".$valueObject->get_lun_state();
		$count++;
	}
	
	if ($valueObject->isset_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."offset = ".$valueObject->get_offset();
		$count++;
	}
	
	if ($valueObject->isset_stats())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."stats = ".$valueObject->get_stats();
		$count++;
	}
	
	$sql = $sql.$wsql;    
	$result = $this->databaseUpdate($conn, $sql);
    if ($result != 1) {
        //print "PrimaryKey Error when updating DB!";
    	return false;
	}
 	return true;
}

/**
 * update_byjobid_resyncs_aliasone-method. A user defined or custom updatebyMethod  
 * This method updates by type
 *
 * @param conn         This method requires working database connection.
 * @param params       associate array: sql will be searched and replaced by the matching values
 *					   associated with the token
 */
function update_by_jobid_resyncs_aliasone($conn, $valueObject,$params = array()) {
	$wsql = "sourceHostId= 'srcid' and  sourceDeviceName = 'srcdevicename'  and destinationHostId= 'destid'  and  destinationDeviceName = 'destdevicename' and shouldResync='valone' and isResync='valtwo'";
	$ssql = str_replace(array_keys($params), array_values($params), $wsql);
	$wsql = " WHERE (" . $ssql . ")";
	
	$count = 0;
	$sql = "UPDATE srcLogicalVolumeDestLogicalVolume SET ";
	if ($valueObject->isset_source_host_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."sourceHostId = '".$valueObject->get_source_host_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_source_device_name())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."sourceDeviceName = '".$valueObject->get_source_device_name()."'";
		$count++;
	}
	
	if ($valueObject->isset_destination_host_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."destinationHostId = '".$valueObject->get_destination_host_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_destination_device_name())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."destinationDeviceName = '".$valueObject->get_destination_device_name()."'";
		$count++;
	}
	
	if ($valueObject->isset_full_sync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncStartTime = ".$valueObject->get_full_sync_start_time();
		$count++;
	}
	
	if ($valueObject->isset_full_sync_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncEndTime = ".$valueObject->get_full_sync_end_time();
		$count++;
	}
	
	if ($valueObject->isset_full_sync_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncStatus = ".$valueObject->get_full_sync_status();
		$count++;
	}
	
	if ($valueObject->isset_full_sync_bytes_sent())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fullSyncBytesSent = ".$valueObject->get_full_sync_bytes_sent();
		$count++;
	}
	
	if ($valueObject->isset_resync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStartTime = ".$valueObject->get_resync_start_time();
		$count++;
	}
	
	if ($valueObject->isset_resync_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncEndTime = ".$valueObject->get_resync_end_time();
		$count++;
	}
	
	if ($valueObject->isset_resync_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStatus = ".$valueObject->get_resync_status();
		$count++;
	}
	
	if ($valueObject->isset_last_resync_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastResyncOffset = ".$valueObject->get_last_resync_offset();
		$count++;
	}
	
	if ($valueObject->isset_differential_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."differentialStartTime = ".$valueObject->get_differential_start_time();
		$count++;
	}
	
	if ($valueObject->isset_differential_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."differentialEndTime = ".$valueObject->get_differential_end_time();
		$count++;
	}
	
	if ($valueObject->isset_differential_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."differentialStatus = ".$valueObject->get_differential_status();
		$count++;
	}
	
	if ($valueObject->isset_last_differential_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastDifferentialOffset = ".$valueObject->get_last_differential_offset();
		$count++;
	}
	
	if ($valueObject->isset_returnhome_end_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."returnhomeEndTime = ".$valueObject->get_returnhome_end_time();
		$count++;
	}
	
	if ($valueObject->isset_returnhome_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."returnhomeStartTime = ".$valueObject->get_returnhome_start_time();
		$count++;
	}
	
	if ($valueObject->isset_return_home_status())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."returnHomeStatus = ".$valueObject->get_return_home_status();
		$count++;
	}
	
	if ($valueObject->isset_last_sentinel_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastSentinelChange = ".$valueObject->get_last_sentinel_change();
		$count++;
	}
	
	if ($valueObject->isset_last_t_m_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastTMChange = ".$valueObject->get_last_t_m_change();
		$count++;
	}
	
	if ($valueObject->isset_last_outpost_agent_change())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lastOutpostAgentChange = ".$valueObject->get_last_outpost_agent_change();
		$count++;
	}
	
	if ($valueObject->isset_wan_lag_ticks())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."wanLagTicks = ".$valueObject->get_wan_lag_ticks();
		$count++;
	}
	
	if ($valueObject->isset_should_resync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."shouldResync = ".$valueObject->get_should_resync();
		$count++;
	}
	
	if ($valueObject->isset_remaining_differential_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."remainingDifferentialBytes = ".$valueObject->get_remaining_differential_bytes();
		$count++;
	}
	
	if ($valueObject->isset_remaining_resync_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."remainingResyncBytes = ".$valueObject->get_remaining_resync_bytes();
		$count++;
	}
	
	if ($valueObject->isset_current_r_p_o_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."currentRPOTime = ".$valueObject->get_current_r_p_o_time();
		$count++;
	}
	
	if ($valueObject->isset_status_update_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."statusUpdateTime = ".$valueObject->get_status_update_time();
		$count++;
	}
	
	if ($valueObject->isset_profiling_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."profilingMode = ".$valueObject->get_profiling_mode();
		$count++;
	}
	
	if ($valueObject->isset_rpo_s_l_a_threshold())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."rpoSLAThreshold = ".$valueObject->get_rpo_s_l_a_threshold();
		$count++;
	}
	
	if ($valueObject->isset_max_resync_files_threshold())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."maxResyncFilesThreshold = ".$valueObject->get_max_resync_files_threshold();
		$count++;
	}
	
	if ($valueObject->isset_ftps_source_secure_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ftpsSourceSecureMode = ".$valueObject->get_ftps_source_secure_mode();
		$count++;
	}
	
	if ($valueObject->isset_ftps_dest_secure_mode())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ftpsDestSecureMode = ".$valueObject->get_ftps_dest_secure_mode();
		$count++;
	}
	
	if ($valueObject->isset_one_to_many_source())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."oneToManySource = ".$valueObject->get_one_to_many_source();
		$count++;
	}
	
	if ($valueObject->isset_resync_version())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncVersion = ".$valueObject->get_resync_version();
		$count++;
	}
	
	if ($valueObject->isset_compression_enable())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."compressionEnable = ".$valueObject->get_compression_enable();
		$count++;
	}
	
	if ($valueObject->isset_fast_resync_matched())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fastResyncMatched = ".$valueObject->get_fast_resync_matched();
		$count++;
	}
	
	if ($valueObject->isset_fast_resync_unmatched())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."fastResyncUnmatched = ".$valueObject->get_fast_resync_unmatched();
		$count++;
	}
	
	if ($valueObject->isset_job_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."jobId = ".$valueObject->get_job_id();
		$count++;
	}
	
	if ($valueObject->isset_rule_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ruleId = ".$valueObject->get_rule_id();
		$count++;
	}
	
	if ($valueObject->isset_mediaretent())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."mediaretent = ".$valueObject->get_mediaretent();
		$count++;
	}
	
	if ($valueObject->isset_logs_from())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."logsFrom = '".$valueObject->get_logs_from()."'";
		$count++;
	}
	
	if ($valueObject->isset_logs_to())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."logsTo = '".$valueObject->get_logs_to()."'";
		$count++;
	}
	
	if ($valueObject->isset_volume_group_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."volumeGroupId = '".$valueObject->get_volume_group_id()."'";
		$count++;
	}
	
	if ($valueObject->isset_pre_commandsource())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."preCommandsource = '".$valueObject->get_pre_commandsource()."'";
		$count++;
	}
	
	if ($valueObject->isset_post_commandsource())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."postCommandsource = '".$valueObject->get_post_commandsource()."'";
		$count++;
	}
	
	if ($valueObject->isset_is_resync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."isResync = ".$valueObject->get_is_resync();
		$count++;
	}
	
	if ($valueObject->isset_remaining_quasi_diff_bytes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."remainingQuasiDiffBytes = ".$valueObject->get_remaining_quasi_diff_bytes();
		$count++;
	}
	
	if ($valueObject->isset_is_quasiflag())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."isQuasiflag = ".$valueObject->get_is_quasiflag();
		$count++;
	}
	
	if ($valueObject->isset_resync_start_tagtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStartTagtime = ".$valueObject->get_resync_start_tagtime();
		$count++;
	}
	
	if ($valueObject->isset_resync_start_tagtime_sequence())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncStartTagtimeSequence = ".$valueObject->get_resync_start_tagtime_sequence();
		$count++;
	}
	
	if ($valueObject->isset_resync_end_tagtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncEndTagtime = ".$valueObject->get_resync_end_tagtime();
		$count++;
	}
	
	if ($valueObject->isset_resync_end_tagtime_sequence())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncEndTagtimeSequence = ".$valueObject->get_resync_end_tagtime_sequence();
		$count++;
	}
	
	if ($valueObject->isset_quasidiff_starttime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."quasidiffStarttime = ".$valueObject->get_quasidiff_starttime();
		$count++;
	}
	
	if ($valueObject->isset_quasidiff_endtime())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."quasidiffEndtime = ".$valueObject->get_quasidiff_endtime();
		$count++;
	}
	
	if ($valueObject->isset_should_resync_set_from())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ShouldResyncSetFrom = ".$valueObject->get_should_resync_set_from();
		$count++;
	}
	
	if ($valueObject->isset_resync_settimestamp())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncSettimestamp = ".$valueObject->get_resync_settimestamp();
		$count++;
	}
	
	if ($valueObject->isset_resync_set_cxtimestamp())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."resyncSetCxtimestamp = ".$valueObject->get_resync_set_cxtimestamp();
		$count++;
	}
	
	if ($valueObject->isset_throttleresync())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."throttleresync = ".$valueObject->get_throttleresync();
		$count++;
	}
	
	if ($valueObject->isset_throttle_differentials())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."throttleDifferentials = ".$valueObject->get_throttle_differentials();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_type())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartType = ".$valueObject->get_auto_resync_start_type();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartTime = ".$valueObject->get_auto_resync_start_time();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_hours())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartHours = ".$valueObject->get_auto_resync_start_hours();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_start_minutes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStartMinutes = ".$valueObject->get_auto_resync_start_minutes();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_stop_hours())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStopHours = ".$valueObject->get_auto_resync_stop_hours();
		$count++;
	}
	
	if ($valueObject->isset_auto_resync_stop_minutes())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."autoResyncStopMinutes = ".$valueObject->get_auto_resync_stop_minutes();
		$count++;
	}
	
	if ($valueObject->isset_max_compression())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."maxCompression = '".$valueObject->get_max_compression()."'";
		$count++;
	}
	
	if ($valueObject->isset_max_un_compression())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."maxUnCompression = '".$valueObject->get_max_un_compression()."'";
		$count++;
	}
	
	if ($valueObject->isset_profiling_id())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."profilingId = ".$valueObject->get_profiling_id();
		$count++;
	}
	
	if ($valueObject->isset_pair_configure_time())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."pairConfigureTime = ".$valueObject->get_pair_configure_time();
		$count++;
	}
	
	if ($valueObject->isset_ftp_failure())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."ftpFailure = ".$valueObject->get_ftp_failure();
		$count++;
	}
	
	if ($valueObject->isset_phy__lunid())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."Phy_Lunid = '".$valueObject->get_phy__lunid()."'";
		$count++;
	}
	
	if ($valueObject->isset_lun_state())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."lun_state = ".$valueObject->get_lun_state();
		$count++;
	}
	
	if ($valueObject->isset_offset())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."offset = ".$valueObject->get_offset();
		$count++;
	}
	
	if ($valueObject->isset_stats())
 	{
		if($count>0)
		{
			$sql = $sql . ",";
		}
		
		 $sql = $sql."stats = ".$valueObject->get_stats();
		$count++;
	}
	
	$sql = $sql.$wsql;    
	$result = $this->databaseUpdate($conn, $sql);
    if ($result != 1) {
        //print "PrimaryKey Error when updating DB!";
    	return false;
	}
 	return true;
}

/**
 * deleteAll-method. This method will remove all information from the table that matches
 * this DAO and ValueObject couple. This should be the most efficient way to clear table.
 * Once deleteAll has been called, no valueObject that has been created before can be 
 * restored by calling save. Restoring can only be done using create method but if database 
 * is using automatic surrogate-keys, the resulting object will have different primary-key 
 * than what it was in the deleted object. (Note, the implementation of this method should
 * be different with different DB backends.)
 *
 * @param conn         This method requires working database connection.
 */
function deleteAll($conn) {
	$sql = "DELETE FROM srcLogicalVolumeDestLogicalVolume";
	$result = $this->databaseUpdate($conn, $sql);
	return true;
}

/**
 * coutAll-method. This method will return the number of all rows from table that matches
 * this Dao. The implementation will simply execute "select count(primarykey) from table".
 * If table is empty, the return value is 0. This method should be used before calling
 * findAll, to make sure table has not too many rows.
 *
 * @param conn         This method requires working database connection.
 */
function countAll($conn) {
	$sql = "SELECT count(*) FROM srcLogicalVolumeDestLogicalVolume";
	$allRows = 0;
	$result = $conn->execute($sql);
    if ($row = $conn->nextRow($result))
    	$allRows = $row[0];
    return $allRows;
}

/** 
 * searchMatching-Method. This method provides searching capability to 
 * get matching valueObjects from database. It works by searching all 
 * objects that match permanent instance variables of given object.
 * Upper layer should use this by setting some parameters in valueObject
 * and then  call searchMatching. The result will be 0-N objects in vector, 
 * all matching those criteria you specified. Those instance-variables that
 * have NULL values are excluded in search-criteria.
 *
 * @param conn         This method requires working database connection.
 * @param valueObject  This parameter contains the class instance where search will be based.
 *                     Primary-key field should not be set.
 */
function searchMatching($conn, $valueObject) {
	$first = true;
    $sql = "SELECT * FROM srcLogicalVolumeDestLogicalVolume WHERE 1=1 ";
	
	if ($valueObject->get_source_host_id() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND sourceHostId LIKE '".$valueObject->get_source_host_id()."%' ";
    }
	
	if ($valueObject->get_source_device_name() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND sourceDeviceName LIKE '".$valueObject->get_source_device_name()."%' ";
    }
	
	if ($valueObject->get_destination_host_id() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND destinationHostId LIKE '".$valueObject->get_destination_host_id()."%' ";
    }
	
	if ($valueObject->get_destination_device_name() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND destinationDeviceName LIKE '".$valueObject->get_destination_device_name()."%' ";
    }
	
	if ($valueObject->get_full_sync_start_time() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND fullSyncStartTime LIKE '".$valueObject->get_full_sync_start_time()."%' ";
    }
	
	if ($valueObject->get_full_sync_end_time() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND fullSyncEndTime LIKE '".$valueObject->get_full_sync_end_time()."%' ";
    }
	
	if ($valueObject->get_full_sync_status() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND fullSyncStatus LIKE '".$valueObject->get_full_sync_status()."%' ";
    }
	
	if ($valueObject->get_full_sync_bytes_sent() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND fullSyncBytesSent LIKE '".$valueObject->get_full_sync_bytes_sent()."%' ";
    }
	
	if ($valueObject->get_resync_start_time() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND resyncStartTime LIKE '".$valueObject->get_resync_start_time()."%' ";
    }
	
	if ($valueObject->get_resync_end_time() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND resyncEndTime LIKE '".$valueObject->get_resync_end_time()."%' ";
    }
	
	if ($valueObject->get_resync_status() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND resyncStatus LIKE '".$valueObject->get_resync_status()."%' ";
    }
	
	if ($valueObject->get_last_resync_offset() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND lastResyncOffset LIKE '".$valueObject->get_last_resync_offset()."%' ";
    }
	
	if ($valueObject->get_differential_start_time() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND differentialStartTime LIKE '".$valueObject->get_differential_start_time()."%' ";
    }
	
	if ($valueObject->get_differential_end_time() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND differentialEndTime LIKE '".$valueObject->get_differential_end_time()."%' ";
    }
	
	if ($valueObject->get_differential_status() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND differentialStatus LIKE '".$valueObject->get_differential_status()."%' ";
    }
	
	if ($valueObject->get_last_differential_offset() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND lastDifferentialOffset LIKE '".$valueObject->get_last_differential_offset()."%' ";
    }
	
	if ($valueObject->get_returnhome_end_time() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND returnhomeEndTime LIKE '".$valueObject->get_returnhome_end_time()."%' ";
    }
	
	if ($valueObject->get_returnhome_start_time() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND returnhomeStartTime LIKE '".$valueObject->get_returnhome_start_time()."%' ";
    }
	
	if ($valueObject->get_return_home_status() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND returnHomeStatus LIKE '".$valueObject->get_return_home_status()."%' ";
    }
	
	if ($valueObject->get_last_sentinel_change() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND lastSentinelChange LIKE '".$valueObject->get_last_sentinel_change()."%' ";
    }
	
	if ($valueObject->get_last_t_m_change() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND lastTMChange LIKE '".$valueObject->get_last_t_m_change()."%' ";
    }
	
	if ($valueObject->get_last_outpost_agent_change() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND lastOutpostAgentChange LIKE '".$valueObject->get_last_outpost_agent_change()."%' ";
    }
	
	if ($valueObject->get_wan_lag_ticks() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND wanLagTicks LIKE '".$valueObject->get_wan_lag_ticks()."%' ";
    }
	
	if ($valueObject->get_should_resync() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND shouldResync LIKE '".$valueObject->get_should_resync()."%' ";
    }
	
	if ($valueObject->get_remaining_differential_bytes() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND remainingDifferentialBytes LIKE '".$valueObject->get_remaining_differential_bytes()."%' ";
    }
	
	if ($valueObject->get_remaining_resync_bytes() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND remainingResyncBytes LIKE '".$valueObject->get_remaining_resync_bytes()."%' ";
    }
	
	if ($valueObject->get_current_r_p_o_time() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND currentRPOTime LIKE '".$valueObject->get_current_r_p_o_time()."%' ";
    }
	
	if ($valueObject->get_status_update_time() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND statusUpdateTime LIKE '".$valueObject->get_status_update_time()."%' ";
    }
	
	if ($valueObject->get_profiling_mode() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND profilingMode LIKE '".$valueObject->get_profiling_mode()."%' ";
    }
	
	if ($valueObject->get_rpo_s_l_a_threshold() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND rpoSLAThreshold LIKE '".$valueObject->get_rpo_s_l_a_threshold()."%' ";
    }
	
	if ($valueObject->get_max_resync_files_threshold() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND maxResyncFilesThreshold LIKE '".$valueObject->get_max_resync_files_threshold()."%' ";
    }
	
	if ($valueObject->get_ftps_source_secure_mode() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND ftpsSourceSecureMode LIKE '".$valueObject->get_ftps_source_secure_mode()."%' ";
    }
	
	if ($valueObject->get_ftps_dest_secure_mode() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND ftpsDestSecureMode LIKE '".$valueObject->get_ftps_dest_secure_mode()."%' ";
    }
	
	if ($valueObject->get_one_to_many_source() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND oneToManySource LIKE '".$valueObject->get_one_to_many_source()."%' ";
    }
	
	if ($valueObject->get_resync_version() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND resyncVersion LIKE '".$valueObject->get_resync_version()."%' ";
    }
	
	if ($valueObject->get_compression_enable() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND compressionEnable LIKE '".$valueObject->get_compression_enable()."%' ";
    }
	
	if ($valueObject->get_fast_resync_matched() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND fastResyncMatched LIKE '".$valueObject->get_fast_resync_matched()."%' ";
    }
	
	if ($valueObject->get_fast_resync_unmatched() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND fastResyncUnmatched LIKE '".$valueObject->get_fast_resync_unmatched()."%' ";
    }
	
	if ($valueObject->get_job_id() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND jobId LIKE '".$valueObject->get_job_id()."%' ";
    }
	
	if ($valueObject->get_rule_id() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND ruleId LIKE '".$valueObject->get_rule_id()."%' ";
    }
	
	if ($valueObject->get_mediaretent() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND mediaretent LIKE '".$valueObject->get_mediaretent()."%' ";
    }
	
	if ($valueObject->get_logs_from() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND logsFrom LIKE '".$valueObject->get_logs_from()."%' ";
    }
	
	if ($valueObject->get_logs_to() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND logsTo LIKE '".$valueObject->get_logs_to()."%' ";
    }
	
	if ($valueObject->get_volume_group_id() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND volumeGroupId LIKE '".$valueObject->get_volume_group_id()."%' ";
    }
	
	if ($valueObject->get_pre_commandsource() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND preCommandsource LIKE '".$valueObject->get_pre_commandsource()."%' ";
    }
	
	if ($valueObject->get_post_commandsource() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND postCommandsource LIKE '".$valueObject->get_post_commandsource()."%' ";
    }
	
	if ($valueObject->get_is_resync() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND isResync LIKE '".$valueObject->get_is_resync()."%' ";
    }
	
	if ($valueObject->get_remaining_quasi_diff_bytes() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND remainingQuasiDiffBytes LIKE '".$valueObject->get_remaining_quasi_diff_bytes()."%' ";
    }
	
	if ($valueObject->get_is_quasiflag() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND isQuasiflag LIKE '".$valueObject->get_is_quasiflag()."%' ";
    }
	
	if ($valueObject->get_resync_start_tagtime() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND resyncStartTagtime LIKE '".$valueObject->get_resync_start_tagtime()."%' ";
    }
	
	if ($valueObject->get_resync_start_tagtime_sequence() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND resyncStartTagtimeSequence LIKE '".$valueObject->get_resync_start_tagtime_sequence()."%' ";
    }
	
	if ($valueObject->get_resync_end_tagtime() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND resyncEndTagtime LIKE '".$valueObject->get_resync_end_tagtime()."%' ";
    }
	
	if ($valueObject->get_resync_end_tagtime_sequence() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND resyncEndTagtimeSequence LIKE '".$valueObject->get_resync_end_tagtime_sequence()."%' ";
    }
	
	if ($valueObject->get_quasidiff_starttime() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND quasidiffStarttime LIKE '".$valueObject->get_quasidiff_starttime()."%' ";
    }
	
	if ($valueObject->get_quasidiff_endtime() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND quasidiffEndtime LIKE '".$valueObject->get_quasidiff_endtime()."%' ";
    }
	
	if ($valueObject->get_should_resync_set_from() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND ShouldResyncSetFrom LIKE '".$valueObject->get_should_resync_set_from()."%' ";
    }
	
	if ($valueObject->get_resync_settimestamp() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND resyncSettimestamp LIKE '".$valueObject->get_resync_settimestamp()."%' ";
    }
	
	if ($valueObject->get_resync_set_cxtimestamp() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND resyncSetCxtimestamp LIKE '".$valueObject->get_resync_set_cxtimestamp()."%' ";
    }
	
	if ($valueObject->get_throttleresync() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND throttleresync LIKE '".$valueObject->get_throttleresync()."%' ";
    }
	
	if ($valueObject->get_throttle_differentials() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND throttleDifferentials LIKE '".$valueObject->get_throttle_differentials()."%' ";
    }
	
	if ($valueObject->get_auto_resync_start_type() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND autoResyncStartType LIKE '".$valueObject->get_auto_resync_start_type()."%' ";
    }
	
	if ($valueObject->get_auto_resync_start_time() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND autoResyncStartTime LIKE '".$valueObject->get_auto_resync_start_time()."%' ";
    }
	
	if ($valueObject->get_auto_resync_start_hours() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND autoResyncStartHours LIKE '".$valueObject->get_auto_resync_start_hours()."%' ";
    }
	
	if ($valueObject->get_auto_resync_start_minutes() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND autoResyncStartMinutes LIKE '".$valueObject->get_auto_resync_start_minutes()."%' ";
    }
	
	if ($valueObject->get_auto_resync_stop_hours() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND autoResyncStopHours LIKE '".$valueObject->get_auto_resync_stop_hours()."%' ";
    }
	
	if ($valueObject->get_auto_resync_stop_minutes() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND autoResyncStopMinutes LIKE '".$valueObject->get_auto_resync_stop_minutes()."%' ";
    }
	
	if ($valueObject->get_max_compression() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND maxCompression LIKE '".$valueObject->get_max_compression()."%' ";
    }
	
	if ($valueObject->get_max_un_compression() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND maxUnCompression LIKE '".$valueObject->get_max_un_compression()."%' ";
    }
	
	if ($valueObject->get_profiling_id() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND profilingId LIKE '".$valueObject->get_profiling_id()."%' ";
    }
	
	if ($valueObject->get_pair_configure_time() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND pairConfigureTime LIKE '".$valueObject->get_pair_configure_time()."%' ";
    }
	
	if ($valueObject->get_ftp_failure() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND ftpFailure LIKE '".$valueObject->get_ftp_failure()."%' ";
    }
	
	if ($valueObject->get_phy__lunid() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND Phy_Lunid LIKE '".$valueObject->get_phy__lunid()."%' ";
    }
	
	if ($valueObject->get_lun_state() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND lun_state LIKE '".$valueObject->get_lun_state()."%' ";
    }
	
	if ($valueObject->get_offset() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND offset LIKE '".$valueObject->get_offset()."%' ";
    }
	
	if ($valueObject->get_stats() != "") {
    	if ($first) { $first = false; }
        $sql = $sql."AND stats LIKE '".$valueObject->get_stats()."%' ";
    }
	
    // Prevent accidential full table results.
    // Use findAll if all rows must be returned.
    if ($first)
    	return array();

    $searchResults = $this->listQuery($conn, $sql);
    return $searchResults;
}

/**
 * databaseQuery-method. This method is a helper method for internal use. It will execute
 * all database queries that will return only one row. The resultset will be converted
 * to valueObject. If no rows were found, NotFoundException will be thrown.
 *
 * @param conn         This method requires working database connection.
 * @param stmt         This parameter contains the SQL statement to be excuted.
 * @param valueObject  Class-instance where resulting data will be stored.
 */
 function singleQuery($conn, $sql, $valueObject) {
 	$result = $conn->execute($sql);
	if ($row = $conn->nextRow($result)) {
		$valueObject->setAry($row);
     } else {
        //print " Object Not Found!";
     	return false;
     }
     return true;
 }

/**
 * databaseQuery-method. This method is a helper method for internal use. It will execute
 * all database queries that will return multiple rows. The resultset will be converted
 * to the List of valueObjects. If no rows were found, an empty List will be returned.
 *
 * @param conn         This method requires working database connection.
 * @param stmt         This parameter contains the SQL statement to be excuted.
*/
function listQuery($conn, $sql) {
	$searchResults = array();
    $result = $conn->execute($sql);
    while ($row = $conn->nextRow($result)) {
    	$temp = $this->createValueObject();
    	$temp->setAry($row);
        array_push($searchResults, $temp);
	}
	return $searchResults;
}
/**
 * databaseQuery-method. This method is a helper method for internal use. It will execute
 * all database queries that will return multiple rows. However the results will be unstructured
 * i.e. Not formatted as VO Objects 
 * @param conn         This method requires working database connection.
 * @param stmt         This parameter contains the SQL statement to be excuted.
*/
function listQueryResultset($conn,$sql)
{
	$searchResults = array();
    $result = $conn->execute($sql);
	while ($row = $conn->nextRow($result)) {
        array_push($searchResults, $row);
	}
	return $searchResults;
}

/**
 * databaseUpdate-method. This method is a helper method for internal use. It will execute
 * all database handling that will change the information in tables. SELECT queries will
 * not be executed here however. The return value indicates how many rows were affected.
 * This method will also make sure that if cache is used, it will reset when data changes.
 *
 * @param conn         This method requires working database connection.
 * @param stmt         This parameter contains the SQL statement to be excuted.
 */
function databaseUpdate($conn, $sql) {
	$result = $conn->execute($sql);
	return $result;
}

/** 
 * getCodegenVersion will return information about
 * generator which created these sources.
 */
function get_codegen_version() {
    return  "1.0";
 }
/** 
 * getCodegenTemplateVersion will return information about
 * generator which created these sources.
 */
function get_codegen_template_version() {
    return  "PHPDAO-1.11";
 }

}
?>
