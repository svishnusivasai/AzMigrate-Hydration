<?php
/**
 * This sourcecode has been generated by InMage Source Code Generator version 1.0
 * The usage of generated code is restricted to InMage Systems Inc.
 *
 * frbSchedule Value Object[VO]
 * This class is value object representing database table host
 * This class is needs to be used with associated Dao object
 * Generated Date:	Tue, 27 Nov 2007 14:01:26 +0530	
 * Pattern Version:1.0
 */

class FrbScheduleVO
{

/**
 * Global variables 
 */
 
 public $ary;
 
 
 
/** 
 * Persistent Instance variables. This data is directly 
 * mapped to the columns of database table.
 */

public $id;
public $startTime;
public $repeat;
public $everyDay;
public $everyHour;
public $everyMinute;
public $atYear;
public $atMonth;
public $atDay;
public $atHour;
public $atMinute;

/** 
 * Constructors. Code generator generates two constructors by default.
 * The first one takes no arguments and provides the most simple
 * way to create object instance. The another one takes one
 * argument, which is the primary key of the corresponding table.
 */

function FrbScheduleVO(){

}

/*
	function FrbScheduleVO(idIn){
 this->id=$idIn;
}
*/

/** 
 * Initializes the variables with database specific 
 * defaults.
 */
 function initialize(){
 
	$this->startTime="0000-00-00 00:00:00";
	$this->repeat="0";
	$this->everyDay="0";
	$this->everyHour="0";
	$this->everyMinute="0";
	$this->atYear="0";
	$this->atMonth="0";
	$this->atDay="0";
	$this->atHour="0";
	$this->atMinute="0";
 }
 
/** 
 * Get and Set methods for persistent variables. 
 */

function get_id() {
	return $this->id;
}
function set_id($idIn) { 
	$this->id=$idIn;
}

function isset_id() {
	return isset($this->id);
}


function get_start_time() {
	return $this->startTime;
}
function set_start_time($startTimeIn) { 
	$this->startTime=$startTimeIn;
}

function isset_start_time() {
	return isset($this->startTime);
}


function get_repeat() {
	return $this->repeat;
}
function set_repeat($repeatIn) { 
	$this->repeat=$repeatIn;
}

function isset_repeat() {
	return isset($this->repeat);
}


function get_every_day() {
	return $this->everyDay;
}
function set_every_day($everyDayIn) { 
	$this->everyDay=$everyDayIn;
}

function isset_every_day() {
	return isset($this->everyDay);
}


function get_every_hour() {
	return $this->everyHour;
}
function set_every_hour($everyHourIn) { 
	$this->everyHour=$everyHourIn;
}

function isset_every_hour() {
	return isset($this->everyHour);
}


function get_every_minute() {
	return $this->everyMinute;
}
function set_every_minute($everyMinuteIn) { 
	$this->everyMinute=$everyMinuteIn;
}

function isset_every_minute() {
	return isset($this->everyMinute);
}


function get_at_year() {
	return $this->atYear;
}
function set_at_year($atYearIn) { 
	$this->atYear=$atYearIn;
}

function isset_at_year() {
	return isset($this->atYear);
}


function get_at_month() {
	return $this->atMonth;
}
function set_at_month($atMonthIn) { 
	$this->atMonth=$atMonthIn;
}

function isset_at_month() {
	return isset($this->atMonth);
}


function get_at_day() {
	return $this->atDay;
}
function set_at_day($atDayIn) { 
	$this->atDay=$atDayIn;
}

function isset_at_day() {
	return isset($this->atDay);
}


function get_at_hour() {
	return $this->atHour;
}
function set_at_hour($atHourIn) { 
	$this->atHour=$atHourIn;
}

function isset_at_hour() {
	return isset($this->atHour);
}


function get_at_minute() {
	return $this->atMinute;
}
function set_at_minute($atMinuteIn) { 
	$this->atMinute=$atMinuteIn;
}

function isset_at_minute() {
	return isset($this->atMinute);
}


/** 
 * setAll allows to set all persistent variables in one method call.
 * This is useful, when all data is available and it is needed to 
 * set the initial state of this object. Note that this method will
 * directly modify instance variales, without going trough the 
 * individual set-methods.
 */
function setAll($idIn,$startTimeIn,$repeatIn,$everyDayIn,$everyHourIn,$everyMinuteIn,$atYearIn,$atMonthIn,$atDayIn,$atHourIn,$atMinuteIn){
	$this->id=$idIn;
	$this->startTime=$startTimeIn;
	$this->repeat=$repeatIn;
	$this->everyDay=$everyDayIn;
	$this->everyHour=$everyHourIn;
	$this->everyMinute=$everyMinuteIn;
	$this->atYear=$atYearIn;
	$this->atMonth=$atMonthIn;
	$this->atDay=$atDayIn;
	$this->atHour=$atHourIn;
	$this->atMinute=$atMinuteIn;
}

/** 
 * setAry allows copy the contents of an associative array 
 * to the member variables
 */
function setAry($ary){ 
	$this->ary=$ary;
	$this->id=$ary["id"];
	$this->startTime=$ary["startTime"];
	$this->repeat=$ary["repeat"];
	$this->everyDay=$ary["everyDay"];
	$this->everyHour=$ary["everyHour"];
	$this->everyMinute=$ary["everyMinute"];
	$this->atYear=$ary["atYear"];
	$this->atMonth=$ary["atMonth"];
	$this->atDay=$ary["atDay"];
	$this->atHour=$ary["atHour"];
	$this->atMinute=$ary["atMinute"];
}

/** 
 * returns an associative array representing the object
 * if the object values are loaded as result of DB operation, then the array
 * return would equivalent of the row returned DB resultset 
 */
function getAry(){ 
	$oAry = array();
	if (isset($this->ary))
	{
		$oAry = $this->ary;
	}
	else
	{
		$oAry["id"]=$this->id;
		$oAry["startTime"]=$this->startTime;
		$oAry["repeat"]=$this->repeat;
		$oAry["everyDay"]=$this->everyDay;
		$oAry["everyHour"]=$this->everyHour;
		$oAry["everyMinute"]=$this->everyMinute;
		$oAry["atYear"]=$this->atYear;
		$oAry["atMonth"]=$this->atMonth;
		$oAry["atDay"]=$this->atDay;
		$oAry["atHour"]=$this->atHour;
		$oAry["atMinute"]=$this->atMinute;
	}
	return $oAry;
} 

 /** 
  * hasEqualMapping-method will compare two Host instances
  * and return true if they contain same values in all persistent instance 
  * variables. If hasEqualMapping returns true, it does not mean the objects
  * are the same instance. However it does mean that in that moment, they 
  * are mapped to the same row in database.
  */
function hasEqualMapping($valueObject){
	if ($valueObject->get_id() != $this->id) {
		return(false);
	}
	if ($valueObject->get_start_time() != $this->startTime) {
		return(false);
	}
	if ($valueObject->get_repeat() != $this->repeat) {
		return(false);
	}
	if ($valueObject->get_every_day() != $this->everyDay) {
		return(false);
	}
	if ($valueObject->get_every_hour() != $this->everyHour) {
		return(false);
	}
	if ($valueObject->get_every_minute() != $this->everyMinute) {
		return(false);
	}
	if ($valueObject->get_at_year() != $this->atYear) {
		return(false);
	}
	if ($valueObject->get_at_month() != $this->atMonth) {
		return(false);
	}
	if ($valueObject->get_at_day() != $this->atDay) {
		return(false);
	}
	if ($valueObject->get_at_hour() != $this->atHour) {
		return(false);
	}
	if ($valueObject->get_at_minute() != $this->atMinute) {
		return(false);
	}
    return true;
 }
 
/**
 * toString will return String object representing the state of this 
 * valueObject. This is useful during application development, and 
 * possibly when application is writing object states in textlog.
 */
function toString() {
	$out = $this->get_codegen_version();
	$out = $out."\nclass FrbScheduleVO, mapping to table frbSchedule\n";
	$out = $out."Persistent attributes: \n";
	$out = $out."id = ".$this->id."\n";
	$out = $out."startTime = ".$this->startTime."\n";
	$out = $out."repeat = ".$this->repeat."\n";
	$out = $out."everyDay = ".$this->everyDay."\n";
	$out = $out."everyHour = ".$this->everyHour."\n";
	$out = $out."everyMinute = ".$this->everyMinute."\n";
	$out = $out."atYear = ".$this->atYear."\n";
	$out = $out."atMonth = ".$this->atMonth."\n";
	$out = $out."atDay = ".$this->atDay."\n";
	$out = $out."atHour = ".$this->atHour."\n";
	$out = $out."atMinute = ".$this->atMinute."\n";
	return $out;
}

/**
 * Clone will return identical deep copy of this valueObject.
 * Here, the retuned cloned object will have all its attributes cloned
 */
function __clone() {
	$cloned = new FrbScheduleVO();
	
	 $cloned->set_id($this->id);
	 $cloned->set_start_time($this->startTime);
	 $cloned->set_repeat($this->repeat);
	 $cloned->set_every_day($this->everyDay);
	 $cloned->set_every_hour($this->everyHour);
	 $cloned->set_every_minute($this->everyMinute);
	 $cloned->set_at_year($this->atYear);
	 $cloned->set_at_month($this->atMonth);
	 $cloned->set_at_day($this->atDay);
	 $cloned->set_at_hour($this->atHour);
	 $cloned->set_at_minute($this->atMinute);
	
	return $cloned;
}

/** 
 * getCodegenVersion will return information about
 * generator which created these sources.
 */
function get_codegen_version() {
    return  "1.0";
 }
/** 
 * getCodegenTemplateVersion will return information about
 * generator which created these sources.
 */
function get_codegen_template_version() {
    return  "PHPVO-1.7";
 }

}
?>
