<?php
/**
 * This sourcecode has been generated by InMage Source Code Generator version 1.0
 * The usage of generated code is restricted to InMage Systems Inc.
 *
 * frBindingNexus Value Object[VO]
 * This class is value object representing database table host
 * This class is needs to be used with associated Dao object
 * Generated Date:	Tue, 15 Apr 2008 20:17:00 +0530	
 * Pattern Version:1.0
 */

class FrBindingNexusVO
{

/**
 * Global variables 
 */
 
 public $ary;
 
 
 
/** 
 * Persistent Instance variables. This data is directly 
 * mapped to the columns of database table.
 */

public $initiatorPortWwn;
public $targetPortWwn;
public $sanLunId;
public $sanLunNumber;
public $fabricId;
public $viPortWwn;
public $switchAgentId;
public $vtPortWwn;
public $hostId;
public $vtbPortWwn;
public $atPortWwn;
public $atLunNumber;
public $applianceInitiatorPortWwn;
public $dpcNumber;
public $state;

/** 
 * Constructors. Code generator generates two constructors by default.
 * The first one takes no arguments and provides the most simple
 * way to create object instance. The another one takes one
 * argument, which is the primary key of the corresponding table.
 */

function FrBindingNexusVO(){

}

/*
	function FrBindingNexusVO(applianceInitiatorPortWwnIn,atLunNumberIn,atPortWwnIn,fabricIdIn,hostIdIn,initiatorPortWwnIn,sanLunIdIn,sanLunNumberIn,switchAgentIdIn,targetPortWwnIn,viPortWwnIn,vtPortWwnIn,vtbPortWwnIn){
 this->applianceInitiatorPortWwn=$applianceInitiatorPortWwnIn;
 this->atLunNumber=$atLunNumberIn;
 this->atPortWwn=$atPortWwnIn;
 this->fabricId=$fabricIdIn;
 this->hostId=$hostIdIn;
 this->initiatorPortWwn=$initiatorPortWwnIn;
 this->sanLunId=$sanLunIdIn;
 this->sanLunNumber=$sanLunNumberIn;
 this->switchAgentId=$switchAgentIdIn;
 this->targetPortWwn=$targetPortWwnIn;
 this->viPortWwn=$viPortWwnIn;
 this->vtPortWwn=$vtPortWwnIn;
 this->vtbPortWwn=$vtbPortWwnIn;
}
*/

/** 
 * Initializes the variables with database specific 
 * defaults.
 */
 function initialize(){
 
 }
 
/** 
 * Get and Set methods for persistent variables. 
 */

function get_initiator_port_wwn() {
	return $this->initiatorPortWwn;
}
function set_initiator_port_wwn($initiatorPortWwnIn) { 
	$this->initiatorPortWwn=$initiatorPortWwnIn;
}

function isset_initiator_port_wwn() {
	return isset($this->initiatorPortWwn);
}


function get_target_port_wwn() {
	return $this->targetPortWwn;
}
function set_target_port_wwn($targetPortWwnIn) { 
	$this->targetPortWwn=$targetPortWwnIn;
}

function isset_target_port_wwn() {
	return isset($this->targetPortWwn);
}


function get_san_lun_id() {
	return $this->sanLunId;
}
function set_san_lun_id($sanLunIdIn) { 
	$this->sanLunId=$sanLunIdIn;
}

function isset_san_lun_id() {
	return isset($this->sanLunId);
}


function get_san_lun_number() {
	return $this->sanLunNumber;
}
function set_san_lun_number($sanLunNumberIn) { 
	$this->sanLunNumber=$sanLunNumberIn;
}

function isset_san_lun_number() {
	return isset($this->sanLunNumber);
}


function get_fabric_id() {
	return $this->fabricId;
}
function set_fabric_id($fabricIdIn) { 
	$this->fabricId=$fabricIdIn;
}

function isset_fabric_id() {
	return isset($this->fabricId);
}


function get_vi_port_wwn() {
	return $this->viPortWwn;
}
function set_vi_port_wwn($viPortWwnIn) { 
	$this->viPortWwn=$viPortWwnIn;
}

function isset_vi_port_wwn() {
	return isset($this->viPortWwn);
}


function get_switch_agent_id() {
	return $this->switchAgentId;
}
function set_switch_agent_id($switchAgentIdIn) { 
	$this->switchAgentId=$switchAgentIdIn;
}

function isset_switch_agent_id() {
	return isset($this->switchAgentId);
}


function get_vt_port_wwn() {
	return $this->vtPortWwn;
}
function set_vt_port_wwn($vtPortWwnIn) { 
	$this->vtPortWwn=$vtPortWwnIn;
}

function isset_vt_port_wwn() {
	return isset($this->vtPortWwn);
}


function get_host_id() {
	return $this->hostId;
}
function set_host_id($hostIdIn) { 
	$this->hostId=$hostIdIn;
}

function isset_host_id() {
	return isset($this->hostId);
}


function get_vtb_port_wwn() {
	return $this->vtbPortWwn;
}
function set_vtb_port_wwn($vtbPortWwnIn) { 
	$this->vtbPortWwn=$vtbPortWwnIn;
}

function isset_vtb_port_wwn() {
	return isset($this->vtbPortWwn);
}


function get_at_port_wwn() {
	return $this->atPortWwn;
}
function set_at_port_wwn($atPortWwnIn) { 
	$this->atPortWwn=$atPortWwnIn;
}

function isset_at_port_wwn() {
	return isset($this->atPortWwn);
}


function get_at_lun_number() {
	return $this->atLunNumber;
}
function set_at_lun_number($atLunNumberIn) { 
	$this->atLunNumber=$atLunNumberIn;
}

function isset_at_lun_number() {
	return isset($this->atLunNumber);
}


function get_appliance_initiator_port_wwn() {
	return $this->applianceInitiatorPortWwn;
}
function set_appliance_initiator_port_wwn($applianceInitiatorPortWwnIn) { 
	$this->applianceInitiatorPortWwn=$applianceInitiatorPortWwnIn;
}

function isset_appliance_initiator_port_wwn() {
	return isset($this->applianceInitiatorPortWwn);
}


function get_dpc_number() {
	return $this->dpcNumber;
}
function set_dpc_number($dpcNumberIn) { 
	$this->dpcNumber=$dpcNumberIn;
}

function isset_dpc_number() {
	return isset($this->dpcNumber);
}


function get_state() {
	return $this->state;
}
function set_state($stateIn) { 
	$this->state=$stateIn;
}

function isset_state() {
	return isset($this->state);
}


/** 
 * setAll allows to set all persistent variables in one method call.
 * This is useful, when all data is available and it is needed to 
 * set the initial state of this object. Note that this method will
 * directly modify instance variales, without going trough the 
 * individual set-methods.
 */
function setAll($initiatorPortWwnIn,$targetPortWwnIn,$sanLunIdIn,$sanLunNumberIn,$fabricIdIn,$viPortWwnIn,$switchAgentIdIn,$vtPortWwnIn,$hostIdIn,$vtbPortWwnIn,$atPortWwnIn,$atLunNumberIn,$applianceInitiatorPortWwnIn,$dpcNumberIn,$stateIn){
	$this->initiatorPortWwn=$initiatorPortWwnIn;
	$this->targetPortWwn=$targetPortWwnIn;
	$this->sanLunId=$sanLunIdIn;
	$this->sanLunNumber=$sanLunNumberIn;
	$this->fabricId=$fabricIdIn;
	$this->viPortWwn=$viPortWwnIn;
	$this->switchAgentId=$switchAgentIdIn;
	$this->vtPortWwn=$vtPortWwnIn;
	$this->hostId=$hostIdIn;
	$this->vtbPortWwn=$vtbPortWwnIn;
	$this->atPortWwn=$atPortWwnIn;
	$this->atLunNumber=$atLunNumberIn;
	$this->applianceInitiatorPortWwn=$applianceInitiatorPortWwnIn;
	$this->dpcNumber=$dpcNumberIn;
	$this->state=$stateIn;
}

/** 
 * setAry allows copy the contents of an associative array 
 * to the member variables
 */
function setAry($ary){ 
	$this->ary=$ary;
	$this->initiatorPortWwn=$ary["initiatorPortWwn"];
	$this->targetPortWwn=$ary["targetPortWwn"];
	$this->sanLunId=$ary["sanLunId"];
	$this->sanLunNumber=$ary["sanLunNumber"];
	$this->fabricId=$ary["fabricId"];
	$this->viPortWwn=$ary["viPortWwn"];
	$this->switchAgentId=$ary["switchAgentId"];
	$this->vtPortWwn=$ary["vtPortWwn"];
	$this->hostId=$ary["hostId"];
	$this->vtbPortWwn=$ary["vtbPortWwn"];
	$this->atPortWwn=$ary["atPortWwn"];
	$this->atLunNumber=$ary["atLunNumber"];
	$this->applianceInitiatorPortWwn=$ary["applianceInitiatorPortWwn"];
	$this->dpcNumber=$ary["dpcNumber"];
	$this->state=$ary["state"];
}

/** 
 * returns an associative array representing the object
 * if the object values are loaded as result of DB operation, then the array
 * return would equivalent of the row returned DB resultset 
 */
function getAry(){ 
	$oAry = array();
	if (isset($this->ary))
	{
		$oAry = $this->ary;
	}
	else
	{
		$oAry["initiatorPortWwn"]=$this->initiatorPortWwn;
		$oAry["targetPortWwn"]=$this->targetPortWwn;
		$oAry["sanLunId"]=$this->sanLunId;
		$oAry["sanLunNumber"]=$this->sanLunNumber;
		$oAry["fabricId"]=$this->fabricId;
		$oAry["viPortWwn"]=$this->viPortWwn;
		$oAry["switchAgentId"]=$this->switchAgentId;
		$oAry["vtPortWwn"]=$this->vtPortWwn;
		$oAry["hostId"]=$this->hostId;
		$oAry["vtbPortWwn"]=$this->vtbPortWwn;
		$oAry["atPortWwn"]=$this->atPortWwn;
		$oAry["atLunNumber"]=$this->atLunNumber;
		$oAry["applianceInitiatorPortWwn"]=$this->applianceInitiatorPortWwn;
		$oAry["dpcNumber"]=$this->dpcNumber;
		$oAry["state"]=$this->state;
	}
	return $oAry;
} 

 /** 
  * hasEqualMapping-method will compare two Host instances
  * and return true if they contain same values in all persistent instance 
  * variables. If hasEqualMapping returns true, it does not mean the objects
  * are the same instance. However it does mean that in that moment, they 
  * are mapped to the same row in database.
  */
function hasEqualMapping($valueObject){
	if ($valueObject->get_initiator_port_wwn() != $this->initiatorPortWwn) {
		return(false);
	}
	if ($valueObject->get_target_port_wwn() != $this->targetPortWwn) {
		return(false);
	}
	if ($valueObject->get_san_lun_id() != $this->sanLunId) {
		return(false);
	}
	if ($valueObject->get_san_lun_number() != $this->sanLunNumber) {
		return(false);
	}
	if ($valueObject->get_fabric_id() != $this->fabricId) {
		return(false);
	}
	if ($valueObject->get_vi_port_wwn() != $this->viPortWwn) {
		return(false);
	}
	if ($valueObject->get_switch_agent_id() != $this->switchAgentId) {
		return(false);
	}
	if ($valueObject->get_vt_port_wwn() != $this->vtPortWwn) {
		return(false);
	}
	if ($valueObject->get_host_id() != $this->hostId) {
		return(false);
	}
	if ($valueObject->get_vtb_port_wwn() != $this->vtbPortWwn) {
		return(false);
	}
	if ($valueObject->get_at_port_wwn() != $this->atPortWwn) {
		return(false);
	}
	if ($valueObject->get_at_lun_number() != $this->atLunNumber) {
		return(false);
	}
	if ($valueObject->get_appliance_initiator_port_wwn() != $this->applianceInitiatorPortWwn) {
		return(false);
	}
	if ($valueObject->get_dpc_number() != $this->dpcNumber) {
		return(false);
	}
	if ($valueObject->get_state() != $this->state) {
		return(false);
	}
    return true;
 }
 
/**
 * toString will return String object representing the state of this 
 * valueObject. This is useful during application development, and 
 * possibly when application is writing object states in textlog.
 */
function toString() {
	$out = $this->get_codegen_version();
	$out = $out."\nclass FrBindingNexusVO, mapping to table frBindingNexus\n";
	$out = $out."Persistent attributes: \n";
	$out = $out."initiatorPortWwn = ".$this->initiatorPortWwn."\n";
	$out = $out."targetPortWwn = ".$this->targetPortWwn."\n";
	$out = $out."sanLunId = ".$this->sanLunId."\n";
	$out = $out."sanLunNumber = ".$this->sanLunNumber."\n";
	$out = $out."fabricId = ".$this->fabricId."\n";
	$out = $out."viPortWwn = ".$this->viPortWwn."\n";
	$out = $out."switchAgentId = ".$this->switchAgentId."\n";
	$out = $out."vtPortWwn = ".$this->vtPortWwn."\n";
	$out = $out."hostId = ".$this->hostId."\n";
	$out = $out."vtbPortWwn = ".$this->vtbPortWwn."\n";
	$out = $out."atPortWwn = ".$this->atPortWwn."\n";
	$out = $out."atLunNumber = ".$this->atLunNumber."\n";
	$out = $out."applianceInitiatorPortWwn = ".$this->applianceInitiatorPortWwn."\n";
	$out = $out."dpcNumber = ".$this->dpcNumber."\n";
	$out = $out."state = ".$this->state."\n";
	return $out;
}

/**
 * Clone will return identical deep copy of this valueObject.
 * Here, the retuned cloned object will have all its attributes cloned
 */
function __clone() {
	$cloned = new FrBindingNexusVO();
	
	 $cloned->set_initiator_port_wwn($this->initiatorPortWwn);
	 $cloned->set_target_port_wwn($this->targetPortWwn);
	 $cloned->set_san_lun_id($this->sanLunId);
	 $cloned->set_san_lun_number($this->sanLunNumber);
	 $cloned->set_fabric_id($this->fabricId);
	 $cloned->set_vi_port_wwn($this->viPortWwn);
	 $cloned->set_switch_agent_id($this->switchAgentId);
	 $cloned->set_vt_port_wwn($this->vtPortWwn);
	 $cloned->set_host_id($this->hostId);
	 $cloned->set_vtb_port_wwn($this->vtbPortWwn);
	 $cloned->set_at_port_wwn($this->atPortWwn);
	 $cloned->set_at_lun_number($this->atLunNumber);
	 $cloned->set_appliance_initiator_port_wwn($this->applianceInitiatorPortWwn);
	 $cloned->set_dpc_number($this->dpcNumber);
	 $cloned->set_state($this->state);
	
	return $cloned;
}

/** 
 * getCodegenVersion will return information about
 * generator which created these sources.
 */
function get_codegen_version() {
    return  "1.0";
 }
/** 
 * getCodegenTemplateVersion will return information about
 * generator which created these sources.
 */
function get_codegen_template_version() {
    return  "PHPVO-1.7";
 }

}
?>
