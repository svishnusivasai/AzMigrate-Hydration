#################################################################################
#                      Onebranch Pipelines - PR Build                           #
# This pipeline created by EasyStart from a sample located at:                  #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# ADO Tasks:      https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

trigger: none # https://aka.ms/obpipelines/triggers

parameters: # parameters are shown up in ADO UI in a build queue time
- name: 'debug'
  displayName: 'Enable debug output'
  type: boolean
  default: false

# These variables are related to OneBranch containers, unless you need to add your container info don't change this. OneBranch will send a PR in case a change is required.
variables:
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
  system.debug: ${{ parameters.debug }}
  ENABLE_PRS_DELAYSIGN: 0
  ROOT: $(Build.SourcesDirectory)
  REPOROOT: $(Build.SourcesDirectory)
  OUTPUTROOT: $(REPOROOT)\out
  CLOUDTESTROOT: $(OUTPUTROOT)\CloudTest
  NUGET_XMLDOC_MODE: none

  WindowsContainerImage: 'onebranch.azurecr.io/windows/ltsc2019/vse2019:latest' # Docker image which is used to run non-CloudBuild jobs: https://aka.ms/obpipelines/containers

resources:
  repositories:
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/OneBranch.NonOfficial.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    globalSdl:
      tsa:
        enabled: true
      binskim:
        break: false
      policheck:
        break: true

    stages:
    - stage: build
      jobs:
      - job: main
        pool:
          type: windows  # read more about custom job pool types at https://aka.ms/obpipelines/yaml/jobs

        variables: # More settings at https://aka.ms/obpipelines/yaml/jobs
          ob_outputDirectory: '$(REPOROOT)\out' # this directory is uploaded to pipeline artifacts, cloudvault. More info at https://aka.ms/obpipelines/artifacts
          ob_sdl_binskim_break: true # https://aka.ms/obpipelines/sdl

          # ob_sdl_suppression_suppressionFile: $(Build.SourcesDirectory)\.gdn\build.nonofficial.gdnsuppress

        steps:
          # Restore server NuGet packages.
          - task: NuGetCommand@2
            displayName: 'Restore Server NuGet Packages'
            inputs:
              command: 'restore'
              restoreSolution: '$(REPOROOT)\server\server.sln'
              feedsToUse: 'config'
              nugetConfigPath: '$(REPOROOT)\.config\NuGet.config'

          # Generate version files.
          - task: PowerShell@2
            displayName: 'Generate Version Files'
            inputs:
              targetType: 'filePath'
              filePath: $(REPOROOT)\.pipelines\GenerateVersionFiles.ps1
              arguments: '-SourcesRootDirectory $(REPOROOT)'

          # Build 64-bit server test binaries.
          - task: MSBuild@1
            displayName: 'Build 64-bit Server Test Binaries'
            inputs:
              solution: '$(REPOROOT)\server\server.sln'
              msbuildLocationMethod: 'location'
              msbuildLocation: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe'
              platform: 'x64'
              configuration: 'release'
              msbuildArguments: '/t:CloudTestUT /v:n /nr:false /flp1:Verbosity=n;LogFile=$(OUTPUTROOT)\logs\ServerUTDLL_64-bit.log;Encoding=UTF-8 /flp2:logfile=$(OUTPUTROOT)\logs\ServerUTDLL_64-bit.err;errorsonly'
              clean: false
              maximumCpuCount: true
              logProjectEvents: true

          # Sign CloudTestUT.dll.
          - task: onebranch.pipeline.signing@1
            displayName: 'Code Signing Phase-1'
            inputs:
              command: 'sign'
              signing_environment: 'azure-ado'
              signing_profile: ''
              cp_code: '280'
              disable_strong_name_signing: true
              files_to_sign: 'server/CloudTestUT/bin/Release/CloudTestUT.dll'
              search_root: '$(REPOROOT)/'

          # Copy cloudtest artifacts.
          - task: PowerShell@2
            displayName: 'Copy CloudTest Artifacts'
            inputs:
              targetType: 'inline'
              script: |
                if(!(Test-Path -path $(CLOUDTESTROOT)))
                {
                  New-Item -ItemType directory -Path $(CLOUDTESTROOT)\CloudTestUT
                }

                Copy-Item -Path $(REPOROOT)\host\tests\cloudtest\* -Destination $(CLOUDTESTROOT)\ -Recurse

                Get-ChildItem -Path $(REPOROOT)\server\CloudTestUT\bin\Release -Recurse

                Copy-Item -Path $(REPOROOT)\server\CloudTestUT\bin\Release\* -Destination $(CLOUDTESTROOT)\CloudTestUT -Recurse

                Get-ChildItem -Path $(CLOUDTESTROOT) -Recurse
              workingDirectory: '$(REPOROOT)'

    # https://aka.ms/obpipelines/cloudtest
    # uncomment this section and edit parameters to enable CloudTest
    - stage: cloudtest
      dependsOn: build
      jobs:
      - job: cloudtestjob
        displayName: Pull Request Cloud Test Validation
        timeoutInMinutes: 30
        pool:
          type: cloudtestagentless
        continueOnError: true
        steps:
        - task: CloudTestServerBuildTask@1
          displayName: 'CloudTest'
          inputs:
            connectedServiceName: CloudTest_Prod
            cloudTestTenant: 'asrsrc'
            testMapLocation: '[BuildRoot]\CloudTest\Config\UnitTestTestMap.xml'
            buildDropArtifactName: ''
            buildType: release
            buildArchitecture: amd64
            pipelineArtifactName: 'drop_build_main'
            pipelineArtifactBuildUrl: '$(System.TaskDefinitionsUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)'
            scheduleBuildRequesterAlias: '$(Build.RequestedForEmail)'
            notificationSubscribers: '$(Build.RequestedForEmail),$(BuildRequestorAlias)'
            parserProperties: 'worker:VsTestVersion=V150;CodeCoverageType=Dynamic;worker:TestVar=$(RUN_PIPELINE_VARIABLE);session:RetryOnFailureMode=TestCaseOnSameMachine;worker:EnableLogsProcessing=True;'
            cacheEnabled: 'false'