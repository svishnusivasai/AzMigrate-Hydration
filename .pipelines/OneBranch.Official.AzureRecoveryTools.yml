# Yaml configuration file for generating AzureRecoveryTools official builds.
trigger: none
schedules:
- cron: "30 18 * * *"
  displayName: Daily Build 12:00 AM IST
  branches:
    include:
    - develop
  always: true

variables:
  REPOROOT: $(Build.SourcesDirectory)
  OUTPUTROOT: $(REPOROOT)\out
  CDP_BUILD_TAG: azurerecoverytools

resources:
  repositories: 
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/OneBranch.Official.CrossPlat.yml@templates
  parameters:
    cloudvault:
      enabled: true
      runmode: stage
      artifacts:
        - drop_build_linux_build
        - drop_build_windows_build
        - drop_build_packaging
    globalSdl:
      tsa:
        enabled: true
      binskim:
        break: false
      policheck:
        break: true

    stages:
    - stage: build
      jobs:

      # Windows build job
      - job: windows_build
        pool:
          type: windows

        variables:
          WindowsContainerImage: 'onebranch.azurecr.io/windows/ltsc2019/vse2019:latest'
          ob_outputDirectory: '$(Build.SourcesDirectory)\Out'
          ob_symbolsPublishing_enabled: true
          ob_symbolsPublishing_symbolsFolder: '$(REPOROOT)\Symbols'

        steps:
          # Restore host NuGet packages.
          - task: NuGetCommand@2
            displayName: 'Restore Host NuGet Packages'
            inputs:
              command: 'restore'
              restoreSolution: '$(REPOROOT)\host\host.sln'
              feedsToUse: 'config'
              nugetConfigPath: '$(REPOROOT)\.config\NuGet.config'

          # Generate version files.
          - task: PowerShell@2
            displayName: 'Generate Version Files'
            inputs:
              targetType: 'filePath'
              filePath: $(REPOROOT)\.pipelines\GenerateVersionFiles.ps1
              arguments: '-SourcesRootDirectory $(REPOROOT)'

          # Build AzureRecoveryUtil.exe.
          - task: MSBuild@1
            displayName: 'Build AzureRecoveryUtil.exe'
            inputs:
              solution: '$(REPOROOT)\host\host.sln'
              msbuildLocationMethod: 'location'
              msbuildLocation: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe'
              platform: 'win32'
              configuration: 'release'
              msbuildArguments: '-t:AzureRecoveryUtil /v:n /nr:false /flp1:Verbosity=n;LogFile=$(OUTPUTROOT)\logs\AzureRecoveryUtil.log;Encoding=UTF-8 /flp2:logfile=$(OUTPUTROOT)\logs\AzureRecoveryUtil.err;errorsonly'
              clean: false
              maximumCpuCount: true
              logProjectEvents: true

          # Sign AzureRecoveryUtil.exe
          - task: onebranch.pipeline.signing@1
            displayName: 'Sign Build Artifacts'
            inputs:
             signing_environment: 'azure-ado'
             signing_profile: ''
             cp_code: '280'
             files_to_sign: 'AzureRecoveryUtil.exe'
             search_root: '$(REPOROOT)\host\AzureRecoveryUtil\Release\'

          # Copy build artifacts.
          - task: PowerShell@2
            displayName: 'Copy Build Artifacts'
            inputs:
              targetType: 'inline'
              script: |
                Copy-Item -Path $(REPOROOT)\host\AzureRecoveryUtil\Release\AzureRecoveryUtil.exe $(OUTPUTROOT)\
                Copy-Item -Path $(REPOROOT)\host\AzureRecoveryUtil\Release\AzureRecoveryUtil.pdb $(OUTPUTROOT)\
              workingDirectory: '$(REPOROOT)'

          # Capture symbol files.
          - task: PowerShell@2
            displayName: 'Capture Symbol Files'
            inputs:
              targetType: 'inline'
              script: |
                New-Item -Path $(REPOROOT) -Name "Symbols" -ItemType "Directory" -Force
                Copy-Item -Path $(REPOROOT)\host\AzureRecoveryUtil\Release\AzureRecoveryUtil.pdb $(REPOROOT)\Symbols

      # Linux build job.
      - job: linux_build
        pool:
          type: linux

        variables:
          ONEBRANCH_AME_ACR_LOGIN: cdpx5d0f2841795b49c69ab1c2195fc9a4ea00.azurecr.io
          LinuxContainerImage: 'cdpx5d0f2841795b49c69ab1c2195fc9a4ea00.azurecr.io/official/inmage-azure-siterecovery:ubuntu20_20230130.1'
          ob_outputDirectory: '$(Build.SourcesDirectory)/out'
          ob_linuxSymbolsPublishing_enabled: true
          ob_linuxSymbolsPublishing_symbolsFolder: '$(REPOROOT)/Symbols'

        steps:
          # Build AzureRecoveryUtil binary.
          - task: Bash@3
            displayName: 'Build AzureRecoveryUtil Binary'
            inputs:
              filePath: '$(REPOROOT)/.pipelines/BuildAzureRecoveryUtil.sh'
              failOnStandardError: true

          # Capature symbols for publishing.
          - task: Bash@3
            displayName: 'Capature Symbols For Publishing'
            inputs:
              targetType: 'inline'
              script: |
                mkdir -p $(REPOROOT)/Symbols
                cp -f $(REPOROOT)/host/Linux_x86_64/AzureRecoveryUtil/release/AzureRecoveryUtil $(REPOROOT)/Symbols
                cp -f $(REPOROOT)/host/Linux_x86_64/AzureRecoveryUtil/release/AzureRecoveryUtil.dbg $(REPOROOT)/Symbols
              failOnStandardError: true

          # Copy build artifacts.
          - task: Bash@3
            displayName: 'Copy Build Artifacts'
            inputs:
              targetType: 'inline'
              script: |
                mkdir -p $(Build.SourcesDirectory)/out/logs
                cp -f $(REPOROOT)/host/Linux_x86_64/AzureRecoveryUtil/release/AzureRecoveryUtil $(Build.SourcesDirectory)/out
                cp -f $(REPOROOT)/host/Linux_x86_64/AzureRecoveryUtil/release/AzureRecoveryUtil.dbg $(Build.SourcesDirectory)/out
                cp -f $(REPOROOT)/host/AzureRecoveryUtil/Scripts/linux/{*.sh,network,*.repo} $(Build.SourcesDirectory)/out
                cp -f $(REPOROOT)/host/AzureRecoveryUtilBuild.log $(Build.SourcesDirectory)/out/logs
              failOnStandardError: true

      # Packaging job
      - job: packaging
        dependsOn:
          - windows_build
          - linux_build
        pool:
          type: windows

        variables:
          WindowsContainerImage: 'onebranch.azurecr.io/windows/ltsc2019/vse2019:latest'
          ob_outputDirectory: '$(Build.SourcesDirectory)\out'

        steps:
        # Download Windows build artifacts.
        - task: DownloadPipelineArtifact@2
          displayName: 'Download Windows Build Artifacts'
          inputs:
            path: $(Build.SourcesDirectory)\SourceFiles
            artifact: drop_build_windows_build

        # Download Linux build artifacts.
        - task: DownloadPipelineArtifact@2
          displayName: 'Download Linux Build Artifacts'
          inputs:
            path: $(Build.SourcesDirectory)\SourceFiles
            artifact: drop_build_linux_build

        # Copy AzureRecoveryTools related files.
        - task: CopyFiles@2
          displayName: 'Copy AzureRecoveryTools Related Files'
          inputs:
            SourceFolder: $(Build.SourcesDirectory)\SourceFiles
            Contents: |
              **/*
              !**/StartupScript.sh
              !**/*.dbg
              !**/*.pdb
              !logs/**/*
              !**/build.manifest*
              !**/*.cvrp
              !cvdata/**/*
            TargetFolder: $(Build.SourcesDirectory)\AzureRecoveryTools

        # Create AzureRecoveryTools.zip
        - task: ArchiveFiles@2
          displayName: 'Create AzureRecoveryTools.zip'
          inputs:
            rootFolderOrFile: $(Build.SourcesDirectory)\AzureRecoveryTools
            archiveFile: $(Build.SourcesDirectory)\out\AzureRecoveryTools.zip
            includeRootFolder: false