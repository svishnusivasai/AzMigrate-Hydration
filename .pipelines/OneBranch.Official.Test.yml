# Yaml configuration file for generating test binaries.
trigger: none
schedules:
- cron: "30 19 * * *"
  displayName: Daily Build @01:00 AM IST
  branches:
    include:
    - develop
  always: true

variables:
  REPOROOT: $(Build.SourcesDirectory)
  OUTPUTROOT: $(REPOROOT)\out
  BRANCHNAME: $(Build.SourceBranchName)
  WindowsContainerImage: 'onebranch.azurecr.io/windows/ltsc2019/vse2019:latest'
  CDP_BUILD_TAG: testbinariesbuild

resources:
  repositories: 
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/OneBranch.Official.CrossPlat.yml@templates
  parameters:
    cloudvault:
      enabled: true
      runmode: stage
      artifacts:
        - drop_build_main
    globalSdl:
      tsa:
        enabled: true
      binskim:
        break: false
      policheck:
        break: true

    stages:
    - stage: build
      jobs:
      - job: main
        pool:
          type: windows

        variables:
          ob_outputDirectory: '$(Build.SourcesDirectory)\Out'

        steps:
          # Restore NuGet packages.
          - task: NuGetCommand@2
            displayName: 'Restore NuGet Packages'
            inputs:
              command: 'restore'
              restoreSolution: '$(REPOROOT)\host\host.sln'
              feedsToUse: 'config'
              nugetConfigPath: '$(REPOROOT)\.config\NuGet.config'

          # Generate version files.
          - task: PowerShell@2
            displayName: 'Generate Version Files'
            inputs:
              targetType: 'filePath'
              filePath: $(REPOROOT)\.pipelines\GenerateVersionFiles.ps1
              arguments: '-SourcesRootDirectory $(REPOROOT)'
          
          # Build ComponentDriverDITest binaries.
          - task: MSBuild@1
            displayName: 'Build ComponentDriverDITest Binaries'
            inputs:
              solution: '$(REPOROOT)\host\tests\ComponentDriverDITest.sln'
              msbuildLocationMethod: 'location'
              msbuildLocation: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe'
              platform: 'win32'
              configuration: 'release'
              msbuildArguments: '/v:n /nr:false /flp1:Verbosity=n;LogFile=$(OUTPUTROOT)\logs\ComponentDriverDITest.log;Encoding=UTF-8 /flp2:logfile=$(OUTPUTROOT)\logs\ComponentDriverDITest.err;errorsonly'
              clean: true
              maximumCpuCount: true
              logProjectEvents: true

          # Build DITests binaries.
          - task: MSBuild@1
            displayName: 'Build DITests Binaries'
            inputs:
              solution: '$(REPOROOT)\host\tests\DITests\DITests.sln'
              msbuildLocationMethod: 'location'
              msbuildLocation: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe'
              platform: 'win32'
              configuration: 'release'
              msbuildArguments: '/v:n /nr:false /flp1:Verbosity=n;LogFile=$(OUTPUTROOT)\logs\DITests.log;Encoding=UTF-8 /flp2:logfile=$(OUTPUTROOT)\logs\DITests.err;errorsonly'
              clean: false
              maximumCpuCount: true
              logProjectEvents: true

          # Sign CloudTest binaries
          - task: onebranch.pipeline.signing@1
            displayName: 'Signing CloudTest binaries'
            inputs:
              command: 'sign'
              signing_environment: 'azure-ado'
              signing_profile: ''
              cp_code: '280'
              disable_strong_name_signing: true
              files_to_sign: 'host/tests/cloudtest/**/*.ps1;host/tests/**/*.exe;host/tests/**/*.dll;host/tests/**/*.ps1;host/tests/DITests/**/*.exe;host/tests/DITests/**/*.dll'
              search_root: '$(REPOROOT)/'
              
          # Copy build artifacts.
          - task: PowerShell@2
            displayName: 'Copy Build Artifacts'
            inputs:
              targetType: 'inline'
              script: |
                if(!(Test-Path -path $(OUTPUTROOT)\Test\CVT))
                {
                  New-Item -ItemType directory -Path $(OUTPUTROOT)\Test\CVT
                }
                Copy-Item -Path $(REPOROOT)\host\tests\Release\*.dll -Destination $(OUTPUTROOT)\Test\CVT\
                Copy-Item -Path $(REPOROOT)\host\tests\Release\*.exe -Destination $(OUTPUTROOT)\Test\CVT\
                Copy-Item -Path $(REPOROOT)\host\tests\CVT\*.ps1 -Destination $(OUTPUTROOT)\Test\CVT\
                if(!(Test-Path -path $(OUTPUTROOT)\Test\DITests))
                {
                  New-Item -ItemType directory -Path $(OUTPUTROOT)\Test\DITests
                }
                Copy-Item -Path $(REPOROOT)\host\tests\DITests\Release\*.dll -Destination $(OUTPUTROOT)\Test\DITests\
                Copy-Item -Path $(REPOROOT)\host\tests\DITests\Release\*.exe -Destination $(OUTPUTROOT)\Test\DITests\
                if(!(Test-Path -path $(OUTPUTROOT)\Test\cloudtest))
                {
                  New-Item -ItemType directory -Path $(OUTPUTROOT)\Test\cloudtest
                }
                Copy-Item -Path $(REPOROOT)\host\tests\cloudtest\* -Destination $(OUTPUTROOT)\Test\cloudtest\ -Recurse
                if(!(Test-Path -path $(OUTPUTROOT)\Test\Symbols\CVT))
                {
                  New-Item -ItemType directory -Path $(OUTPUTROOT)\Test\Symbols\CVT
                }
                if(!(Test-Path -path $(OUTPUTROOT)\Test\Symbols\DITests))
                {
                  New-Item -ItemType directory -Path $(OUTPUTROOT)\Test\Symbols\DITests
                }
                Copy-Item -Path $(REPOROOT)\host\tests\Release\*.pdb -Destination $(OUTPUTROOT)\Test\Symbols\CVT\
                Copy-Item -Path $(REPOROOT)\host\tests\DITests\Release\*.pdb -Destination $(OUTPUTROOT)\Test\Symbols\DITests\
              workingDirectory: '$(REPOROOT)'
