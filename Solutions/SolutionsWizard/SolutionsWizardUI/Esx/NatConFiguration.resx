<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="heading.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="localIp.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="natIp.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADAAAABYAAAAgAAAAKAAA
        AC0AAAArAAAAIwAAABoAAAAQAAAABwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAoAAAAiAAAAQwAA
        AFwAAABwAAAAgQAAAIoAAACFAAAAdgAAAGQAAABOAAAALwAAABIAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAACgUM
        CDEaPyyOIVE5xihkRuEwdlP0NYJc/jJ8V/oqaUrtIlQ73Rg8KsgHEQyjAAAAeQAAAEQAAAAWAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAIDyUaOC5yUMs1glz6N4Ve/zeGXv83h1//N4hf/zeHX/82hV3/NoNc/zWCW/4ucU/zESsewwAA
        AIUAAABDAAAAEgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAQOIhgpM3xYyjuSZv87j2X/O5Fm/zyUaP8+l2r/Pplr/z6Xav88kmf/OYti/zeF
        Xv82g1z/MHhU+A4jGb8AAAB+AAAANwAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABAnGxE2hl6xQJ1u/0Cabf9AnW7/QqFx/0Sodv9Hrnr/SbN+/0mz
        fv9GrHn/QaBw/zySZ/83iF//NoNc/y9zUfQKGhKyAAAAYwAAABwAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATWAWllDpXT9RKV0/0Sndf9Fqnf/R656/0q0
        f/5hvo//ZKiF5oHLpv51xp3/U7mG/0Smdf88k2f/N4df/zaDXP8jVz3hAAAAhQAAADQAAAAHAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABz2WaapGrHn/R616/0iv
        e/9IsHz/SbJ9/0+2gv5pwJX+PlxNoJLGq9GY1bb/f8qk/1G4hP9ConL/Oo9k/zaFXf8vdFH1CRYQqAAA
        AFIAAAASAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALW5NKESl
        dOJIsXz/SbJ9/0mzfv9IsXz/SK97/0mzfv9Vo3zsDRMQZY66o4On28H/k9Oz/2/Emf9Hr3v/Pplr/ziJ
        YP82g1z/FzooywAAAHAAAAAjAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABOo5jbUmxff9Jsn7/SrV//0mzfv9Hrnr/Rql4/0etev83dVbHAAAAQ4mynj+r28LynNe5/4HL
        pv9TuYb/QqNy/zuPZf82hV3/J2BD6AIFA5AAAAA8AAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAIQJ1uu0myff9KtX//S7WA/0myff9Gq3j/RKV0/0KicvsdRzKWAAAAKXCS
        gQym1r66oNi8/4vQrf9nwZT/Rqx5/z6Wav83iF//M35Y+woZEbAAAABbAAAAFgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAub04zSK579km0fv9LtoD/SrR//0ive/9EqHb/QqFx/zaC
        XOUGDwtdAAAAFgAAAAGh07pvoNe7/ZPTs/93x5//SbR+/0Ceb/85jGL/NoRd/xxGMdUAAAB6AAAAKgAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI9lWmJSbJ9/0q0f/9MtoH/SbR+/0es
        ef9DpHP/QZ1v/ydfQ8EAAAA7AAAACAAAAACh1Lsjn9a76JjVtv+Dzaj/WryL/0Smdf87kmb/N4Ve/y1u
        TvEBAgGVAAAARAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYPCgxEpXTTSbN+/0u1
        gP9LtoD/SbF9/0Wqd/9CoXH/PZRo+RAoHIMAAAAjAAAAAQAAAAAAAAAAndO4s5zWuf+N0K7/bMOX/0eu
        ev8+mGv/OIhg/zV/Wf0QKR28AAAAYgAAABsAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATR/
        WkpEpnv2QqKB/z+WhP82g4T/LWyD/yJUg/8cQ4T/ECaA9gAAhtIAAJjOAACh1wAAqOIAAK/qCgu08Boh
        t/8jLbf/MUaz/yxXov8rXpH/K2GA/ypldP8cQVTjAgIpkAICLz4CAlILAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZAgAA
        kRUAAI46AACKZBU0gtIWNYn/ChqP/wYOlf8DCJn/AQKf/wAAqv8CArT/FRW5/x8fvP8lJb7yIiK9zBkZ
        uqcZGbp9KzG6W4e0uOaOxLj/gsar/2C9j/9FqHb/PJRo/zeGXv8tb07yBxALogAAAEwAAAAQAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG
        kB0ABY1UAASNkwACjsQAAZPuAACa/wAAof8AAKX/AACr/wUFtP8iIr3/MTHC/zI4vf8uQK39HB+UwxcX
        nW8iIrk1Jye/DwAAAAAAAAAAAAAAAJvQtZOe17r/kNGw/3DFmv9IsHz/P5ps/ziKYf81gVv+FjUmxQAA
        AGkAAAAfAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAEo4jABGNfwAPkcwADpv3AA2k/wAMrP8AC7L/AAi2/wAGt/8TGLv/MzXE/0FDxv88ULb/OWic/zuA
        hP8sZFnWAAAARwAAAA0AAAAAAAAAAAAAAAAAAAAAAAAAAJjOs0Ge17r7ltS1/37KpP9RuIT/QqJy/zqP
        ZP82hV3/I1c94QABAYYAAAA0AAAABwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAdiVMAHZHWAB6j/wAfs/8AHr3/ABzB/wAZwf8AF7//BxrA/yw6yP9PWdD/SGi7/0SI
        mv9Fon//QqNy/z6Ya/wbQS6eAAAALQAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAJLHrA2b0bbEmta4/4jP
        q/9kv5H/Rqp4/z2Vaf83h1//MHZT9wgUDqgAAABSAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAACaDWQApku4AMbb/ADTK/wAxzv8ALsz/ACvL/wAoyf8KLsn/PVfU/1x4
        0v9Qkqj/SrCE/0iwfP9FqHb/QaBw/zaCW+sKFxBqAAAAGQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACYzrOCnde6/5HSsf9zxpz/SbJ9/0Ccbv85imH/NoNc/xY3J8sAAABzAAAAJAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACt6zgBAuv8AR9j/AEXZ/wBC1/8APtX/ADvU/xZJ
        1v9Hbd3/YIfU/1Glmv9MtoH/SbR+/0etev9DpXT/QJ5v/ylkRskAAABDAAAADAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACZ0LQ4nNW575fUtf+By6b/VbqH/0Okc/87kGX/N4Ve/yhjSu0AAA2TAAAAPQAA
        AAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADWC5ABV1f8AWeT/AFXi/wBS
        4P8AT97/AEzd/0p95f9sntHvT62Q/0u1gP9LtoD/SbJ9/0aqeP9ConL/PpZq+xk8KpUAAAAoAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACe2LsFnNK3wpvWuP+Lz63/aMGU/0asef8+lmr/N4hf/zN8
        WfsEC1XWAABsoQAAeTsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEKPuQBb
        y/8AZuj/AGXr/wBi6f8AX+f/DGTn/3up8f9ar5j0SbR+/0y2gf9KtX//SK97/0Sodv9BoHD/NH5Z5wIG
        BFoAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmtC1ap7Xuv2T07P/d8if/0q0
        f/9Anm//OYxi/zaEXf8PJ1ToAASX/wADq90AAauSAACuPw4OtwcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAFixOwBcud8Aatr/AHHv/wBx8f8AbvD/N4vy/4287O5Jsn7/SrR//022gf9JtH7/R6x5/0Ok
        c/9Anm//JFg+vAAAADoAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmtC1HJ/W
        u/GZ1bf/hM2o/1u8i/9EpnX/O5Jm/zeFXv8mXlHxAAp9+wANuf8OGL3/AAi46AAGs6MFCrc8HyK+AQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABmwj8AacrTAHHd/wB47v8Ffvf/bLL5/2y0tONJs37/S7WA/0u2
        gP9JsX3/Rap3/0Khcf89lmr6DyMZfwAAACIAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJrQta2c17n/jdGv/23DmP9Hr3v/Pplr/ziIYP80flj7BhpY5AAVo/8DGsD/ECPC/xYm
        w/8NG77qDxu+gygxxBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAActIpAHTWowB33vUChvz/g8L58Uqw
        gPZJtH7/TLaB/0q0f/9Hr3v/RKd1/0GfcP8xdlPeAAAATwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJjOs1Se2Lv/ldS0/3vJov9NtoH/QaBw/zqNY/82hV3/F0BL5AAc
        jvsAJMP/ACLG/wQjxf8WMMf/JDnK/ys+yrIvP8odAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHjdCQB4
        3VIAh/u4W63Hy0myff9KtX//TLaB/0mzfv9GrHn/Q6Nz/0Cdbv8fSjSqAAAAMwAAAAYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJjOshWc07jamda3/4bOqv9fvo7/Rah2/zyT
        Z/83hl7/JmNW9AEjffEAM8n/ADHO/wAuzP8AK8v/EDXM/y9N0f83UtK0Q1rUMwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAac4wtRad74Umzfv9LtYD/S7WA/0ixfP9FqXf/QqBx/ziJYPENIBZ1AAAAHgAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZz7SQnNe5/4/R
        sP9wxJr/SLB8/z+abP84imH/KG1l/wEykvwAQ9L/AELX/wA+1f8AO9T/ADjS/w9B0/83Xdn/d5DktgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE3hl9XSbJ9/kq0f/9MtoH/SrR//0euev9EpXT/QZ5v/ytr
        S9MBAgFLAAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACa0LVLnda695XUtP9+yqT/UbiE/0Kicv86jmT/FFR4/wBIuP8AVOD/AFLg/wBP3v8ATN3/AEjb/wBF
        2f8oYN3/k63t4QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZAm26sSbN+/0q1f/9MtoH/SbJ9/0ar
        eP9Co3L/Pphr/R5IMqYAAAAuAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACTyq8PnNO4zprWuP+Iz6v/ZL+R/0Snev8eboL/AU+s/wBh3P8AZev/AGLp/wBf
        5/8AXOb/AFnk/xRi5P9Nhun/lLXxxwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACNWPSNGqnjtSbR+/0u2
        gP9LtYD/SLB8/0Wodv9CoHH/N4Ze7ggUDmgAAAAZAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmtC1hJ7Xuv6R0rH/X7Kh/xl3nP8BXrn/AG/g/wB2
        8/8Ac/P/AHHx/wBu8P8CbO7/HXnu/0+V8f9mofLCdajyRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjyQ
        ZnhJsX3+SrR//022gf9KtH//R656/0SldP9Bnm//KmZHygAAAEEAAAAKAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjce2MoLCvPZGmLj/DXC7/wBv
        0P8Afez/AIP6/wCC+v8Af/n/CIH4/xyJ+P8zlPf/R5z3+Fij96ZcpPYhAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAACUKhcsVJs37/S7aA/022gf9Js37/Rqx5/0Oic/8+mmz9FTMkjgAAACYAAAACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHPUCgBsyCYAasRfAWrCpQlx
        xPsAc9T/AH7p/wCI+/8Biv//DZD//xyX//8lmv7/MJ79/zSZ8+8zmPKyQqH4UlKo+wYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABM3xXO0areO5KtH//T7eD/0+3g/9Jsn3/Rqp4/0Ojc/81gVvlAAAAVQAA
        ABMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAc9QEAG7LJgBuy0sAbMh5AGzItABu
        y9wAdNb/AHzl/wCE9P8Kj///HJf//yGZ//8imv//KZz8/yya5/8qlMr/InCW6BI5WpQJGCUwAAAABAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEPJVohEq0f/9RuIT/V7uJ/1O5hv9Js37/Rqp4/kOl
        dP8kWj+wAAAAMgAAAAcAAAAAAAAAAAB64QIAdtoMAHPVFwBy0iIAb85BAG/ObQBy0pgAc9S/AHXY5AB8
        5fwAgvD/AIf5/wOL//8Uk//9HZf/8huW/u0qnfj9O6bw/0uu4v9JsMj/PKig/zuYff84iWT/K2dJ7QQJ
        BpgAAABEAAAADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtZUkWTqp7zV69jf9owZT/asKW/1+9
        jv9LtYD/Rq58/z2ZcfAPQU1tAF+vOQCF9jwAh/lNAIb3aACE9IoAhPSvAIX20ACG+OoAhvjxAIf59ACI
        /O4Aif3gAIn+0wSM/8ULj/+1DZD/nA2Q/4YTk/9tFZT/UBuX/TeWz82frt7M/63exf6V1LT/ZsGT/0So
        dv88kmf/NYNc/RIrH7wAAABhAAAAGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABRlHNEcsSa+oDL
        pf+Hzqr/gMul/2zDl/9Vuof/R616+ilkRokAAAAcAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACv2MMZuuDNx73k
        0P+y4Mn/ldO0/1+9jv9EpXT/PJNn/yJSOtoAAAB3AAAAIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAB+wJ6Jl9S1/6LZvf+h2Lz/j9Gw/3fHn/9gvY77N31ajwAAAB0AAAAEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAut/MJ8Hj0tXC5tT/tODK/5DSsf9au4r/RKZ1/zaGXu8AAABxAAAAIgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACc0LaEsd/I/7Xhy/+r3cT/k9Ky+XW6l9FTlXRyAAAAEwAAAAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALrcyyvB49Krv+LR6a3dxf+Gzqr/VrqI/0CdbuQAAABDAAAAEwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACo18Amtd7KvK7WwrOQuaRzdKOLQVaGbhoAAAAEAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADA5dIEttnHJqrTvlGXzbGSd8Odz0ib
        cXAAAAASAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///x///8AAP//wA///wAA//+AA///AAD//wAD//8AAP/+AAH//wAA//4AAP//AAD//AAA//8AAP/8
        AgD//wAA//wDAH//AAD/+AMAf/8AAP/4B4B//wAA//AHgD//AAD/8AeAP/8AAP/wAAAf/wAA/+AAwB//
        AAD+AA/AH/8AAPgAH+AP/wAA4AAf4A//AADAAD/gD/8AAIAAP/AH/wAAgAA/8AP/AACAAH/4AP8AAMAA
        f/gAPwAA4AD/+AAPAADwAP/8AAcAAPwA//wAAwAA/gH//AABAAD+Af/+AAEAAPwB//4AAQAA/AP//gAD
        AAD8A///AAcAAPgD//4AHwAA+Af/8AA/AADwB/4AAD8AAPAPgAOAPwAA8A///8A/AADgH///4D8AAOB/
        ///wPwAA8/////5/AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>