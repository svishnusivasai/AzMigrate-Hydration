// InMageVssProvider.idl : IDL source for InMageVssProvider
//

// This file will be processed by the MIDL tool to
// produce the type library (InMageVssProvider.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";

import "vss.idl";

[
	object,
	uuid(05A3C961-53BE-4E7C-9E2C-C37B9ACA0386),
	dual,
	nonextensible,
	helpstring("IVacpProvider Interface"),
	pointer_default(unique)
]
interface IVacpProvider : IDispatch{
	[id(1), helpstring("method IsItRemoteTagIssue")] HRESULT IsItRemoteTagIssue([in] USHORT uRemoteSend);
	[id(2), helpstring("method IsItSyncTagIssue")] HRESULT IsItSyncTagIssue([in] USHORT uSyncTag);
	[id(3), helpstring("method EstablishRemoteConInfoForInMageVssProvider")] HRESULT EstablishRemoteConInfoForInMageVssProvider([in] USHORT uPort, [in] unsigned char* serverIp);
	[id(4), helpstring("method StoreRemoteTagsBuffer")] HRESULT StoreRemoteTagsBuffer([in] unsigned char* TagDataBuffer, [in] ULONG ulTagBufferLen);
	[id(5), helpstring("method StoreLocalTagsBuffer")] HRESULT StoreLocalTagsBuffer([in] unsigned char* TagDataBuffer, [in] ULONG ulTagBufferLen, [in] ULONG ulOutBufLen);
	[id(6), helpstring("method IsTagIssuedSuccessfullyDuringCommitTime")] HRESULT IsTagIssuedSuccessfullyDuringCommitTime([in,out] USHORT* ulTagSent);
	[id(7), helpstring("method SetVerifyMode")] HRESULT SetVerifyMode();
	[id(8), helpstring("method RegisterSnapshotSetId")] HRESULT RegisterSnapshotSetId([in] VSS_ID SnapshotSetId);
	[id(9), helpstring("method RegisterWithVss")] HRESULT RegisterWithVss([in] USHORT flags);
};
[
	uuid(D3EF2FD2-99E7-4A5B-AE20-4ABDA039BD53),
	version(1.0),
	helpstring("InMageVssProvider 1.0 Type Library")
]
library InMageVssProviderLib
{
	importlib("stdole2.tlb");
	[
		uuid(5C711BC9-7B99-4C0C-8B66-E65992645A5B),
		helpstring("_IVacpProviderEvents Interface")
	]
	dispinterface _IVacpProviderEvents
	{
		properties:
		methods:
	};
	[
		uuid(A9156A8F-5B37-4C25-A05E-29EE18AE2608),
		helpstring("VacpProvider Class")
	]
	coclass VacpProvider
	{
		[default] interface IVacpProvider;
		[default, source] dispinterface _IVacpProviderEvents;
	};
};
