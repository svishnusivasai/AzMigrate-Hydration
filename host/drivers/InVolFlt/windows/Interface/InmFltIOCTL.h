// This file defines common IOCTL interface for both Disk Filter and Volume Filter driver

#ifndef __INMFLTIOCTL__H__
#define __INMFLTIOCTL__H__


// Device types in the range of 32768+ are allowed for non MS use; similarly for functions 2048-4095
#define FILE_DEVICE_INMAGE   0x00008001

#define IOCTL_INMAGE_PROCESS_START_NOTIFY       CTL_CODE( FILE_DEVICE_INMAGE, 0x800, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_SERVICE_SHUTDOWN_NOTIFY    CTL_CODE( FILE_DEVICE_INMAGE, 0x801, METHOD_BUFFERED, FILE_ANY_ACCESS )

// This IOCTL can be sent on control device object name InMageFilter or can be sent on Volume Object.
// When sent on Volume device the bitmap to be cleared is implicit on the volume device the IOCTL is sent the bitmap is cleared
// When sent on Control device the bitmap volumes GUID has to be sent in InputBuffer.
// GUID format is a2345678-b234-c234-d234-e23456789012
#define IOCTL_INMAGE_CLEAR_DIFFERENTIALS        CTL_CODE( FILE_DEVICE_INMAGE, 0x802, METHOD_BUFFERED, FILE_ANY_ACCESS )

// This IOCTL can be sent on control device object name InMageFilter or can be sent on Volume Object.
// When sent on Volume device, the device to stop filtering is implicit and the device on which the IOCTL 
// is received is stop filtering
// When sent on Control device the volumes GUID has to be sent in InputBuffer.
// GUID format is a2345678-b234-c234-d234-e23456789012
// This IOCTL is considered as nop if IOCTL Is stop filtering and volume is already stopped from filtering
// Similarly for Start filtering if volume is actively fitlering START filtering is considered as nop.
#define IOCTL_INMAGE_STOP_FILTERING_DEVICE       CTL_CODE( FILE_DEVICE_INMAGE, 0x803, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_START_FILTERING_DEVICE      CTL_CODE( FILE_DEVICE_INMAGE, 0x804, METHOD_BUFFERED, FILE_ANY_ACCESS )

// This IOCTL can be sent on control device object name InMageFilter or can be sent on Volume Object.
// When sent on Volume device, the driver sends data regarding the volume on which the IOCTL is received
// When sent on Control device, driver sends data regarding all volumes.
#define IOCTL_INMAGE_GET_VOLUME_STATS           CTL_CODE( FILE_DEVICE_INMAGE, 0x805, METHOD_BUFFERED, FILE_ANY_ACCESS )

#define IOCTL_INMAGE_GET_DIRTY_BLOCKS_TRANS     CTL_CODE( FILE_DEVICE_INMAGE, 0x806, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_COMMIT_DIRTY_BLOCKS_TRANS  CTL_CODE( FILE_DEVICE_INMAGE, 0x807, METHOD_BUFFERED, FILE_ANY_ACCESS )

// This IOCTL can be sent only on control device object name InMageFilter.
// InputBuffer is VOLUME_FLAGS_INPUT and OutputBuffer is VOLUME_FLAGS_OUTPUT
// Output buffer is optional, if present driver returns current volume flags after the current bit operation.
#define IOCTL_INMAGE_SET_VOLUME_FLAGS           CTL_CODE( FILE_DEVICE_INMAGE, 0x808, METHOD_BUFFERED, FILE_ANY_ACCESS )
// This IOCTL can be sent only on control device object name InMageFilter.
// InputBuffer is optional, if present driver contains GUID of the volume.
#define IOCTL_INMAGE_CLEAR_VOLUME_STATS         CTL_CODE( FILE_DEVICE_INMAGE, 0x809, METHOD_BUFFERED, FILE_ANY_ACCESS )

// These IOCTL are sent only on control device object name InMageFilter
// Input is DiskSignature of length 4 bytes, output is NULL
#define IOCTL_INMAGE_MSCS_DISK_ADDED_TO_CLUSTER     CTL_CODE( FILE_DEVICE_INMAGE, 0x80A, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_MSCS_DISK_REMOVED_FROM_CLUSTER CTL_CODE( FILE_DEVICE_INMAGE, 0x80B, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_MSCS_DISK_ACQUIRE          CTL_CODE( FILE_DEVICE_INMAGE, 0x80C, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_MSCS_DISK_RELEASE          CTL_CODE( FILE_DEVICE_INMAGE, 0x80D, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_MSCS_GET_ONLINE_DISKS      CTL_CODE( FILE_DEVICE_INMAGE, 0x854, METHOD_BUFFERED, FILE_ANY_ACCESS )

/**
* This IOCTL returns
* STATUS_NOT_FOUND - if TAG_VOLUME_INPUT_FLAGS_NO_ERROR_IF_GUID_NOT_FOUND specifed and input GUID is not found.
*/
#define IOCTL_INMAGE_TAG_VOLUME                 CTL_CODE( FILE_DEVICE_INMAGE, 0x80E, METHOD_BUFFERED, FILE_ANY_ACCESS )
/**
* This IOCTL is used to set Dirty block notification event on a given volume. Input buffer for this IOCTL contains
* GUID of the volume, and notification handle. If IOCTL is sent on volume device instead of control device, GUID is
* ignored. Output buffer is NULL.
* */
#define IOCTL_INMAGE_SET_DIRTY_BLOCK_NOTIFY_EVENT   CTL_CODE( FILE_DEVICE_INMAGE, 0x80F, METHOD_BUFFERED, FILE_ANY_ACCESS )

#define IOCTL_INMAGE_SET_DATA_FILE_THREAD_PRIORITY  CTL_CODE( FILE_DEVICE_INMAGE, 0x810, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_SET_IO_SIZE_ARRAY              CTL_CODE( FILE_DEVICE_INMAGE, 0x811, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_SET_DATA_SIZE_TO_DISK_LIMIT    CTL_CODE( FILE_DEVICE_INMAGE, 0x812, METHOD_BUFFERED, FILE_ANY_ACCESS )

#define IOCTL_INMAGE_SET_DRIVER_FLAGS               CTL_CODE( FILE_DEVICE_INMAGE, 0x813, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_SET_DATA_NOTIFY_LIMIT          CTL_CODE( FILE_DEVICE_INMAGE, 0x814, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_SET_DRIVER_CONFIGURATION       CTL_CODE( FILE_DEVICE_INMAGE, 0x815, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_SET_RESYNC_REQUIRED            CTL_CODE( FILE_DEVICE_INMAGE, 0x816, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_GET_DATA_MODE_INFO             CTL_CODE( FILE_DEVICE_INMAGE, 0x817, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_RESYNC_START_NOTIFICATION      CTL_CODE( FILE_DEVICE_INMAGE, 0x818, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_RESYNC_END_NOTIFICATION        CTL_CODE( FILE_DEVICE_INMAGE, 0x819, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_SET_WORKER_THREAD_PRIORITY     CTL_CODE( FILE_DEVICE_INMAGE, 0x81A, METHOD_BUFFERED, FILE_ANY_ACCESS )

#define IOCTL_INMAGE_GET_VERSION                    CTL_CODE( FILE_DEVICE_INMAGE, 0x820, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_CUSTOM_COMMAND                 CTL_CODE( FILE_DEVICE_INMAGE, 0x821, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_GET_VOLUME_WRITE_ORDER_STATE   CTL_CODE( FILE_DEVICE_INMAGE, 0x822, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_GET_VOLUME_SIZE                CTL_CODE( FILE_DEVICE_INMAGE, 0x823, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_GET_VOLUME_FLAGS               CTL_CODE( FILE_DEVICE_INMAGE, 0x824, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_SYNC_TAG_VOLUME                CTL_CODE( FILE_DEVICE_INMAGE, 0x825, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_GET_TAG_VOLUME_STATUS          CTL_CODE( FILE_DEVICE_INMAGE, 0x826, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_GET_ADDITIONAL_VOLUME_STATS    CTL_CODE( FILE_DEVICE_INMAGE, 0x827, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_GET_GLOBAL_TIMESTAMP           CTL_CODE( FILE_DEVICE_INMAGE, 0x828, METHOD_BUFFERED, FILE_ANY_ACCESS )

#define IOCTL_INMAGE_SET_DEBUG_INFO                 CTL_CODE( FILE_DEVICE_INMAGE, 0x850, METHOD_BUFFERED, FILE_ANY_ACCESS )

#if DBG
#define IOCTL_INMAGE_ADD_DIRTY_BLOCKS_TEST          CTL_CODE( FILE_DEVICE_INMAGE, 0x852, METHOD_BUFFERED, FILE_ANY_ACCESS )
#endif // DBG
#define IOCTL_INMAGE_SET_MIN_FREE_DATA_SIZE_TO_DISK_LIMIT    CTL_CODE( FILE_DEVICE_INMAGE, 0x853, METHOD_BUFFERED, FILE_ANY_ACCESS )

#define IOCTL_INMAGE_GET_LCN                        CTL_CODE( FILE_DEVICE_INMAGE, 0x855, METHOD_BUFFERED, FILE_ANY_ACCESS )

#define VOLSNAPCONTROLTYPE                              0x00000053 // 'S'
#define IOCTL_VOLSNAP_COMMIT_SNAPSHOT               CTL_CODE(VOLSNAPCONTROLTYPE, 4, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
//DTAP start
// New Disk Filter IOCTL that requires name change 
#define IOCTL_INMAGE_GET_DEVICE_STATS                 CTL_CODE( FILE_DEVICE_INMAGE, 0x805, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_SET_DEVICE_FLAGS                 CTL_CODE( FILE_DEVICE_INMAGE, 0x808, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_CLEAR_DEVICE_STATS               CTL_CODE( FILE_DEVICE_INMAGE, 0x809, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_TAG_DEVICE                       CTL_CODE( FILE_DEVICE_INMAGE, 0x80E, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_GET_DEVICE_WRITE_ORDER_STATE     CTL_CODE( FILE_DEVICE_INMAGE, 0x822, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_GET_DEVICE_TRACKING_SIZE         CTL_CODE( FILE_DEVICE_INMAGE, 0x823, METHOD_BUFFERED, FILE_ANY_ACCESS )
// Deprecated (unused) - IOCTL_INMAGE_GET_DEVICE_FLAGS = 0x824
#define IOCTL_INMAGE_GET_ADDITIONAL_DEVICE_STATS      CTL_CODE( FILE_DEVICE_INMAGE, 0x827, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_GET_DATA_NOTIFY_LIMIT            CTL_CODE( FILE_DEVICE_INMAGE, 0x829, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_TAG_DISK                         CTL_CODE( FILE_DEVICE_INMAGE, 0x82A, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_IOBARRIER_TAG_DISK               CTL_CODE( FILE_DEVICE_INMAGE, 0x82B, METHOD_BUFFERED, FILE_ANY_ACCESS )
//DTAP end

#define IOCTL_INMAGE_HOLD_WRITES                      CTL_CODE( FILE_DEVICE_INMAGE, 0x82C, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_DISTRIBUTED_CRASH_TAG            CTL_CODE( FILE_DEVICE_INMAGE, 0x82D, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_RELEASE_WRITES                   CTL_CODE( FILE_DEVICE_INMAGE, 0x82E, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_COMMIT_DISTRIBUTED_CRASH_TAG     CTL_CODE( FILE_DEVICE_INMAGE, 0x82F, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_GET_NUM_INFLIGHT_IOS             CTL_CODE( FILE_DEVICE_INMAGE, 0x830, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_COMMIT_TAG_DISK                  CTL_CODE( FILE_DEVICE_INMAGE, 0x831, METHOD_BUFFERED, FILE_ANY_ACCESS )

#define IOCTL_INMAGE_GET_MONITORING_STATS             CTL_CODE( FILE_DEVICE_INMAGE, 0x832, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_SET_REPLICATION_STATE            CTL_CODE( FILE_DEVICE_INMAGE, 0x833, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_GET_REPLICATION_STATS            CTL_CODE( FILE_DEVICE_INMAGE, 0x834, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_TAG_PRECHECK                     CTL_CODE( FILE_DEVICE_INMAGE, 0x835, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_GET_DISK_INDEX_LIST              CTL_CODE( FILE_DEVICE_INMAGE, 0x836, METHOD_BUFFERED, FILE_ANY_ACCESS )

#define IOCTL_INMAGE_COMMITDB_FAIL_TRANS              CTL_CODE( FILE_DEVICE_INMAGE, 0x837, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_GET_CXSTATS_NOTIFY               CTL_CODE( FILE_DEVICE_INMAGE, 0x838, METHOD_BUFFERED, FILE_ANY_ACCESS )

#define IOCTL_INMAGE_NOTIFY_SYSTEM_STATE              CTL_CODE( FILE_DEVICE_INMAGE, 0x839, METHOD_BUFFERED, FILE_ANY_ACCESS )

#define IOCTL_INMAGE_SET_SAN_POLICY                   CTL_CODE( FILE_DEVICE_INMAGE, 0x840, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_GET_DRIVER_FLAGS                 CTL_CODE( FILE_DEVICE_INMAGE, 0x841, METHOD_BUFFERED, FILE_ANY_ACCESS )

#define IOCTL_INMAGE_TAG_COMMIT_NOTIFY                CTL_CODE( FILE_DEVICE_INMAGE, 0x842, METHOD_BUFFERED, FILE_ANY_ACCESS )

#define IOCTL_INMAGE_GET_DEVICE_STATE                 CTL_CODE( FILE_DEVICE_INMAGE, 0x843, METHOD_BUFFERED, FILE_ANY_ACCESS )
#define IOCTL_INMAGE_SET_DRAIN_STATE                  CTL_CODE( FILE_DEVICE_INMAGE, 0x844, METHOD_BUFFERED, FILE_ANY_ACCESS )

#define IOCTL_INMAGE_SET_DISK_CLUSTERED               CTL_CODE( FILE_DEVICE_INMAGE, 0x845, METHOD_BUFFERED, FILE_ANY_ACCESS )
#endif // __INMFLTIOCTL__H__
